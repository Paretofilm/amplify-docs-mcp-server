{
  "overview": "# AWS Amplify Gen 2 Documentation for Next.js\n\n## Overview\nThis documentation server provides access to 310 documents covering AWS Amplify Gen 2 integration with Next.js applications.\n\n## Main Categories\n\n### Api Data (3 docs)\nDocumentation for Api Data\n**Key Topics:** amplify, api, authorization, cognito, data\n\n### Authentication (1 docs)\nDocumentation for Authentication\n**Key Topics:** amplify, api, authorization, cognito, data\n\n### Backend Development (192 docs)\nBuild scalable serverless backends with AWS services. Covers data modeling, API development, authentication, storage, and serverless functions.\n**Key Topics:** amplify, api, authentication, authorization, cognito\n\n### Deployment & Hosting (1 docs)\nDeploy your application to AWS, configure custom domains, and set up CI/CD pipelines.\n**Key Topics:** amplify, deployment, hosting\n\n### Frontend & UI (55 docs)\nCreate responsive UIs with Amplify UI components, implement client-side data fetching, and integrate with backend services.\n**Key Topics:** amplify, api, authentication, authorization, cognito\n\n### General Documentation (36 docs)\nCore concepts, architecture overview, and general Amplify documentation.\n**Key Topics:** amplify, api, authentication, authorization, cognito\n\n### Getting Started (8 docs)\nQuick start guides and tutorials to get your Amplify + Next.js application up and running.\n**Key Topics:** amplify, api, authentication, authorization, cognito\n\n### API Reference (7 docs)\nDetailed API references, configuration options, and technical specifications.\n**Key Topics:** amplify, api, authentication, authorization, cognito\n\n### File Storage (6 docs)\nUpload, download, and manage files with Amazon S3 integration.\n**Key Topics:** amplify, api, cognito, data, download\n\n### Troubleshooting (1 docs)\nDocumentation for Troubleshooting\n**Key Topics:** amplify, deployment, function\n\n## Quick Start\n```bash\nnpx create-amplify@latest --template nextjs\n```\n\n## Common Tasks\n- **Set up user authentication**: API Reference\n- **Create GraphQL or REST API**: Connect your app code to API\n- **Handle file uploads**: Working with files/attachments\n- **Deploy application**: Next.js App Router (Server Components)\n- **Work with databases**: Add custom queries and mutations\n",
  "categories": {
    "api-data": {
      "title": "Api Data",
      "doc_count": 3,
      "summary": "Documentation for Api Data",
      "sections": {
        "data": [
          {
            "title": "Connect your app code to API",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-API/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect your app code to API\nConnect your app code to API\nIn this guide, you will connect your application code to the backend API using the Amplify Librarie..."
          },
          {
            "title": "Customize your data model",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\nCustomize your data model\nData modeling capabilities\nEvery data model is defined as part of a data schema (\na.schema()\n). You can e..."
          },
          {
            "title": "Working with files/attachments",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nWorking with files/attachments\nWorking with files/attachments\nThe Storage and GraphQL API categories can be used together to associate a file, such as an ima..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "download",
        "file",
        "function",
        "graphql",
        "iam",
        "lambda",
        "model",
        "mutation",
        "query",
        "rest",
        "s3",
        "schema",
        "storage",
        "subscription",
        "upload"
      ]
    },
    "authentication": {
      "title": "Authentication",
      "doc_count": 1,
      "summary": "Documentation for Authentication",
      "sections": {
        "data": [
          {
            "title": "Customize your auth rules",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\nCustomize your auth rules\nUse the\n.authorization()\nmodifier to configure authorization rules for public, signed-in user, per user, ..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "function",
        "iam",
        "lambda",
        "model",
        "mutation",
        "query",
        "rest",
        "schema",
        "subscription"
      ]
    },
    "backend": {
      "title": "Backend Development",
      "doc_count": 192,
      "summary": "Build scalable serverless backends with AWS services. Covers data modeling, API development, authentication, storage, and serverless functions.",
      "sections": {
        "add-aws-services": [
          {
            "title": "AI/ML Predictions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\nAI/ML Predictions\nAmplify provides provides a solution for using AI and ML cloud services to enhance your application. Some ..."
          },
          {
            "title": "API (REST)",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\nAPI (REST)\nSet up Amplify REST API\nThe API category provides a solution for making HTTP requests to REST API endpoints. The API lib..."
          },
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/reference/",
            "summary": "API Reference\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new users as of May 20 (see the linked doc). The guidance is to use\nAWS End User Messaging\n..."
          },
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/reference/",
            "summary": "API Reference\ndel\nDELETE HTTP request\nParameters\nOption\nRequired\nType\nDescription\ninput\ntrue\nDeleteInput\nInput for DELETE operation\nThrows\nRestApiError\nReturns\nDeleteOperation\ngenerateClient\nGenerates..."
          },
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/reference/",
            "summary": "API Reference\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new users as of May 20 (see the linked doc). The guidance is to use\nAWS End User Messaging\n..."
          },
          {
            "title": "Add any AWS service",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\nAdd any AWS service\nAnalytics\nLearn how to set Analytics resource powered by Pinpoint\nGeo\nModern, interactive maps with location markers and loc..."
          },
          {
            "title": "Analytics",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\nAnalytics\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new users as of May 20 (see..."
          },
          {
            "title": "Automatically track sessions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/auto-track-sessions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nAutomatically track sessions\nAutomatically track sessions\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is n..."
          },
          {
            "title": "Clear messages",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/clear-messages/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nClear messages\nClear messages\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting an..."
          },
          {
            "title": "Configure a geofence collection",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/configure-geofencing/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nConfigure a geofence collection\nConfigure a geofence collection\nA Geofence is a virtual perimeter for a real-world geographic area. A Ge..."
          },
          {
            "title": "Configure location search",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/configure-location-search/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nConfigure location search\nConfigure location search\nAmplify's\ngeo\ncategory enables you to search by places, addresses, and coordinates i..."
          },
          {
            "title": "Create an in-app messaging campaign on AWS Console",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/create-campaign/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nCreate an in-app messaging campaign on AWS Console\nCreate an in-app messaging campaign on AWS Console\nAWS will end support ..."
          },
          {
            "title": "Custom resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/custom-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nCustom resources\nCustom resources\nCustom resources allow you to integrate any AWS service into an Amplify backend. You are responsible for ens..."
          },
          {
            "title": "Define authorization rules",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/customize-authz/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nDefine authorization rules\nDefine authorization rules\nWhen determining the authorization mode for your REST endpoint, there are a..."
          },
          {
            "title": "Delete data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/delete-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nDelete data\nDelete data\nDELETE requests\nTo delete an item via the API endpoint:\nCopy\ncode example\nimport\n{\ndel\n}\nfrom\n'aws-amplif..."
          },
          {
            "title": "Deletion protection and Backup resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/deletion-backup-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nDeletion protection and Backup resources\nDeletion protection and Backup resources\nDeleting a Amplify sandbox with a resource enabled with dele..."
          },
          {
            "title": "Display messages",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/display-messages/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nDisplay messages\nDisplay messages\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer acceptin..."
          },
          {
            "title": "Enable and disable analytics",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/enable-disable/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nEnable and disable analytics\nEnable and disable analytics\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is n..."
          },
          {
            "title": "Fetch data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/fetch-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nFetch data\nFetch data\nTo invoke an endpoint, you need to set input object with required\napiName\noption and optional\nheaders\n,\nque..."
          },
          {
            "title": "Geo",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\nGeo\nSet up Amplify Geo\nAWS Amplify Geo module provides a simple way to get map data, search for places, and reverse geocoding.\nWork with m..."
          },
          {
            "title": "Identify a user",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/identify-user/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nIdentify a user\nIdentify a user\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting ..."
          },
          {
            "title": "Identify entities from images",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/identify-entity/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nIdentify entities from images\nIdentify entities from images\nNote:\nMake sure to complete the\ngetting started\nsection first,..."
          },
          {
            "title": "Identify text",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/identify-text/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nIdentify text\nIdentify text\nNote:\nMake sure to complete the\ngetting started\nsection first, where you will set up the IAM r..."
          },
          {
            "title": "Identify user",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/identify-user/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nIdentify user\nIdentify user\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new use..."
          },
          {
            "title": "In-App Messaging",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\nIn-App Messaging\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new users as ..."
          },
          {
            "title": "Integrate your application",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/integrate-application/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nIntegrate your application\nIntegrate your application\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and i..."
          },
          {
            "title": "Interact with bots",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/interactions/chatbot/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nInteractions\n/\nInteract with bots\nInteract with bots\nAWS will end support for Amazon Lex V1 on September 15, 2025,\n, and is no longer acceptin..."
          },
          {
            "title": "Interactions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/interactions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nInteractions\nInteractions\nAWS will end support for Amazon Lex V1 on September 15, 2025,\n, and is no longer accepting any new users as of March..."
          },
          {
            "title": "Interpret sentiment",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/interpret-sentiment/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nInterpret sentiment\nInterpret sentiment\nNote:\nMake sure to complete the\ngetting started\nsection first, where you will set ..."
          },
          {
            "title": "Label objects in an image",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/label-image/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nLabel objects in an image\nLabel objects in an image\nNote:\nMake sure to complete the\ngetting started\nsection first, where y..."
          },
          {
            "title": "Migrate from Google Maps",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/google-migration/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nMigrate from Google Maps\nMigrate from Google Maps\nAre you using Google Maps or another similar Map Provider and would like to switch ove..."
          },
          {
            "title": "Overriding resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/overriding-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nOverriding resources\nOverriding resources\nBy using overrides, you may create a backend that the Amplify libraries or client config is unable t..."
          },
          {
            "title": "Personalized recommendations",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/personalize-recommendations/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nPersonalized recommendations\nPersonalized recommendations\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is n..."
          },
          {
            "title": "Post data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/post-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nPost data\nPost data\nPOST Requests\nSend a POST request with a JSON body.\nCopy\ncode example\nimport\n{\npost\n}\nfrom\n'aws-amplify/api'\n..."
          },
          {
            "title": "PubSub",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/pubsub/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nPubSub\nPubSub\nSet up Amplify PubSub\nLearn more about how you can use PubSub to pass messages between your app instances and your app’s backend..."
          },
          {
            "title": "Publish",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/pubsub/publish/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nPubSub\n/\nPublish\nPublish\nTo send a message to a topic, use\npublish()\nmethod with your topic name and the message:\nCopy\ncode example\nawait\npubs..."
          },
          {
            "title": "Record events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/record-events/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nRecord events\nRecord events\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any new use..."
          },
          {
            "title": "Resolve conflicts",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/resolve-conflicts/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nResolve conflicts\nResolve conflicts\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accept..."
          },
          {
            "title": "Respond to interaction events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/respond-interaction-events/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nRespond to interaction events\nRespond to interaction events\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n,..."
          },
          {
            "title": "Set up Amplify Analytics",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/set-up-analytics/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nSet up Amplify Analytics\nSet up Amplify Analytics\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer..."
          },
          {
            "title": "Set up Amplify Geo",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/set-up-geo/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nSet up Amplify Geo\nSet up Amplify Geo\nAmplify provides APIs and map UI components for maps and location search for your web apps.You can..."
          },
          {
            "title": "Set up Amplify HTTP API",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/set-up-http-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nSet up Amplify HTTP API\nSet up Amplify HTTP API\nUsing the\nAWS Cloud Development Kit (AWS CDK)\n, you can configure Amplify Functio..."
          },
          {
            "title": "Set up Amplify Interactions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/interactions/set-up-interactions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nInteractions\n/\nSet up Amplify Interactions\nSet up Amplify Interactions\nAWS will end support for Amazon Lex V1 on September 15, 2025,\n, and is ..."
          },
          {
            "title": "Set up Amplify PubSub",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/pubsub/set-up-pubsub/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nPubSub\n/\nSet up Amplify PubSub\nSet up Amplify PubSub\nThe AWS Amplify PubSub category provides connectivity with cloud-based message-oriented m..."
          },
          {
            "title": "Set up Amplify REST API",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/set-up-rest-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nSet up Amplify REST API\nSet up Amplify REST API\nUsing the\nAWS Cloud Development Kit (AWS CDK)\n, you can configure Amplify Functio..."
          },
          {
            "title": "Set up Predictions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nSet up Predictions\nSet up Predictions\nTo enable Predictions we need to set up the appropriate IAM policy for Roles in your..."
          },
          {
            "title": "Set up Predictions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nSet up Predictions\nSet up Predictions\nTo enable Predictions we need to set up the appropriate IAM policy for Roles in your..."
          },
          {
            "title": "Set up in-app messaging",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/set-up-in-app-messaging/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nSet up in-app messaging\nSet up in-app messaging\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no l..."
          },
          {
            "title": "Storing analytics data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/storing-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nStoring analytics data\nStoring analytics data\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer acc..."
          },
          {
            "title": "Streaming analytics data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/streaming-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nStreaming analytics data\nStreaming analytics data\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer..."
          },
          {
            "title": "Subscribe and unsubscribe",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/pubsub/subscribe/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nPubSub\n/\nSubscribe and unsubscribe\nSubscribe and unsubscribe\nSubscribe\nSubscribe to a topic\nIn order to start receiving messages from your pro..."
          },
          {
            "title": "Sync messages",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/sync-messages/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nIn-App Messaging\n/\nSync messages\nSync messages\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no longer accepting any ..."
          },
          {
            "title": "Tagging resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/tagging-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nTagging resources\nTagging resources\nTags are a key-value pair that are applied to AWS resources to hold metadata. Tags are often used to decor..."
          },
          {
            "title": "Test the REST API",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/test-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nTest the REST API\nTest the REST API\nTest the API from the terminal\nIf unauthenticated guest users have access to your REST API yo..."
          },
          {
            "title": "Text to speech",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/text-to-speech/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nText to speech\nText to speech\nNote:\nMake sure to complete the\ngetting started\nsection first, where you will set up the IAM..."
          },
          {
            "title": "Transcribe audio to text",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/transcribe-audio/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nTranscribe audio to text\nTranscribe audio to text\nNote:\nMake sure to complete the\ngetting started\nsection first, where you..."
          },
          {
            "title": "Translate language",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/translate/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAI/ML Predictions\n/\nTranslate language\nTranslate language\nNote:\nMake sure to complete the\ngetting started\nsection first, where you will set up..."
          },
          {
            "title": "Update data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/update-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nUpdate data\nUpdate data\nPUT requests\nTo create or update a item via the API endpoint:\nCopy\ncode example\nimport\n{\nput\n}\nfrom\n'aws-..."
          },
          {
            "title": "Use Amazon Location Service SDK",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/amazon-location-sdk/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nUse Amazon Location Service SDK\nUse Amazon Location Service SDK\nAmplify Geo provides solutions for common use cases with\nAmazon Location..."
          },
          {
            "title": "Use existing AWS resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/existing-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAnalytics\n/\nUse existing AWS resources\nUse existing AWS resources\nAWS will end support for Amazon Pinpoint on October 30, 2026,\n, and is no lo..."
          },
          {
            "title": "Use existing AWS resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/existing-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nAPI (REST)\n/\nUse existing AWS resources\nUse existing AWS resources\nExisting Amazon API Gateway resources can be used with the Amplify Librarie..."
          },
          {
            "title": "Use existing Amazon Location resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/existing-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nUse existing Amazon Location resources\nUse existing Amazon Location resources\nTo use existing Amazon Location Services resources with yo..."
          },
          {
            "title": "Work with geofences",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/geofences/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nWork with geofences\nWork with geofences\nProvisioning geofence resources\nFirst, make sure you've provisioned a geofence collection resour..."
          },
          {
            "title": "Work with location search",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/location-search/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nWork with location search\nWork with location search\nAdd location search functionality on a map\nFirst, make sure you've provisioned a sea..."
          },
          {
            "title": "Work with maps",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/maps/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAdd any AWS service\n/\nGeo\n/\nWork with maps\nWork with maps\nDisplay a map\nFirst, ensure you've provisioned an Amazon Location Service Map resource and configured your..."
          }
        ],
        "data": [
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/reference/",
            "summary": "API Reference\ndel\nDELETE HTTP request\nParameters\nOption\nRequired\nType\nDescription\ninput\ntrue\nDeleteInput\nInput for DELETE operation\nThrows\nRestApiError\nReturns\nDeleteOperation\ngenerateClient\nGenerates..."
          },
          {
            "title": "Add custom queries and mutations",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\nAdd custom queries and mutations\nThe\na.model()\ndata model provides a solid foundation for querying, mutating, and fetching d..."
          },
          {
            "title": "Add custom real-time subscriptions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-subscription/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom real-time subscriptions\nAdd custom real-time subscriptions\nCreate a custom real-time subscription for any mutation to enable PubSub use cases.\nDef..."
          },
          {
            "title": "Add fields to data model",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/add-fields/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\n/\nAdd fields to data model\nAdd fields to data model\nAmplify Data supports all AWS AppSync scalar types as field types. The followin..."
          },
          {
            "title": "Batch DynamoDB Operations",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/batch-ddb-operations/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nBatch DynamoDB Operations\nBatch DynamoDB Operations\nBatch DynamoDB operations allow you to add multiple items in single mu..."
          },
          {
            "title": "Configure custom identity and group claims",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/configure-custom-identity-and-group-claim/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nConfigure custom identity and group claims\nConfigure custom identity and group claims\nAmplify Data supports using custom identity..."
          },
          {
            "title": "Connect to AWS AppSync Events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-event-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to AWS AppSync Events\nConnect to AWS AppSync Events\nThis guide walks through how you can connect to AWS AppSync Events using the Amplify library.\nAWS..."
          },
          {
            "title": "Connect to Amazon Bedrock for generative AI use cases",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon Bedrock for generative AI use cases\nConnect to Amazon Bedrock for generative AI use cases\nAmazon Bedrock..."
          },
          {
            "title": "Connect to Amazon EventBridge to send and receive events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-eventbridge-datasource/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon EventBridge to send and receive events\nConnect to Amazon EventBridge to send and receive events\nAmazon E..."
          },
          {
            "title": "Connect to Amazon OpenSearch for search and aggregate queries",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon OpenSearch for search and aggregate queries\nConnect to Amazon OpenSearch for search and aggregate querie..."
          },
          {
            "title": "Connect to Amazon Polly for Text-To-Speech APIs",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-polly/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon Polly for Text-To-Speech APIs\nConnect to Amazon Polly for Text-To-Speech APIs\nAmazon Polly is a text-to-..."
          },
          {
            "title": "Connect to Amazon Rekognition for Image Analysis APIs",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon Rekognition for Image Analysis APIs\nConnect to Amazon Rekognition for Image Analysis APIs\nAmazon Rekogni..."
          },
          {
            "title": "Connect to Amazon Translate for language translation APIs",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-translate/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to Amazon Translate for language translation APIs\nConnect to Amazon Translate for language translation APIs\nAmazon..."
          },
          {
            "title": "Connect to an external HTTP endpoint",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-http-datasource/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nAdd custom queries and mutations\n/\nConnect to an external HTTP endpoint\nConnect to an external HTTP endpoint\nThe HTTP Datasource allows you to quickly config..."
          },
          {
            "title": "Connect to data from Server-side Runtimes",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to data from Server-side Runtimes\nConnect to data from Server-side Runtimes\nNext.js server runtime\nConnect to Amplify Data from Next.js Server-side R..."
          },
          {
            "title": "Connect to existing data sources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to existing data sources\nConnect to existing data sources\nConnect your app to existing MySQL and PostgreSQL database\nLearn how to connect your app to..."
          },
          {
            "title": "Connect to external Amazon DynamoDB data sources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to existing data sources\n/\nConnect to external Amazon DynamoDB data sources\nConnect to external Amazon DynamoDB data sources\nThe\na.model()\ndata model..."
          },
          {
            "title": "Connect your app to existing MySQL and PostgreSQL database",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-postgres-mysql-database/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to existing data sources\n/\nConnect your app to existing MySQL and PostgreSQL database\nConnect your app to existing MySQL and PostgreSQL database\nAmpl..."
          },
          {
            "title": "Create, update, and delete application data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/mutate-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCreate, update, and delete application data\nCreate, update, and delete application data\nIn this guide, you will learn how to create, update, and delete your ..."
          },
          {
            "title": "Custom data access using Lambda functions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/custom-data-access-patterns/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nCustom data access using Lambda functions\nCustom data access using Lambda functions\nYou can define your own custom authorization ..."
          },
          {
            "title": "Customize data model identifiers",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/identifiers/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\n/\nCustomize data model identifiers\nCustomize data model identifiers\nIdentifiers are defined using the\n.identifier()\nmethod on a mod..."
          },
          {
            "title": "Customize secondary indexes",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/secondary-index/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\n/\nCustomize secondary indexes\nCustomize secondary indexes\nYou can optimize your list queries based on \"secondary indexes\". For exam..."
          },
          {
            "title": "Data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\nData\nSet up Amplify Data\nCreate a new cloud API that connects your app with new or existing data sources.\nConnect your app code to API\nLearn how to connect you..."
          },
          {
            "title": "Disable Operations",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/disable-operations/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\n/\nDisable Operations\nDisable Operations\nThe\ndisableOperations\nmethod allows you to selectively disable specific GraphQL operations ..."
          },
          {
            "title": "Enable logging",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/enable-logging/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nEnable logging\nEnable logging\nYou can enable logging to debug your GraphQL API using Amazon CloudWatch logs. To learn more about logging and monitoring capab..."
          },
          {
            "title": "Field-level validation",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/field-level-validation/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nField-level validation\nField-level validation\nYou can enable field-level validation in your model schema by chaining a\nvalidate\nfunction to the field.\nExampl..."
          },
          {
            "title": "Grant Lambda function access to API and Data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/grant-lambda-function-access-to-api/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nGrant Lambda function access to API and Data\nGrant Lambda function access to API and Data\nFunction access to\ndefineData\ncan be co..."
          },
          {
            "title": "Manage Data with Amplify console",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/manage-with-amplify-console/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nManage Data with Amplify console\nManage Data with Amplify console\nThe\nData manager\npage in the Amplify Console offers a user-friendly interface for managing ..."
          },
          {
            "title": "Modeling relationships",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/relationships/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your data model\n/\nModeling relationships\nModeling relationships\nWhen modeling application data, you often need to establish relationships between d..."
          },
          {
            "title": "Modify Amplify-generated AWS resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/override-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nModify Amplify-generated AWS resources\nModify Amplify-generated AWS resources\nAmplify GraphQL API uses a variety of auto-generated, underlying AWS services a..."
          },
          {
            "title": "Multi-user data access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/multi-user-data-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nMulti-user data access\nMulti-user data access\nThe\nownersDefinedIn\nrule grants a set of users access to a record by automatically ..."
          },
          {
            "title": "Next.js server runtime",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nextjs-server-runtime/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to data from Server-side Runtimes\n/\nNext.js server runtime\nNext.js server runtime\nThis guide walks through how you can connect to Amplify Data from N..."
          },
          {
            "title": "Nuxt.js server runtime",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nuxtjs-server-runtime/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nConnect to data from Server-side Runtimes\n/\nNuxt.js server runtime\nNuxt.js server runtime\nThis guide walks through how you can connect to Amplify Data from N..."
          },
          {
            "title": "Optimistic UI",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/optimistic-ui/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nOptimistic UI\nOptimistic UI\nAmplify Data can be used with\nTanStack Query\nto implement optimistic UI, allowing CRUD operations to be rendered immediately on t..."
          },
          {
            "title": "Per-user/per-owner data access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/per-user-per-owner-data-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nPer-user/per-owner data access\nPer-user/per-owner data access\nThe\nowner\nauthorization strategy restricts operations on a record t..."
          },
          {
            "title": "Public data access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/public-data-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nPublic data access\nPublic data access\nThe public authorization strategy grants everyone access to the API, which is protected beh..."
          },
          {
            "title": "Read application data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/query-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nRead application data\nRead application data\nYou can read application data using the Amplify Data client. In this guide, we will review the difference between..."
          },
          {
            "title": "Set up Amplify Data",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/set-up-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nSet up Amplify Data\nSet up Amplify Data\nIn this guide, you will learn how to set up Amplify Data. This includes building a real-time API and database using T..."
          },
          {
            "title": "Signed-in user data access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/signed-in-user-data-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nSigned-in user data access\nSigned-in user data access\nThe\nauthenticated\nauthorization strategy restricts record access to only si..."
          },
          {
            "title": "Subscribe to real-time events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/subscribe-data/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nSubscribe to real-time events\nSubscribe to real-time events\nIn this guide, we will outline the benefits of enabling real-time data integrations and how to se..."
          },
          {
            "title": "Use OpenID Connect as an authorization provider",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/using-oidc-authorization-provider/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nUse OpenID Connect as an authorization provider\nUse OpenID Connect as an authorization provider\nPrivate, owner, and group authori..."
          },
          {
            "title": "User group-based data access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/user-group-based-data-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nData\n/\nCustomize your auth rules\n/\nUser group-based data access\nUser group-based data access\nYou can use the\ngroup\nauthorization strategy to restrict access based o..."
          }
        ],
        "auth": [
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/reference/",
            "summary": "API Reference\nassociateWebAuthnCredential\nRegisters a new passkey for an authenticated user\nThrows\nPasskeyError\n:\nThrown when intermediate state is invalid\nAuthError\n:\nThrown when user is unauthentica..."
          },
          {
            "title": "Advanced workflows",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/advanced-workflows/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nAdvanced workflows\nAdvanced workflows\nSubscribing to Events\nYou can take specific actions when users sign-in or sign-out by subscribing to authenti..."
          },
          {
            "title": "Authentication",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\nAuthentication\nSet up Amplify Auth\nLearn how to set up and connect your backend resources for authentication in Amplify.\nConcepts\nLearn more about wh..."
          },
          {
            "title": "Concepts",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\nConcepts\nAmplify helps you secure your application while providing an easy sign-in experience for your users. This experience is influence..."
          },
          {
            "title": "Connect your frontend",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\nConnect your frontend\nUsing the Authenticator\nLearn how to use the Authenticator connected component from the Amplify UI libr..."
          },
          {
            "title": "Customize auth lifecycle",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/customize-auth-lifecycle/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nCustomize auth lifecycle\nCustomize auth lifecycle\nEmail customization\nLearn how to customize emails your users receive when signing up\nTriggers\nLea..."
          },
          {
            "title": "Delete user account",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/delete-user-account/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nDelete user account\nDelete user account\nEmpowering users to delete their account can improve trust and transparency. You ca..."
          },
          {
            "title": "Email",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/email/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nEmail\nEmail\nBy default Amplify Auth is scaffolded with\nemail\nas the default method for user sign-in.\namplify/auth/resource.ts\nCopy\nampli..."
          },
          {
            "title": "Email customization",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/customize-auth-lifecycle/email-customization/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nCustomize auth lifecycle\n/\nEmail customization\nEmail customization\nCustomize the Verification Email\nBy default, Amplify Auth resources are scaffold..."
          },
          {
            "title": "Examples",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/examples/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nExamples\nExamples\nMicrosoft Entra ID (SAML)\nLearn how to connect a Microsoft Entra ID provider with SAML..."
          },
          {
            "title": "External identity providers",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/external-identity-providers/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nExternal identity providers\nExternal identity providers\nBefore you configure external sign-in with Amplify Auth you will need to set up ..."
          },
          {
            "title": "Grant access to auth resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/grant-access-to-auth-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nGrant access to auth resources\nGrant access to auth resources\nAmplify Auth can be defined with an\naccess\nproperty, which allows other resources to ..."
          },
          {
            "title": "Guest access",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/guest-access/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nGuest access\nGuest access\nAmplify Auth can be configured to automatically obtain guest credentials once the device is online so that you..."
          },
          {
            "title": "Listen to auth events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/listen-to-auth-events/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nListen to auth events\nListen to auth events\nAmplify Auth emits events during authentication flows, which enables you to rea..."
          },
          {
            "title": "Manage WebAuthn credentials",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/manage-webauthn-credentials/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\n/\nManage WebAuthn credentials\nManage WebAuthn credentials\nAmplify Auth uses passkeys as the credential mechanism for WebAuthn. The fol..."
          },
          {
            "title": "Manage devices",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/manage-devices/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\n/\nManage devices\nManage devices\nAmplify Auth enables you to track devices your users use for auditing, MFA, and more. Before you begin..."
          },
          {
            "title": "Manage passwords",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/manage-passwords/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\n/\nManage passwords\nManage passwords\nAmplify Auth provides a secure way for your users to change their password or recover a forgotten ..."
          },
          {
            "title": "Manage user attributes",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/manage-user-attributes/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nManage user attributes\nManage user attributes\nUser attributes such as email address, phone number help you identify individ..."
          },
          {
            "title": "Manage user sessions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/manage-user-sessions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nManage user sessions\nManage user sessions\nAmplify Auth provides access to current user sessions and tokens to help you retr..."
          },
          {
            "title": "Manage users",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\nManage users\nWith admin actions\nLearn how to manage users with Admin Actions\nManage passwords\nLearn how to manage user passwords\nManag..."
          },
          {
            "title": "Manage users with Amplify console",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/with-amplify-console/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\n/\nManage users with Amplify console\nManage users with Amplify console\nThe\nUser management\npage in the Amplify console provides a user-..."
          },
          {
            "title": "Microsoft Entra ID (SAML)",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/examples/microsoft-entra-id-saml/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nExamples\n/\nMicrosoft Entra ID (SAML)\nMicrosoft Entra ID (SAML)\nMicrosoft Entra ID can be configured as a SAML provider for use with Amazon Cognito...."
          },
          {
            "title": "Modify Amplify-generated Cognito resources with CDK",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/modify-resources-with-cdk/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nModify Amplify-generated Cognito resources with CDK\nModify Amplify-generated Cognito resources with CDK\nAmplify Auth provides sensible defaults for..."
          },
          {
            "title": "Moving to production",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/moving-to-production/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nMoving to production\nMoving to production\nAmplify Auth provisions\nAmazon Cognito\nresources that are provisioned with limited capabilities for sendi..."
          },
          {
            "title": "Multi-factor authentication",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/multi-factor-authentication/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nMulti-factor authentication\nMulti-factor authentication\nAmplify Auth supports multi-factor authentication (MFA) for user sign-in flows. ..."
          },
          {
            "title": "Multi-step sign-in",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/multi-step-sign-in/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nMulti-step sign-in\nMulti-step sign-in\nAfter a user has finished signup, they can proceed to sign in. Amplify Auth signin fl..."
          },
          {
            "title": "Passwordless",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/passwordless/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nPasswordless\nPasswordless\nAmplify supports the use of passwordless authentication flows using the following methods:\nSMS-based one-time ..."
          },
          {
            "title": "Phone",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/phone/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nPhone\nPhone\nBy default Amplify Auth is scaffolded with\nemail\nas the default method for user sign-in, however this can be changed or exte..."
          },
          {
            "title": "Set up Amplify Auth",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/set-up-auth/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nSet up Amplify Auth\nSet up Amplify Auth\nAmplify Auth is powered by\nAmazon Cognito\n. Cognito is a robust user directory service that handles user re..."
          },
          {
            "title": "Sign-in",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-in/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nSign-in\nSign-in\nAmplify provides a client library that enables you to interact with backend resources such as Amplify Auth...."
          },
          {
            "title": "Sign-out",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-out/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nSign-out\nSign-out\nAmplify provides a client library that enables you to interact with backend resources such as Amplify Aut..."
          },
          {
            "title": "Sign-up",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-up/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nSign-up\nSign-up\nAmplify provides a client library that enables you to interact with backend resources such as Amplify Auth...."
          },
          {
            "title": "Switching authentication flows",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/switching-authentication-flows/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nSwitching authentication flows\nSwitching authentication flows\nFor client side authentication there are four different flows..."
          },
          {
            "title": "Tokens and credentials",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/tokens-and-credentials/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nTokens and credentials\nTokens and credentials\nAmplify Auth interacts with its underlying\nAmazon Cognito user pool\nas an OpenID Connect (..."
          },
          {
            "title": "Triggers",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/customize-auth-lifecycle/triggers/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nCustomize auth lifecycle\n/\nTriggers\nTriggers\nAmplify Auth's behavior can be customized through the use of triggers. A trigger is defined as a Funct..."
          },
          {
            "title": "Use existing Cognito resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/use-existing-cognito-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nUse existing Cognito resources\nUse existing Cognito resources\nAmplify Auth can be configured to use an existing Amazon Cognito user pool and identi..."
          },
          {
            "title": "User attributes",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/user-attributes/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nUser attributes\nUser attributes\nAmplify Auth stores user profile information in user attributes. When the default method for user sign-i..."
          },
          {
            "title": "User groups",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/user-groups/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nUser groups\nUser groups\nAmplify Auth provides a mechanism that allows you to group users. Assigning users to groups enable you to custom..."
          },
          {
            "title": "Usernames",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/usernames/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConcepts\n/\nUsernames\nUsernames\nAmplify Auth does not support signing in with only username and password, however can be configured to enable userna..."
          },
          {
            "title": "Using the Authenticator",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/using-the-authenticator/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nConnect your frontend\n/\nUsing the Authenticator\nUsing the Authenticator\nThe quickest way to get started with Amplify Auth in your frontend applicat..."
          },
          {
            "title": "With admin actions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/with-admin-actions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nAuthentication\n/\nManage users\n/\nWith admin actions\nWith admin actions\nAmplify Auth can be managed with the\nAWS SDK's\n@aws-sdk/client-cognito-identity-provider\npacka..."
          }
        ],
        "storage": [
          {
            "title": "API Reference",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/reference/",
            "summary": "API Reference\ncopy\nCopy an object from a source to a destination object within the same bucket.\nParameters\nOption\nRequired\nType\nDescription\ninput\ntrue\nStorageCopyInputWithPath\nThe\nCopyWithPathInput\nob..."
          },
          {
            "title": "Copy files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/copy-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nCopy files\nCopy files\nNote:\nYou can only copy files up to 5GB in a single operation\nYou can copy an existing file to a different path within the storage b..."
          },
          {
            "title": "Customize authorization rules",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/authorization/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nCustomize authorization rules\nCustomize authorization rules\nCustomize authorization for your storage bucket by defining access to file paths for guests, a..."
          },
          {
            "title": "Download files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nDownload files\nDownload files\nStorage Image React UI Component\nYou can easily display images in your app by using the cloud-connected Storage Image React ..."
          },
          {
            "title": "Extend S3 resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/extend-s3-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nExtend S3 resources\nExtend S3 resources\nFor Amplify-generated S3 resources\nAmplify Storage generates Amazon S3 resources to offer storage features. You ca..."
          },
          {
            "title": "List file properties",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/list-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nList file properties\nList file properties\nYou can list files without having to download all the files. You can do this by using the\nlist\nAPI from the Ampl..."
          },
          {
            "title": "Listen to storage events",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/lambda-triggers/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nListen to storage events\nListen to storage events\nFunction triggers can be configured to enable event-based workflows when files are uploaded or deleted. ..."
          },
          {
            "title": "Manage files with Amplify console",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/manage-with-amplify-console/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nManage files with Amplify console\nManage files with Amplify console\nThe\nFile storage\npage in the Amplify console provides a user-friendly interface for ma..."
          },
          {
            "title": "Remove files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/remove-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nRemove files\nRemove files\nFiles can be removed from a storage bucket using the\nremove\nAPI. If a file is protected by an identity Id, only the user who own..."
          },
          {
            "title": "Set up Storage",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/set-up-storage/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nSet up Storage\nSet up Storage\nIn this guide, you will learn how to set up storage in your Amplify app. You will set up your backend resources, and enable ..."
          },
          {
            "title": "Storage",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\nStorage\nSet up Storage\nSet up Amplify Storage for your project\nCustomize authorization rules\nDefine granular authorization rules for storage buckets\nUpload ..."
          },
          {
            "title": "Upload files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload-files/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nUpload files\nUpload files\nYou can implement upload functionality in your app by either using the File Uploader UI component or further customizing the upl..."
          },
          {
            "title": "Use Amplify Storage with any S3 bucket",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/use-with-custom-s3/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nStorage\n/\nUse Amplify Storage with any S3 bucket\nUse Amplify Storage with any S3 bucket\nWith Amplify Storage APIs, you can use your own S3 buckets instead of the Am..."
          }
        ],
        "functions": [
          {
            "title": "Add user to group",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/add-user-to-group/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nAdd user to group\nAdd user to group\nYou can use\ndefineAuth\nand\ndefineFunction\nto create a\nCognito post confirmation Lambda trigger\nthat exten..."
          },
          {
            "title": "Amazon Kinesis Data Streams",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/kinesis-stream/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nAmazon Kinesis Data Streams\nAmazon Kinesis Data Streams\nWith AWS Lambda, you can seamlessly integrate various event sources, such as Amazon K..."
          },
          {
            "title": "Configure Functions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/configure-functions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nConfigure Functions\nConfigure Functions\ndefineFunction\ncomes out-of-the-box with sensible but minimal defaults. The following options are provided to tw..."
          },
          {
            "title": "Configure client library",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/configure-client-library/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nConfigure client library\nConfigure client library\nThe\naws-amplify\nclient library can be configured for use inside function handler files by using the cr..."
          },
          {
            "title": "Create a user profile record",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/create-user-profile-record/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nCreate a user profile record\nCreate a user profile record\nYou can use\ndefineAuth\nand\ndefineFunction\nto create a\nCognito post confirmation Lam..."
          },
          {
            "title": "Custom Auth Challenge",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/custom-auth-flows/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nCustom Auth Challenge\nCustom Auth Challenge\nSecure Remote Password (SRP) is a cryptographic protocol enabling password-based authentication w..."
          },
          {
            "title": "Custom functions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/custom-functions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nCustom functions\nCustom functions\nAWS Amplify Gen 2 functions are AWS Lambda functions that can be used to perform tasks and customize workflows in your..."
          },
          {
            "title": "Custom message",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/custom-message/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nCustom message\nCustom message\nYou can use\ndefineAuth\nand\ndefineFunction\nto create an\nAmazon Cognito custom message AWS Lambda trigger\nthats s..."
          },
          {
            "title": "DynamoDB Streams",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/dynamo-db-stream/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nDynamoDB Streams\nDynamoDB Streams\nWith AWS Lambda, you can seamlessly integrate various event sources, such as Amazon DynamoDB, Amazon SQS, a..."
          },
          {
            "title": "Email domain filtering",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/email-domain-filtering/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nEmail domain filtering\nEmail domain filtering\nYou can use\ndefineAuth\nand\ndefineFunction\nto create a\nCognito pre sign-up Lambda trigger\nthat p..."
          },
          {
            "title": "Environment variables and secrets",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/environment-variables-and-secrets/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nEnvironment variables and secrets\nEnvironment variables and secrets\nAmplify Functions support setting environment variables and secrets on the\nenvironme..."
          },
          {
            "title": "Examples",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\nExamples\nEmail domain filtering\nUse an Auth Pre Signup trigger to allow or deny sign-ups based on email domains\nAdd user to group\nUse an Auth P..."
          },
          {
            "title": "Functions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\nFunctions\nSet up a Function\nUse AWS Lambda functions to perform tasks and customize workflows.\nEnvironment variables and secrets\nLearn how to configure an..."
          },
          {
            "title": "Google reCAPTCHA challenge",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/google-recaptcha-challenge/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nGoogle reCAPTCHA challenge\nGoogle reCAPTCHA challenge\nYou can use\ndefineAuth\nand\ndefineFunction\nto create an auth experience that requires a\n..."
          },
          {
            "title": "Grant access to other resources",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/grant-access-to-other-resources/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nGrant access to other resources\nGrant access to other resources\nIn order for Amplify Functions to interact with other resources they must be given acces..."
          },
          {
            "title": "Lambda Layers",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/add-lambda-layers/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nLambda Layers\nLambda Layers\nAmplify offers the ability to add layers to your functions which contain your library dependencies. Lambda layers allow you ..."
          },
          {
            "title": "Modify Amplify-generated Lambda resources with CDK",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/modify-resources-with-cdk/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nModify Amplify-generated Lambda resources with CDK\nModify Amplify-generated Lambda resources with CDK\nAmplify Functions utilize the\nNodejsFunction\nconst..."
          },
          {
            "title": "Override ID token claims",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/override-token/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nOverride ID token claims\nOverride ID token claims\nYou can use\ndefineAuth\nand\ndefineFunction\nto create an\nAmazon Cognito Pre token generation ..."
          },
          {
            "title": "S3 Upload confirmation",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/s3-upload-confirmation/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nS3 Upload confirmation\nS3 Upload confirmation\nYou can use\ndefineStorage\nand\ndefineFunction\nto create a function trigger to confirm uploading ..."
          },
          {
            "title": "Scheduling Functions",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/scheduling-functions/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nScheduling Functions\nScheduling Functions\nAmplify offers the ability to schedule Functions to run on specific intervals using natural language or\ncron e..."
          },
          {
            "title": "Set up a Function",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/set-up-function/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nSet up a Function\nSet up a Function\nAmplify Functions are powered by\nAWS Lambda\n, and allow you to perform a wide variety of customization through self-..."
          },
          {
            "title": "Streaming logs",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/streaming-logs/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nStreaming logs\nStreaming logs\nAmplify enables you to stream logs from your AWS Lambda functions directly to your terminal while running\nampx sandbox\n. T..."
          },
          {
            "title": "User attribute validation",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/user-attribute-validation/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nFunctions\n/\nExamples\n/\nUser attribute validation\nUser attribute validation\nYou can use\ndefineAuth\nand\ndefineFunction\nto create a\nCognito pre sign-up Lambda trigger\n..."
          }
        ],
        "": [
          {
            "title": "Build & connect backend",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/",
            "summary": "Next.js\n/\nBuild & connect backend\nBuild & connect backend\nAuthentication\nLearn about the authentication capabilities of AWS Amplify.\nData\nLearn about the data capabilities of AWS Amplify.\nStorage\nSet ..."
          }
        ],
        "server-side-rendering": [
          {
            "title": "Next.js App Router (Server Components)",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nServer-Side Rendering\n/\nNext.js App Router (Server Components)\nNext.js App Router (Server Components)\nThis Quickstart guide will walk you through how to build a tas..."
          },
          {
            "title": "Server-Side Rendering",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nServer-Side Rendering\nServer-Side Rendering\nThis guide walks through how to use Amplify Auth and Data APIs from Next.js server-side runtimes.\nBefore you begin:\nFoll..."
          }
        ],
        "troubleshooting": [
          {
            "title": "Troubleshoot \"Cannot find module $amplify/env/<function-name>\"",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/cannot-find-module-amplify-env/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nTroubleshooting\n/\nTroubleshoot \"Cannot find module $amplify/env/<function-name>\"\nTroubleshoot \"Cannot find module $amplify/env/<function-name>\"\nWhen deploying a Amp..."
          },
          {
            "title": "Troubleshoot CDKToolkit stack issues",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/cdktoolkit-stack/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nTroubleshooting\n/\nTroubleshoot CDKToolkit stack issues\nTroubleshoot CDKToolkit stack issues\nAWS Amplify requires your AWS account and region to be\nbootstrapped\nin o..."
          },
          {
            "title": "Troubleshoot circular dependency issues",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/circular-dependency/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nTroubleshooting\n/\nTroubleshoot circular dependency issues\nTroubleshoot circular dependency issues\nWhen deploying a Amplify Gen 2 app, you may encounter the error me..."
          },
          {
            "title": "Troubleshoot configuration errors",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/library-not-configured/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nTroubleshooting\n/\nTroubleshoot configuration errors\nTroubleshoot configuration errors\nIf you are running into a missing configuration or\nNoCredentials\nerror message..."
          }
        ],
        "q-developer": [
          {
            "title": "Use Amazon Q Developer with Amplify",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/q-developer/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nUse Amazon Q Developer with Amplify\nUse Amazon Q Developer with Amplify\nAmazon Q Developer\nis a generative artificial intelligence (AI) powered conversational assis..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authentication",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "download",
        "dynamodb",
        "file",
        "function",
        "graphql",
        "hosting",
        "iam",
        "lambda",
        "model",
        "mutation",
        "query",
        "resolver",
        "rest",
        "s3",
        "schema",
        "storage",
        "subscription",
        "upload"
      ]
    },
    "deployment": {
      "title": "Deployment & Hosting",
      "doc_count": 1,
      "summary": "Deploy your application to AWS, configure custom domains, and set up CI/CD pipelines.",
      "sections": {
        "fullstack-branching": [
          {
            "title": "Fullstack workflows",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\nFullstack workflows\nFullstack branch deployments\nUse fullstack branch deployments to test changes from feature branches.\nSecrets and environment vars\nManage ..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "deployment",
        "hosting"
      ]
    },
    "frontend": {
      "title": "Frontend & UI",
      "doc_count": 55,
      "summary": "Create responsive UIs with Amplify UI components, implement client-side data fetching, and integrate with backend services.",
      "sections": {
        "account-settings": [
          {
            "title": "Account Settings",
            "url": "https://ui.docs.amplify.aws/react/connected-components/account-settings",
            "summary": "Account Settings\nAmplify UI provides account settings components to manage account settings.\nFeedback\n@aws-amplify/ui-react v5\nThe\n@aws-amplify/ui-\nreact\npackage is currently on version\n6\n. Working wi..."
          }
        ],
        "alert": [
          {
            "title": "Alert",
            "url": "https://ui.docs.amplify.aws/react/components/alert",
            "summary": "Alert\nAlert displays a brief message in a way that attracts the user’s attention without interrupting their task.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nUsage note:\nThe Al..."
          }
        ],
        "authenticator": [
          {
            "title": "Authenticator",
            "url": "https://ui.docs.amplify.aws/react/connected-components/authenticator",
            "summary": "Authenticator\nAuthenticator component adds complete authentication flows to your application with minimal boilerplate.\nFeedback\n@aws-amplify/ui-react v5\nThe\n@aws-amplify/ui-\nreact\npackage is currently..."
          }
        ],
        "badge": [
          {
            "title": "Badge",
            "url": "https://ui.docs.amplify.aws/react/components/badge",
            "summary": "Badge\nBadge is a color-coded element used to display a status or message about an item.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nBadge\nVariation\ndefault\ninfo\nerror\nwarning\nsuccess\nS..."
          }
        ],
        "": [
          {
            "title": "Build UI",
            "url": "https://docs.amplify.aws/nextjs/build-ui/",
            "summary": "Next.js\n/\nBuild UI\nBuild UI\nAmplify offers a\nUI Library\nthat makes it easy to build web app user interfaces that are connected to the backend. Amplify UI offers:\nConnected components\nthat are designed..."
          }
        ],
        "button": [
          {
            "title": "Button",
            "url": "https://ui.docs.amplify.aws/react/components/button",
            "summary": "Button\nButton allows users to perform actions.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nClick me!\nVariation\nDefault\nPrimary\nLink\nColorTheme\nDefault\nError\nInfo\nWarning\nS..."
          }
        ],
        "css-variables": [
          {
            "title": "CSS Variables",
            "url": "https://ui.docs.amplify.aws/react/theming/css-variables",
            "summary": "CSS Variables\nFeedback\nThese variables are used in Amplify UI. You can override these values to update the look and feel.\nAmplify CSS Variable\nDefault Value\n--amplify-border-widths-large\n3px\n--amplify..."
          }
        ],
        "card": [
          {
            "title": "Card",
            "url": "https://ui.docs.amplify.aws/react/components/card",
            "summary": "Card\nCard groups related pieces of content.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nI'm a card!\nVariation\ndefault\noutlined\nelevated\nCopy\n<\nCard\n>\nI\n'm a card\n!\n</\nCard\n>\nUsage\nThe ..."
          }
        ],
        "collection": [
          {
            "title": "Collection",
            "url": "https://ui.docs.amplify.aws/react/components/collection",
            "summary": "Collection\nCollection provides a way to display items from a data source.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nWaterfront\nVerified\nMilford - Room #1\nBook it\nMountain\nVerified\nMi..."
          }
        ],
        "uibuilder": [
          {
            "title": "Collections",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/collections/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nCollections\nCollections\nCollections are any list of repeating items. You can visually create a collection from any individual component by selecting the\nCr..."
          },
          {
            "title": "Component slots",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/slots/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nComponent slots\nComponent slots\nComponent slots allow you to nest other components as React code within your Studio-generated UI components. You can use co..."
          },
          {
            "title": "Data binding",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/databinding/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nData binding\nData binding\nAmplify Studio offers visual data binding capabilities to bind UI components to data to build dynamic components. Use the UI comp..."
          },
          {
            "title": "Extend with code",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nExtend with code\nExtend with code\nWhen you run\namplify pull\n, Amplify automatically generates JSX and TS versions of your Figma components. You cannot dire..."
          },
          {
            "title": "Figma-to-Code",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\nFigma-to-Code\nAmplify Studio offers an integration with Figma, allowing you to generate clean React code by importing your Figma design file.\nFigma\nis a brow..."
          },
          {
            "title": "Responsive components",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/responsive/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nResponsive components\nResponsive components\nYou can use Amplify Studio to dynamically toggle between different component variants based on your app's break..."
          },
          {
            "title": "UI event handler",
            "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/eventhandling/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild UI\n/\nFigma-to-Code\n/\nUI event handler\nUI event handler\nAmplify Studio offers the ability to bind UI component events (\nonClick\n,\nonChange\n, and more) to actions to build intera..."
          }
        ],
        "formbuilder": [
          {
            "title": "Configure special inputs",
            "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
            "summary": "Next.js\n/\nBuild UI\n/\nConnected forms\n/\nConfigure special inputs\nConfigure special inputs\nFile Uploader\nFile Uploader\nfields allow your forms to accept file uploads, which are stored in an Amazon S3 bu..."
          },
          {
            "title": "Connected forms",
            "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/",
            "summary": "Next.js\n/\nBuild UI\n/\nConnected forms\nConnected forms\nConnected Forms are bound to a model in your app's data schema. Whenever a connected form is submitted, a record is automatically created or update..."
          },
          {
            "title": "Customize form inputs",
            "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
            "summary": "Next.js\n/\nBuild UI\n/\nConnected forms\n/\nCustomize form inputs\nCustomize form inputs\nIn this guide, you will learn how to customize connected forms that are generated by running\nnpx ampx generate forms\n..."
          },
          {
            "title": "Manage form lifecycle",
            "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/lifecycle/",
            "summary": "Next.js\n/\nBuild UI\n/\nConnected forms\n/\nManage form lifecycle\nManage form lifecycle\nHook into the form's lifecycle events to customize user input before submission, run validations, or handle errors.\nI..."
          },
          {
            "title": "Validate form data",
            "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/validations/",
            "summary": "Next.js\n/\nBuild UI\n/\nConnected forms\n/\nValidate form data\nValidate form data\nSanitize user input by adding validation rules to your form. By default, Amplify generated forms infers a range of validati..."
          }
        ],
        "dark-mode": [
          {
            "title": "Dark Mode",
            "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
            "summary": "Dark Mode\nFeedback\nOverview\nAmplify UI supports color modes/schemes, like Dark Mode, through theme overrides. Amplify UI Theme Overrides let you define different theme styles in different contexts, su..."
          }
        ],
        "divider": [
          {
            "title": "Divider",
            "url": "https://ui.docs.amplify.aws/react/components/divider",
            "summary": "Divider\nDivider helps organize content, separate sections and establish visual rhythm.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nBefore\nAfter\nSize\ndefault\nsmall\nlarge\nOrientation\nhor..."
          }
        ],
        "figma-to-code": [
          {
            "title": "Figma-to-React",
            "url": "https://docs.amplify.aws/nextjs/build-ui/figma-to-code/",
            "summary": "Next.js\n/\nBuild UI\n/\nFigma-to-React\nFigma-to-React\nYou can generate React code using the\nAmplify UI Figma file\nand the\nAmplify UI Builder plugin\n.\nStep 1: Duplicate the Amplify UI Figma file\nThis file..."
          }
        ],
        "storage": [
          {
            "title": "FileUploader",
            "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
            "summary": "FileUploader\nThe FileUploader lets your users upload and manage files in the cloud.\nTheme source\nReact source\nFeedback\nStorage Manager is renamed\nBeginning with\n@aws-amplify/ui-react-storage\nversion 3..."
          },
          {
            "title": "FileUploader",
            "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
            "summary": "FileUploader\nThe FileUploader lets your users upload and manage files in the cloud.\nTheme source\nReact source\nFeedback\nStorage Manager is renamed\nBeginning with\n@aws-amplify/ui-react-storage\nversion 3..."
          },
          {
            "title": "Storage Image",
            "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
            "summary": "Storage Image\nThe Storage Image lets you load images from Amplify Storage.\nReact source\nFeedback\nBasic Usage\nWait!\nDid you follow the\nquick start instructions\nto set up the storage and auth services?\n..."
          }
        ],
        "flex": [
          {
            "title": "Flex",
            "url": "https://ui.docs.amplify.aws/react/components/flex",
            "summary": "Flex\nFlex provides a layout container using CSS Flexbox.\nReact source\nFeedback\nDocumentation\nProps\nThe Flex primitive provides a Flexbox container with style\ndisplay: flex\n. To learn how to use Flexbo..."
          }
        ],
        "grid": [
          {
            "title": "Grid",
            "url": "https://ui.docs.amplify.aws/react/components/grid",
            "summary": "Grid\nGrid provides a layout container using CSS Grid.\nReact source\nFeedback\nDocumentation\nProps\nGrid provides a CSS Grid container with style\ndisplay: grid\n. Any Amplify UI components can be used as g..."
          }
        ],
        "heading": [
          {
            "title": "Heading",
            "url": "https://ui.docs.amplify.aws/react/components/heading",
            "summary": "Heading\nHeading renders semantic section heading text representing six levels.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nHeading text\nDisplayed Text\nlevel\n1\n2\n3\n4\n5\n6\nisTruncated\nCop..."
          }
        ],
        "icon": [
          {
            "title": "Icon",
            "url": "https://ui.docs.amplify.aws/react/components/icon",
            "summary": "Icon\nIcon is used to display Scalable Vector Graphics (SVG).\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\npathData\nwidth\nheight\ncolor\nariaLabel\nviewBox\nviewBox\nviewBox width\nviewBox hei..."
          }
        ],
        "image": [
          {
            "title": "Image",
            "url": "https://ui.docs.amplify.aws/react/components/image",
            "summary": "Image\nImage is used to display responsive images.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nalt\nsrc\nobjectFit\ninitial\ncover\nnone\nobjectPosition\nbackgroundColor\nheight\nwidth\nopacity\nC..."
          }
        ],
        "in-app-messaging": [
          {
            "title": "In-App Messaging",
            "url": "https://ui.docs.amplify.aws/react/connected-components/in-app-messaging",
            "summary": "In-App Messaging\nAmplify UI In-App Messaging provides UI components for displaying in-app messages.\nFeedback\nOverview\nIn-App Messaging allows you to better engage users with contextually appropriate m..."
          }
        ],
        "link": [
          {
            "title": "Link",
            "url": "https://ui.docs.amplify.aws/react/components/link",
            "summary": "Link\nLink renders an anchor element <a> by default and is primarily used for navigation.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nMy Demo Link\nchildren\ncolor\ntextDecora..."
          }
        ],
        "loader": [
          {
            "title": "Loader",
            "url": "https://ui.docs.amplify.aws/react/components/loader",
            "summary": "Loader\nLoader provides a visual cue to the user that the system is processing, awaiting a result or working to fulfill a request.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nsize\ndefau..."
          }
        ],
        "menu": [
          {
            "title": "Menu",
            "url": "https://ui.docs.amplify.aws/react/components/menu",
            "summary": "Menu\nMenu provides a way for users to navigate and select actions within an application.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nmenuAlign\nstart\ncenter\nend\nsize\ndefaul..."
          }
        ],
        "other": [
          {
            "title": "Overview",
            "url": "https://ui.docs.amplify.aws/react/theming",
            "summary": "Overview\nFeedback\nA Theme is a structured collection of design decisions that change the appearance of a UI library. An Amplify UI theme is a structured object of\ndesign tokens\n,\nbreakpoints\n, and\nove..."
          }
        ],
        "pagination": [
          {
            "title": "Pagination",
            "url": "https://ui.docs.amplify.aws/react/components/pagination",
            "summary": "Pagination\nPagination allows users to navigate large sets of data.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nPage\n:\n1\n2\n3\n4\n5\n…\n10\nCurrent Page\nTotal Pages\nSibling Count\nHas More Pag..."
          }
        ],
        "placeholder": [
          {
            "title": "Placeholder",
            "url": "https://ui.docs.amplify.aws/react/components/placeholder",
            "summary": "Placeholder\nPlaceholder can be used to fill out an interface while the content is loading.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nstartColor\nendColor\nsize\ndefault\nsmall\nlarge\nisLo..."
          }
        ],
        "rating": [
          {
            "title": "Rating",
            "url": "https://ui.docs.amplify.aws/react/components/rating",
            "summary": "Rating\nRating displays a read-only star rating of a product or service.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\n2\nout of\n5\nrating\nvalue\nmaxValue\nsize\nsmall\nmedium\nlarge\nfillColor\ne..."
          }
        ],
        "responsive": [
          {
            "title": "Responsive Design",
            "url": "https://ui.docs.amplify.aws/react/theming/responsive",
            "summary": "Responsive Design\nFeedback\nResponsive styling is supported out of the box using our default breakpoints. Our responsive support uses a mobile first approach, so\n@media(min-width)\nrules\nare used for al..."
          }
        ],
        "scrollview": [
          {
            "title": "ScrollView",
            "url": "https://ui.docs.amplify.aws/react/components/scrollview",
            "summary": "ScrollView\nScrollView allows content to be scrollable.\nReact source\nFeedback\nDocumentation\nProps\nDemo\nCopy\n<\nScrollView\nwidth\n=\n\"\n100%\n\"\nheight\n=\n\"\n300px\n\"\nmaxWidth\n=\n\"\n580px\n\"\n>\n<\nImage\nwidth\n=\n\"\n800..."
          }
        ],
        "searchfield": [
          {
            "title": "SearchField",
            "url": "https://ui.docs.amplify.aws/react/components/searchfield",
            "summary": "SearchField\nSearchField accepts query text for search.\nReact source\nFeedback\nDocumentation\nProps\nUsers may clear the field by hitting the\nEsc\nkey or by clicking the\nclear button. When users hit\nEnter\n..."
          }
        ],
        "selectfield": [
          {
            "title": "SelectField",
            "url": "https://ui.docs.amplify.aws/react/components/selectfield",
            "summary": "SelectField\nSelectField allows users to select from a menu of options.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nFruit\nWhat's your favorite fruit?\nPlease select a fruit\nApple\nBanana\n..."
          }
        ],
        "sliderfield": [
          {
            "title": "SliderField",
            "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
            "summary": "SliderField\nSliderField allows users to select a value within a defined range.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nSlider\n50\nlabel\nmin\nmax\nstep\nsize\ndefault\nlarge\n..."
          }
        ],
        "stepperfield": [
          {
            "title": "StepperField",
            "url": "https://ui.docs.amplify.aws/react/components/stepperfield",
            "summary": "StepperField\nStepperField allows users to increment or decrement a number input.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nStepper\nlabel\nmin\nmax\nstep\nsize\ndefault\nsmall\n..."
          }
        ],
        "switchfield": [
          {
            "title": "SwitchField",
            "url": "https://ui.docs.amplify.aws/react/components/switchfield",
            "summary": "SwitchField\nSwitchField allows users to toggle an input.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nSwitchField\nthumbColor\ntrackColor\ntrackCheckedColor\nsize\ndefault\nsmall..."
          }
        ],
        "table": [
          {
            "title": "Table",
            "url": "https://ui.docs.amplify.aws/react/components/table",
            "summary": "Table\nTable displays tabular data using the HTML <table> element and related elements.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nCitrus\nStone Fruit\nBerry\nOrange\nNectarin..."
          }
        ],
        "tabs": [
          {
            "title": "Tabs",
            "url": "https://ui.docs.amplify.aws/react/components/tabs",
            "summary": "Tabs\nTabs allow users to navigate between sections of related content.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nTab 1\nTab 2\nDisabled tab\nTab content #1\nTab content #2\nT..."
          }
        ],
        "text": [
          {
            "title": "Text",
            "url": "https://ui.docs.amplify.aws/react/components/text",
            "summary": "Text\nText is used to display text in an interface, and renders a <p> element by default.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nHello World!\nDisplayed Text\nvariation\nprimary\nsecon..."
          }
        ],
        "textareafield": [
          {
            "title": "TextAreaField",
            "url": "https://ui.docs.amplify.aws/react/components/textareafield",
            "summary": "TextAreaField\nTextAreaField allows users to input multiline text content.\nReact source\nFeedback\nDocumentation\nProps\nDemo\nLast name\nEnter a valid last name\nlabel\nname\nplaceholder\nrows\ndescriptiveText\ne..."
          }
        ],
        "textfield": [
          {
            "title": "TextField",
            "url": "https://ui.docs.amplify.aws/react/components/textfield",
            "summary": "TextField\nTextField allows users to input text content.\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nLast name\nEnter a valid last name\nvariation\ndefault\nquiet\nsize\nsmall\ndefault\nlarge\nd..."
          }
        ],
        "theme-provider": [
          {
            "title": "ThemeProvider",
            "url": "https://ui.docs.amplify.aws/react/theming/theme-provider",
            "summary": "ThemeProvider\nThe ThemeProvider allows you to apply a Theme to your application.\nFeedback\nAmplifyProvider has been renamed to ThemeProvider. The ThemeProvider export is available since version 2.18.3,..."
          }
        ],
        "togglebutton": [
          {
            "title": "ToggleButton",
            "url": "https://ui.docs.amplify.aws/react/components/togglebutton",
            "summary": "ToggleButton\nToggleButton allows users to toggle the on/off state for some configuration.\nARIA pattern\nTheme source\nReact source\nFeedback\nDocumentation\nProps\nDemo\nPress me!\nvariation\ndefault\nprimary\nl..."
          }
        ],
        "view": [
          {
            "title": "View",
            "url": "https://ui.docs.amplify.aws/react/components/view",
            "summary": "View\nView is the foundational component for Amplify UI primitives. While View renders a <div> by default, it can render any HTML element and supports styling via props.\nReact source\nFeedback\nDocumenta..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authentication",
        "authorization",
        "cognito",
        "data",
        "database",
        "download",
        "file",
        "function",
        "graphql",
        "iam",
        "model",
        "mutation",
        "query",
        "rest",
        "s3",
        "schema",
        "storage",
        "subscription",
        "upload"
      ]
    },
    "general": {
      "title": "General Documentation",
      "doc_count": 36,
      "summary": "Core concepts, architecture overview, and general Amplify documentation.",
      "sections": {
        "conversation": [
          {
            "title": "<AIConversation>",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
            "summary": "Next.js\n/\nAI kit\n/\nConversation\n/\n<AIConversation>\n<AIConversation>\nUser\nSun, May 21 at 3:23 PM\nHello\nAssistant\nSun, May 21 at 3:24 PM\nHello! I am your virtual assistant how may I help you?\ninput\nNote..."
          },
          {
            "title": "Connect your frontend",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/connect-your-frontend/",
            "summary": "Connect your frontend\nIn this guide, you will learn how to create, update, and delete conversations, as well as send messages and subscribe to assistant responses.\nConversations and their associated m..."
          },
          {
            "title": "Context",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/context/",
            "summary": "Context\nFor LLMs to provide high-quality answers to users' questions, they need to have the right information. Sometimes this information is contextual, based on the user or the state of the applicati..."
          },
          {
            "title": "Conversation",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/",
            "summary": "Conversation\nThe conversation route simplifies the creation of AI-powered conversation interfaces in your application. It automatically sets up the necessary AppSync API components and Lambda function..."
          },
          {
            "title": "Conversation History",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/history/",
            "summary": "Conversation History\nThe Amplify AI kit automatically and securely stores conversation history per user so you can easily resume past conversations.\nIf you are looking for a quick way to get stared wi..."
          },
          {
            "title": "Knowledge Base",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/knowledge-base/",
            "summary": "Knowledge Base\nAmazon Bedrock knowledge bases\nare a great way to implement Retrieval Augmented Generation, or RAG for short. RAG is a common pattern in building generative AI applications that involve..."
          },
          {
            "title": "Response components",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/response-components/",
            "summary": "Response components\nResponse components are custom UI components you can define that the AI assistant can respond with. Response components allow you to build conversational interfaces that are more t..."
          },
          {
            "title": "Tools",
            "url": "https://docs.amplify.aws/nextjs/ai/conversation/tools/",
            "summary": "Tools\nTools allow LLMs to query information to respond with current and relevant information. They are invoked only if the LLM requests to use one based on the user's message and the tool's descriptio..."
          }
        ],
        "": [
          {
            "title": "AI kit",
            "url": "https://docs.amplify.aws/nextjs/ai/",
            "summary": "Next.js\n/\nAI kit\nAI kit\nSet up AI\nLearn how to set up and connect your backend for generative AI with Amplify.\nConcepts\nLearn about what Amplify AI provisions and get an overview about generative AI c..."
          },
          {
            "title": "Deployment",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/",
            "summary": "Next.js\n/\nDeployment\nDeployment\nFrontend hosting\nHost static and server-rendered web apps built with modern JS frameworks like Next.js, Vue, and React.\nCloud sandbox environments\nLearn about sandbox d..."
          },
          {
            "title": "How Amplify works",
            "url": "https://docs.amplify.aws/nextjs/how-amplify-works/",
            "summary": "Next.js\n/\nHow Amplify works\nHow Amplify works\nConcepts\nLearn about the Amplify fullstack TypeScript DX\nFAQ\nFrequently asked questions about the code-first DX...."
          }
        ],
        "concepts": [
          {
            "title": "Architecture",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/architecture/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nArchitecture\nArchitecture\nThe Amplify AI kit is built around the idea of routes. An AI route is like an API endpoint for interacting with backend AI functionality. AI rou..."
          },
          {
            "title": "Concepts",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\nConcepts\nArchitecture\nAmplify AI Kit fullstack architecture\nModels\nLearn about foundation models provided by Amazon Bedrock used for generative AI\nPrompting\nAmplify AI Conc..."
          },
          {
            "title": "Concepts",
            "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
            "summary": "Next.js\n/\nHow Amplify works\n/\nConcepts\nConcepts\nAWS Amplify Gen 2 uses a TypeScript-based, code-first developer experience (DX) for defining backends. The Gen 2 DX offers a unified Amplify developer e..."
          },
          {
            "title": "Inference Configuration",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/inference-configuration/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nInference Configuration\nInference Configuration\nLLMs have parameters that can be configured to change how the model behaves. This is called inference configuration or inf..."
          },
          {
            "title": "Models",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/models/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nModels\nModels\nA foundation model is a large, general-purpose machine learning model that has been pre-trained on a vast amount of data. These models are trained in an uns..."
          },
          {
            "title": "Prompting",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/prompting/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nPrompting\nPrompting\nLLM prompting refers to the process of providing a language model, such as Claude or Amazon Titan, with a specific input or \"prompt\" in order to gener..."
          },
          {
            "title": "Streaming",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/streaming/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nStreaming\nStreaming\nWhen an LLM generates a large amount of text, like over 100 words, it can take a while for the entire response to be generated. Rather than waiting fo..."
          },
          {
            "title": "Tools",
            "url": "https://docs.amplify.aws/nextjs/ai/concepts/tools/",
            "summary": "Next.js\n/\nAI kit\n/\nConcepts\n/\nTools\nTools\nLarge language models (LLMs) are stateless text generators, they have no knowledge of the real world and can't access data on their own. For example, if you a..."
          }
        ],
        "sandbox-environments": [
          {
            "title": "Cloud sandbox environments",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/",
            "summary": "Next.js\n/\nDeployment\n/\nCloud sandbox environments\nCloud sandbox environments\nUse cloud sandbox in dev environment\nSet up a cloud sandbox environment you can use with your frontend dev environment.\nSan..."
          },
          {
            "title": "Sandbox Seed",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/seed/",
            "summary": "Next.js\n/\nDeployment\n/\nCloud sandbox environments\n/\nSandbox Seed\nSandbox Seed\nThe Sandbox Seed feature allows you to populate your Amplify sandbox environment with initial data, making it easier to te..."
          },
          {
            "title": "Sandbox features",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/features/",
            "summary": "Next.js\n/\nDeployment\n/\nCloud sandbox environments\n/\nSandbox features\nSandbox features\nSandbox environments include additional features for managing secrets, deploying multiple sandboxes, config genera..."
          },
          {
            "title": "Use cloud sandbox in dev environment",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/setup/",
            "summary": "Next.js\n/\nDeployment\n/\nCloud sandbox environments\n/\nUse cloud sandbox in dev environment\nUse cloud sandbox in dev environment\nYou can use a personal cloud sandbox environment that provides an isolated..."
          }
        ],
        "fullstack-branching": [
          {
            "title": "Cross-account deployments",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/cross-account-deployments/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nCross-account deployments\nCross-account deployments\nThis guide walks you through how to create a trunk-based, multi-region deployment pipeline for applicat..."
          },
          {
            "title": "Custom pipelines",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/custom-pipelines/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nCustom pipelines\nCustom pipelines\nWhile building with Amplify CI/CD offers benefits such as zero-config setup, fullstack previews, centralized secrets mana..."
          },
          {
            "title": "Fullstack branch deployments",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/branch-deployments/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nFullstack branch deployments\nFullstack branch deployments\nAmplify code-first DX (Gen 2) offers fullstack branch deployments that allow you to automatically..."
          },
          {
            "title": "Fullstack previews",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/pr-previews/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nFullstack previews\nFullstack previews\nWith fullstack previews, you can set up ephemeral fullstack environments on every pull request. This allows you to te..."
          },
          {
            "title": "Monorepo setup",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/monorepos/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nMonorepo setup\nMonorepo setup\nSome teams choose a monorepo approach, or single repositories that contain multiple packages or components to simplify the de..."
          },
          {
            "title": "Secrets and environment vars",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/secrets-and-vars/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nSecrets and environment vars\nSecrets and environment vars\nAmplify Gen 2 offers centralized management of secrets and environment variables for all fullstac..."
          },
          {
            "title": "Separate frontend and backend teams",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/mono-and-multi-repos/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nSeparate frontend and backend teams\nSeparate frontend and backend teams\nYou might have different frontend and backend teams that maintain their own reposit..."
          },
          {
            "title": "Share resources across branches",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/share-resources/",
            "summary": "Next.js\n/\nDeployment\n/\nFullstack workflows\n/\nShare resources across branches\nShare resources across branches\nIn some instances, you may not want to deploy new resources for every branch. For example, ..."
          }
        ],
        "generation": [
          {
            "title": "Data Extraction",
            "url": "https://docs.amplify.aws/nextjs/ai/generation/data-extraction/",
            "summary": "Data Extraction\nData extraction allows you to parse unstructured text and extract structured data using AI. This is useful for converting free-form text into typed objects that can be used in your app..."
          },
          {
            "title": "Generation",
            "url": "https://docs.amplify.aws/nextjs/ai/generation/",
            "summary": "Next.js\n/\nAI kit\n/\nGeneration\nGeneration\nAI generation routes are a request-response API used to generate structured output from AI models. Examples of generation routes include:\ngenerated structured ..."
          }
        ],
        "faq": [
          {
            "title": "FAQ",
            "url": "https://docs.amplify.aws/nextjs/how-amplify-works/faq/",
            "summary": "Next.js\n/\nHow Amplify works\n/\nFAQ\nFAQ\nIs there a way to upgrade an existing Amplify project from Gen 1 to Gen 2?\nWe are still actively developing migration tooling to aid in transitioning your project..."
          }
        ],
        "hosting": [
          {
            "title": "Frontend hosting",
            "url": "https://docs.amplify.aws/nextjs/deploy-and-host/hosting/",
            "summary": "Next.js\n/\nDeployment\n/\nFrontend hosting\nFrontend hosting\nAWS Amplify Hosting is a fully managed CI/CD and hosting service for fast, secure, and reliable static and server-side rendered apps that scale..."
          }
        ],
        "set-up-ai": [
          {
            "title": "Set up AI",
            "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
            "summary": "Set up AI\nIn this guide, you will learn how to get stared with the Amplify AI kit. This includes defining your AI backend with Conversation and Generation routes, and securely connecting to them from ..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authentication",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "dynamodb",
        "file",
        "function",
        "graphql",
        "hosting",
        "iam",
        "lambda",
        "model",
        "mutation",
        "query",
        "resolver",
        "s3",
        "schema",
        "storage",
        "subscription",
        "upload"
      ]
    },
    "getting-started": {
      "title": "Getting Started",
      "doc_count": 8,
      "summary": "Quick start guides and tutorials to get your Amplify + Next.js application up and running.",
      "sections": {
        "account-setup": [
          {
            "title": "Configure AWS for local development",
            "url": "https://docs.amplify.aws/nextjs/start/account-setup/",
            "summary": "Next.js\n/\nGet started\n/\nConfigure AWS for local development\nConfigure AWS for local development\nNote\n: If you already have an AWS account and profile configured locally, you do not need to follow this..."
          }
        ],
        "connect-to-aws-resources": [
          {
            "title": "Connect to AWS resources",
            "url": "https://docs.amplify.aws/nextjs/start/connect-to-aws-resources/",
            "summary": "Next.js\n/\nGet started\n/\nConnect to AWS resources\nConnect to AWS resources\nAmplify client libraries provide you with the flexibility to directly connect your application to AWS resources such as AWS Ap..."
          }
        ],
        "migrate-to-gen2": [
          {
            "title": "Gen 2 for Gen 1 customers",
            "url": "https://docs.amplify.aws/nextjs/start/migrate-to-gen2/",
            "summary": "Next.js\n/\nGet started\n/\nGen 2 for Gen 1 customers\nGen 2 for Gen 1 customers\nMigrating from Gen 1 to Gen 2\nWe are actively developing migration tooling to aid in transitioning your project from Gen 1 t..."
          }
        ],
        "": [
          {
            "title": "Get started",
            "url": "https://docs.amplify.aws/nextjs/start/",
            "summary": "Next.js\n/\nGet started\nGet started\nAWS Amplify is a collection of cloud services and libraries for fullstack application development. Amplify provides frontend libraries, UI components, backend buildin..."
          }
        ],
        "manual-installation": [
          {
            "title": "Manual installation",
            "url": "https://docs.amplify.aws/nextjs/start/manual-installation/",
            "summary": "Next.js\n/\nGet started\n/\nManual installation\nManual installation\nTo get started with AWS Amplify we recommend that you use our\nquickstart\nstarter template. However, for some use cases, it may be prefer..."
          }
        ],
        "quickstart": [
          {
            "title": "Next.js App Router",
            "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
            "summary": "Next.js\n/\nGet started\n/\nQuickstart\n/\nNext.js App Router\nNext.js App Router\nPre-requisites\nThis Quickstart guide will walk you through how to build a task list application with TypeScript, Next.js\nApp ..."
          },
          {
            "title": "Next.js Pages Router",
            "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
            "summary": "Next.js\n/\nGet started\n/\nQuickstart\n/\nNext.js Pages Router\nNext.js Pages Router\nPre-requisites\nThis Quickstart guide will walk you through how to build a task list application with TypeScript, Next.js\n..."
          },
          {
            "title": "Quickstart",
            "url": "https://docs.amplify.aws/nextjs/start/quickstart/",
            "summary": "Next.js\n/\nGet started\n/\nQuickstart\nQuickstart\n👋 Welcome to AWS Amplify! In this quickstart guide, you will:\nDeploy a Next.js app\nBuild and connect to a database with real-time data updates\nConfigure a..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authentication",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "download",
        "dynamodb",
        "file",
        "function",
        "graphql",
        "hosting",
        "iam",
        "lambda",
        "model",
        "mutation",
        "query",
        "resolver",
        "rest",
        "s3",
        "schema",
        "storage",
        "subscription"
      ]
    },
    "reference": {
      "title": "API Reference",
      "doc_count": 7,
      "summary": "Detailed API references, configuration options, and technical specifications.",
      "sections": {
        "amplify_outputs": [
          {
            "title": "About amplify_outputs.json",
            "url": "https://docs.amplify.aws/nextjs/reference/amplify_outputs/",
            "summary": "Next.js\n/\nReference\n/\nAbout amplify_outputs.json\nAbout amplify_outputs.json\nIn Amplify Gen 2, the CLI will generate an\namplify_outputs.json\nfile with your backend's outputs such as your Data endpoint ..."
          }
        ],
        "cdk-constructs": [
          {
            "title": "CDK constructs",
            "url": "https://docs.amplify.aws/nextjs/reference/cdk-constructs/",
            "summary": "Next.js\n/\nReference\n/\nCDK constructs\nCDK constructs\nConstructs—the basic building blocks of\nAWS Cloud Development Kit (AWS CDK)\napps—abstract away the complexity of configuring cloud resources, so you..."
          }
        ],
        "cli-commands": [
          {
            "title": "CLI commands",
            "url": "https://docs.amplify.aws/nextjs/reference/cli-commands/",
            "summary": "Next.js\n/\nReference\n/\nCLI commands\nCLI commands\nThis page serves as a reference for commands found in the\n@aws-amplify/backend-cli\npackage.\nAll commands can be prefixed with\nAWS CLI environment variab..."
          }
        ],
        "iam-policy": [
          {
            "title": "IAM policy",
            "url": "https://docs.amplify.aws/nextjs/reference/iam-policy/",
            "summary": "Next.js\n/\nReference\n/\nIAM policy\nIAM policy\nBranch deployments\nBranch deployments require the\nAmplifyBackendDeployFullAccess\nmanaged policy to be able to deploy backend resources during a fullstack de..."
          }
        ],
        "project-structure": [
          {
            "title": "Project structure",
            "url": "https://docs.amplify.aws/nextjs/reference/project-structure/",
            "summary": "Next.js\n/\nReference\n/\nProject structure\nProject structure\nAmplify Gen 2 backends are defined using TypeScript, and enable you to collocate resources depending on their function. For example, you can a..."
          }
        ],
        "": [
          {
            "title": "Reference",
            "url": "https://docs.amplify.aws/nextjs/reference/",
            "summary": "Documentation for Reference"
          }
        ],
        "telemetry": [
          {
            "title": "Telemetry",
            "url": "https://docs.amplify.aws/nextjs/reference/telemetry/",
            "summary": "Next.js\n/\nReference\n/\nTelemetry\nTelemetry\nAmplify Gen 2 collects anonymous telemetry data about general usage of the CLI. Participation is optional, and you may\nopt out\nby using\nampx configure telemet..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "authentication",
        "authorization",
        "cognito",
        "data",
        "database",
        "deployment",
        "file",
        "function",
        "graphql",
        "iam",
        "lambda",
        "model",
        "resolver",
        "rest",
        "s3",
        "schema",
        "storage"
      ]
    },
    "storage": {
      "title": "File Storage",
      "doc_count": 6,
      "summary": "Upload, download, and manage files with Amazon S3 integration.",
      "sections": {
        "storage": [
          {
            "title": "Copy files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/copy/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nCopy files\nCopy files\nThe\ncopy\nAPI duplicates an existing file to a designated path and returns an object\n{path: 'destPath'}\nupon successful compl..."
          },
          {
            "title": "Download files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nDownload files\nDownload files\nThe following options are available for retrieving previously uploaded data:\nGenerate a download URL\nGet a presigned..."
          },
          {
            "title": "Get file properties",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/get-properties/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nGet file properties\nGet file properties\nYou can get file properties and metadata without downloading the file\ngetProperties\nWith Path (Above v6.2...."
          },
          {
            "title": "List files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/list/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nList files\nList files\nYou can either list all objects uploaded under a given path or opt to receive a paginated list of objects.\nlist\nWith Path (A..."
          },
          {
            "title": "Remove files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/remove/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nRemove files\nRemove files\nDelete stored data from the storage bucket. To remove a file, you need to provide the fully specified\npath\n.\nFiles can o..."
          },
          {
            "title": "Upload files",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload/",
            "summary": "Gen 1\n/\nNext.js\n/\nBuild & connect backend\n/\nStorage\n/\nUpload files\nUpload files\nuploadData\nThe\nuploadData\nmethod uploads files into Amazon S3.\nWith Path (Above v6.2.0)\nWith Key (Deprecated)\nCopy\ncode ..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "api",
        "cognito",
        "data",
        "download",
        "file",
        "function",
        "s3",
        "storage",
        "upload"
      ]
    },
    "troubleshooting": {
      "title": "Troubleshooting",
      "doc_count": 1,
      "summary": "Documentation for Troubleshooting",
      "sections": {
        "troubleshooting": [
          {
            "title": "Troubleshooting",
            "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/",
            "summary": "Next.js\n/\nBuild & connect backend\n/\nTroubleshooting\nTroubleshooting\nTroubleshoot configuration errors\nAddressing missing configuration or NoCredentials error messages\nTroubleshoot CDKToolkit stack iss..."
          }
        ]
      },
      "key_topics": [
        "amplify",
        "deployment",
        "function"
      ]
    }
  },
  "quick_access": {
    "create_app": {
      "title": "Create New App",
      "command": "npx create-amplify@latest --template nextjs",
      "description": "Start a new Amplify Gen 2 + Next.js application"
    },
    "add_auth": {
      "title": "Add Authentication",
      "path": "/build-a-backend/auth/set-up-auth/",
      "description": "Set up user authentication with Amazon Cognito"
    },
    "add_api": {
      "title": "Add API",
      "path": "/build-a-backend/data/",
      "description": "Create GraphQL or REST APIs"
    },
    "add_storage": {
      "title": "Add Storage",
      "path": "/build-a-backend/storage/",
      "description": "Configure file storage with S3"
    },
    "deploy": {
      "title": "Deploy App",
      "path": "/deploy-and-host/",
      "description": "Deploy to AWS Amplify Hosting"
    }
  },
  "patterns": {
    "api": [
      {
        "title": "Connect your app code to API",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-API/",
        "examples": [
          "import { Amplify } from 'aws-amplify';import outputs from '../amplify_outputs.json';\nAmplify.configure(outputs);\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\n// Now you should be able to make CRUDL operations with the// Data clientconst fetchTodos = async () => {  const { data: todos, errors } = await client.models.Todo.list();};\n"
        ]
      },
      {
        "title": "Customize your data model",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a  .schema({    Customer: a      .model({        customerId: a.id().required(),        // fields can be of various scalar types,        // such as string, boolean, float, integers etc.        name: a.string(),        // fields can be of custom types        location: a.customType({          // fields can be required or optional          lat: a.float().required(),          long: a.float().required(),        }),        // fields can be enums        engagementStage: a.enum([\"PROSPECT\", \"INTERESTED\", \"PURCHASED\"]),        collectionId: a.id(),        collection: a.belongsTo(\"Collection\", \"collectionId\")        // Use custom identifiers. By default, it uses an `id: a.id()` field      })      .identifier([\"customerId\"]),    Collection: a      .model({        customers: a.hasMany(\"Customer\", \"collectionId\"), // setup relationships between types        tags: a.string().array(), // fields can be arrays        representativeId: a.id().required(),        // customize secondary indexes to optimize your query performance      })      .secondaryIndexes((index) => [index(\"representativeId\")]),  })  .authorization((allow) => [allow.publicApiKey()]);\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineData } from '@aws-amplify/backend';\nconst schema = /* GraphQL */`  type Todo @model @auth(rules: [{ allow: owner }]) {    content: String    isDone: Boolean  }`;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n"
        ]
      },
      {
        "title": "Working with files/attachments",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Song: a    .model({      id: a.id().required(),      name: a.string().required(),      coverArtPath: a.string(),    })    .authorization((allow) => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",\n    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineStorage } from \"@aws-amplify/backend\";\nexport const storage = defineStorage({  name: \"amplify-gen2-files\",  access: (allow) => ({    \"images/*\": [allow.authenticated.to([\"read\", \"write\", \"delete\"])],  }),});\n"
        ]
      },
      {
        "title": "Customize your auth rules",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/",
        "examples": [
          "const schema = a.schema({  Post: a.model({    content: a.string()  }).authorization(allow => [    // Allow anyone auth'd with an API key to read everyone's posts.    allow.publicApiKey().to(['read']),    // Allow signed-in user to create, read, update,    // and delete their __OWN__ posts.    allow.owner(),  ])})\n",
          "const schema = a.schema({  // Because no model-level authorization rule is present  // this model will use the global authorization rule.  Todo: a.model({    content: a.string()  }),\n  // Will use model-level authorization rule  Notes: a.model({    content: a.string()    // [Model-level authorization rule]  }).authorization(allow => [allow.publicApiKey().to(['read'])])\n// [Global authorization rule]}).authorization(allow => [  allow.publicApiKey()])\n"
        ]
      },
      {
        "title": "Add custom queries and mutations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type  EchoResponse: a.customType({    content: a.string(),    executionDuration: a.float()  }),\n  // 2. Define your query with the return type and, optionally, arguments  echo: a    .query()    // arguments that this query accepts    .arguments({      content: a.string()    })    // return type of the query    .returns(a.ref('EchoResponse'))    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type or model  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  // 2. Define your mutation with the return type and, optionally, arguments  likePost: a    .mutation()    // arguments that this query accepts    .arguments({      postId: a.string()    })    // return type of the query    .returns(a.ref('Post'))    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n"
        ]
      },
      {
        "title": "Add custom real-time subscriptions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-subscription/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // Message type that's used for this PubSub sample  Message: a.customType({    content: a.string().required(),    channelName: a.string().required()  }),\n  // Message publish mutation  publish: a.mutation()    .arguments({      channelName: a.string().required(),      content: a.string().required()    })    .returns(a.ref('Message'))    .handler(a.handler.custom({ entry: './publish.js' }))    .authorization(allow => [allow.publicApiKey()]),\nCopy highlighted code example  // Subscribe to incoming messages  receive: a.subscription()    // subscribes to the 'publish' mutation    .for(a.ref('publish'))     // subscription handler to set custom filters    .handler(a.handler.custom({entry: './receive.js'}))     // authorization rules as to who can subscribe to the data    .authorization(allow => [allow.publicApiKey()]),\n  // A data model to manage channels  Channel: a.model({    name: a.string(),  }).authorization(allow => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "// This handler simply passes through the arguments of the mutation through as the resultexport function request() {  return {}}\n/** * @param {import('@aws-appsync/utils').Context} ctx */export function response(ctx) {  return ctx.args}\n"
        ]
      },
      {
        "title": "Add fields to data model",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/add-fields/",
        "examples": [
          "a.schema({  Post: a.model({    location: a.customType({      lat: a.float(),      long: a.float(),    }),    content: a.string(),  }),}).authorization((allow) => allow.publicApiKey());\n",
          "a.schema({  Location: a.customType({      lat: a.float(),      long: a.float(),  }),\n  Post: a.model({    location: a.ref('Location'),    content: a.string(),  }),\n  User: a.model({    lastKnownLocation: a.ref('Location'),  }),}).authorization((allow) => allow.publicApiKey());\n"
        ]
      },
      {
        "title": "Batch DynamoDB Operations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/batch-ddb-operations/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type or model  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  // 2. Define your mutation with the return type and, optionally, arguments  BatchCreatePost: a    .mutation()    // arguments that this query accepts    .arguments({      content: a.string().array()    })    .returns(a.ref('Post').array())    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  BatchCreatePost: a    .mutation()    .arguments({      contents: a.string().array()    })    .returns(a.ref('Post').array())    .authorization(allow => [allow.authenticated()])    // 1. Add the custom handler    .handler(      a.handler.custom({        dataSource: a.ref('Post'),        entry: './BatchCreatePostHandler.js',      })    )});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n"
        ]
      },
      {
        "title": "Configure custom identity and group claims",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/configure-custom-identity-and-group-claim/",
        "examples": [
          "import { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Post: a    .model({      id: a.id(),      owner: a.string(),      postname: a.string(),      content: a.string(),    })    .authorization(allow => [      allow.owner().identityClaim('user_id'),      allow.groups(['Moderator']).withClaimIn('user_groups'),    ]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({ schema });\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    postname: 'My New Post'    content: 'My post content',  },Copy highlighted code example  {    authMode: 'userPool',  });\n"
        ]
      },
      {
        "title": "Connect to Amazon Bedrock for generative AI use cases",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data, MODEL_ID, generateHaikuFunction } from \"./data/resource\";import { Effect, PolicyStatement } from \"aws-cdk-lib/aws-iam\";\nexport const backend = defineBackend({  auth,  data,  generateHaikuFunction,});\nbackend.generateHaikuFunction.resources.lambda.addToRolePolicy(  new PolicyStatement({    effect: Effect.ALLOW,    actions: [\"bedrock:InvokeModel\"],    resources: [      `arn:aws:bedrock:*::foundation-model/${MODEL_ID}`,    ],  }));\n",
          "import { Effect, PolicyStatement } from \"aws-cdk-lib/aws-iam\";import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nexport const backend = defineBackend({  auth,  data,});\nconst MODEL_ID = \"anthropic.claude-3-haiku-20240307-v1:0\";\nconst bedrockDataSource = backend.data.addHttpDataSource(  \"BedrockDataSource\",  \"https://bedrock-runtime.us-east-1.amazonaws.com\",  {    authorizationConfig: {      signingRegion: backend.data.stack.region,      signingServiceName: \"bedrock\",    },  });\nbedrockDataSource.grantPrincipal.addToPrincipalPolicy(  new PolicyStatement({    effect: Effect.ALLOW,    actions: [\"bedrock:InvokeModel\"],    resources: [      `arn:aws:bedrock:${backend.data.stack.region}::foundation-model/${MODEL_ID}`,    ],  }));\nbackend.data.resources.cfnResources.cfnGraphqlApi.environmentVariables = {  MODEL_ID}\n"
        ]
      },
      {
        "title": "Connect to Amazon EventBridge to send and receive events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-eventbridge-datasource/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  OrderStatus: a.enum([\"OrderPending\", \"OrderShipped\", \"OrderDelivered\"]),  OrderStatusChange: a.customType({    orderId: a.id().required(),    status: a.ref(\"OrderStatus\").required(),    message: a.string().required(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import { aws_events } from \"aws-cdk-lib\";import {  Effect,  PolicyDocument,  PolicyStatement,  Role,  ServicePrincipal,} from \"aws-cdk-lib/aws-iam\";\nexport const backend = defineBackend({  auth,  data,});\n// Create a new stack for the EventBridge data sourceconst eventStack = backend.createStack(\"MyExternalDataSources\");\n// Reference or create an EventBridge EventBusconst eventBus = aws_events.EventBus.fromEventBusName(  eventStack,  \"MyEventBus\",  \"default\");\n// Add the EventBridge data sourceCopy highlighted code examplebackend.data.addEventBridgeDataSource(\"MyEventBridgeDataSource\", eventBus);\n// Create a policy statement to allow invoking the AppSync API's mutationsconst policyStatement = new PolicyStatement({  effect: Effect.ALLOW,  actions: [\"appsync:GraphQL\"],  resources: [`${backend.data.resources.graphqlApi.arn}/types/Mutation/*`],});\n// Create a role for the EventBus to assumeconst eventBusRole = new Role(eventStack, \"AppSyncInvokeRole\", {  assumedBy: new ServicePrincipal(\"events.amazonaws.com\"),  inlinePolicies: {    PolicyStatement: new PolicyDocument({      statements: [policyStatement],    }),  },});\n// Create an EventBridge rule to route events to the AppSync APIconst rule = new aws_events.CfnRule(eventStack, \"MyOrderRule\", {  eventBusName: eventBus.eventBusName,  name: \"broadcastOrderStatusChange\",  eventPattern: {    source: [\"amplify.orders\"],    /* The shape of the event pattern must match EventBridge's event message structure.    So, this field must be spelled as \"detail-type\". Otherwise, events will not trigger the rule.\n    https://docs.aws.amazon.com/AmazonS3/latest/userguide/ev-events.html    */    [\"detail-type\"]: [\"OrderStatusChange\"],    detail: {      orderId: [{ exists: true }],      status: [\"PENDING\", \"SHIPPED\", \"DELIVERED\"],      message: [{ exists: true }],    },  },  targets: [    {      id: \"orderStatusChangeReceiver\",      arn: backend.data.resources.cfnResources.cfnGraphqlApi        .attrGraphQlEndpointArn,      roleArn: eventBusRole.roleArn,      appSyncParameters: {        graphQlOperation: `        mutation PublishOrderFromEventBridge(          $orderId: String!          $status: String!          $message: String!        ) {          publishOrderFromEventBridge(orderId: $orderId, status: $status, message: $message) {            orderId            status            message          }        }`,      },      inputTransformer: {        inputPathsMap: {          orderId: \"$.detail.orderId\",          status: \"$.detail.status\",          message: \"$.detail.message\",        },        inputTemplate: JSON.stringify({          orderId: \"<orderId>\",          status: \"<status>\",          message: \"<message>\",        }),      },    },  ],});\n"
        ]
      },
      {
        "title": "Connect to Amazon OpenSearch for search and aggregate queries",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({Copy highlighted code example  Todo: a    .model({      content: a.string(),      done: a.boolean(),      priority: a.enum([\"low\", \"medium\", \"high\"]),    })    .authorization((allow) => [allow.publicApiKey()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "Copy highlighted code exampleimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({  auth,  data});\nCopy highlighted code exampleconst todoTable =  backend.data.resources.cfnResources.amplifyDynamoDbTables['Todo'];\n// Update table settingstodoTable.pointInTimeRecoveryEnabled = true;\ntodoTable.streamSpecification = {  streamViewType: dynamodb.StreamViewType.NEW_IMAGE};\n// Get the DynamoDB table ARNconst tableArn = backend.data.resources.tables['Todo'].tableArn;// Get the DynamoDB table nameconst tableName = backend.data.resources.tables['Todo'].tableName;\n"
        ]
      },
      {
        "title": "Connect to Amazon Polly for Text-To-Speech APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-polly/",
        "examples": [
          "npm add @aws-sdk/client-polly\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Connect to Amazon Rekognition for Image Analysis APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
        "examples": [
          "npm add @aws-sdk/client-rekognition\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Connect to Amazon Translate for language translation APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-translate/",
        "examples": [
          "npm add @aws-sdk/client-translate\n",
          "import { defineBackend } from '@aws-amplify/backend';import { PolicyStatement } from 'aws-cdk-lib/aws-iam';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({ auth, data});\nconst translateDataSource = backend.data.addHttpDataSource( \"TranslateDataSource\", `https://translate.${backend.data.stack.region}.amazonaws.com`, {   authorizationConfig: {     signingRegion: backend.data.stack.region,     signingServiceName: \"translate\",   }, });\ntranslateDataSource.grantPrincipal.addToPrincipalPolicy( new PolicyStatement({   actions: [\"translate:TranslateText\"],   resources: [\"*\"], }));\n"
        ]
      },
      {
        "title": "Connect to an external HTTP endpoint",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-http-datasource/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  Post: a.customType({    title: a.string(),    content: a.string(),    author: a.string().required(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,  data,});\nconst httpDataSource = backend.data.addHttpDataSource(  \"HttpDataSource\",  \"https://www.example.com\");\n"
        ]
      },
      {
        "title": "Connect to external Amazon DynamoDB data sources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  Post: a.customType({    id: a.id().required(),    author: a.string().required(),    title: a.string(),    content: a.string(),    url: a.string(),    ups: a.integer(),    downs: a.integer(),    version: a.integer(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import { aws_dynamodb } from \"aws-cdk-lib\";\nexport const backend = defineBackend({  auth,  data,});\nCopy highlighted code exampleconst externalDataSourcesStack = backend.createStack(\"MyExternalDataSources\");\nconst externalTable = aws_dynamodb.Table.fromTableName(  externalDataSourcesStack,  \"MyExternalPostTable\",  \"PostTable\");\nbackend.data.addDynamoDbDataSource(  \"ExternalPostTableDataSource\",  externalTable);\n"
        ]
      },
      {
        "title": "Connect your app to existing MySQL and PostgreSQL database",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-postgres-mysql-database/",
        "examples": [
          "npx ampx sandbox secret set SQL_CONNECTION_STRING\n",
          "mysql://user:password@hostname:port/db-name\n"
        ]
      },
      {
        "title": "Create a user profile record",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/create-user-profile-record/",
        "examples": [
          "npm add --save-dev @types/aws-lambda\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";import { postConfirmation } from \"../auth/post-confirmation/resource\";\nconst schema = a  .schema({    UserProfile: a      .model({        email: a.string(),        profileOwner: a.string(),      })      .authorization((allow) => [        allow.ownerDefinedIn(\"profileOwner\"),      ]),  })  .authorization((allow) => [allow.resource(postConfirmation)]);export type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n"
        ]
      },
      {
        "title": "Create, update, and delete application data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/mutate-data/",
        "examples": [
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '../amplify/data/resource'\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create({  content: \"My new todo\",  isDone: true,})\n",
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '../amplify/data/resource';\nconst client = generateClient<Schema>();\nconst todo = {  id: 'some_id',  content: 'Updated content',};\nconst { data: updatedTodo, errors } = await client.models.Todo.update(todo);\n"
        ]
      },
      {
        "title": "Custom data access using Lambda functions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/custom-data-access-patterns/",
        "examples": [
          "import {  type ClientSchema,  a,  defineData,  defineFunction,} from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    // STEP 1    // Indicate which models / fields should use a custom authorization rule    .authorization(allow => [allow.custom()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'lambda',    // STEP 2    // Pass in the function to be used for a custom authorization rule    lambdaAuthorizationMode: {      function: defineFunction({        entry: './custom-authorizer.ts',      }),      // (Optional) STEP 3      // Configure the token's time to live      timeToLiveInSeconds: 300,    },  },});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'lambda',  });\n"
        ]
      },
      {
        "title": "Custom functions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/custom-functions/",
        "examples": [
          "import { execSync } from \"node:child_process\";import * as path from \"node:path\";import { fileURLToPath } from \"node:url\";import { defineFunction } from \"@aws-amplify/backend\";import { DockerImage, Duration } from \"aws-cdk-lib\";import { Code, Function, Runtime } from \"aws-cdk-lib/aws-lambda\";\nconst functionDir = path.dirname(fileURLToPath(import.meta.url));\nexport const sayHelloFunctionHandler = defineFunction(  (scope) =>    new Function(scope, \"say-hello\", {      handler: \"index.handler\",      runtime: Runtime.PYTHON_3_9, // or any other python version      timeout: Duration.seconds(20), //  default is 3 seconds      code: Code.fromAsset(functionDir, {        bundling: {          image: DockerImage.fromRegistry(\"dummy\"), // replace with desired image from AWS ECR Public Gallery          local: {            tryBundle(outputDir: string) {              execSync(                `python3 -m pip install -r ${path.join(functionDir, \"requirements.txt\")} -t ${path.join(outputDir)} --platform manylinux2014_x86_64 --only-binary=:all:`              );              execSync(`cp -r ${functionDir}/* ${path.join(outputDir)}`);              return true;            },          },        },      }),    }),    {      resourceGroupName: \"auth\" // Optional: Groups this function with auth resource    });\n",
          "import json\ndef handler(event, context):  return {      \"statusCode\": 200,      \"body\": json.dumps({          \"message\": \"Hello World\",      }),  }\n"
        ]
      },
      {
        "title": "Customize secondary indexes",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/secondary-index/",
        "examples": [
          "export const schema = a.schema({  Customer: a    .model({      name: a.string(),      phoneNumber: a.phone(),      accountRepresentativeId: a.id().required(),    })Copy highlighted code example    .secondaryIndexes((index) => [index(\"accountRepresentativeId\")])    .authorization(allow => [allow.publicApiKey()]),});\n",
          "import { type Schema } from '../amplify/data/resource';import { generateClient } from 'aws-amplify/data';\nconst client = generateClient<Schema>();\nconst { data, errors } =Copy highlighted code example  await client.models.Customer.listCustomerByAccountRepresentativeId({    accountRepresentativeId: \"YOUR_REP_ID\",  });\n"
        ]
      },
      {
        "title": "Deletion protection and Backup resources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/deletion-backup-resources/",
        "examples": [
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({  auth,  data});\nCopy highlighted code exampleconst { cfnUserPool } = backend.auth.resources.cfnResourcescfnUserPool.deletionProtection = \"ACTIVE\";\n",
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({  auth,  data});\nCopy highlighted code exampleconst { amplifyDynamoDbTables } = backend.data.resources.cfnResources;for (const table of Object.values(amplifyDynamoDbTables)) {  table.deletionProtectionEnabled = true;}\n"
        ]
      },
      {
        "title": "Disable Operations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/disable-operations/",
        "examples": [
          "export const schema = a.schema({  Customer: a    .model({      name: a.string(),      phoneNumber: a.phone(),      accountRepresentativeId: a.id().required(),    })Copy highlighted code example    .disableOperations([\"mutations\", \"subscriptions\", \"queries\"])    .authorization(allow => [allow.publicApiKey()]),});\n",
          "// Disable all mutationsdisableOperations: [\"mutations\"]\n// Disable both subscriptions and queriesdisableOperations: [\"subscriptions\", \"queries\"]\n// Disable specific operationsdisableOperations: [\"create\", \"update\", \"list\"]\n// Disable specific subscription typesdisableOperations: [\"onCreate\", \"onUpdate\"]\n// Mix general categories with specific operationsdisableOperations: [\"queries\", \"create\", \"onDelete\"]\n"
        ]
      },
      {
        "title": "DynamoDB Streams",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/dynamo-db-stream/",
        "examples": [
          "npm add --save-dev @aws-lambda-powertools/logger @types/aws-lambda\n",
          "import { defineFunction } from \"@aws-amplify/backend\";\nexport const myDynamoDBFunction = defineFunction({  name: \"dynamoDB-function\",  resourceGroupName: \"data\",});\n"
        ]
      },
      {
        "title": "Enable logging",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/enable-logging/",
        "examples": [
          "export const data = defineData({  // ...  logging: true});\n",
          "export const data = defineData({  // ...  logging: {    excludeVerboseContent: false,    fieldLogLevel: 'all',    retention: '1 month'  }});\n"
        ]
      },
      {
        "title": "Fetch data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/fetch-data/",
        "examples": [
          "import { get } from 'aws-amplify/api';\nasync function getItem() {  try {    const restOperation = get({         apiName: 'myRestApi',        path: 'items'         options: {          retryStrategy: {            strategy: 'no-retry' // Overrides default retry strategy          },        }    });    const response = await restOperation.response;    console.log('GET call succeeded: ', response);  } catch (error) {    console.log('GET call failed: ', JSON.parse(error.response.body));  }}\n",
          "// ...const { body } = await restOperation.response;// consume as a string:const str = await body.text();// OR consume as a blob:const blob = await body.blob();// OR consume as a JSON:const json = await body.json();\n"
        ]
      },
      {
        "title": "Grant Lambda function access to API and Data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/grant-lambda-function-access-to-api/",
        "examples": [
          "import {  a,  defineData,  type ClientSchema} from '@aws-amplify/backend';import { functionWithDataAccess } from '../function/data-access/resource';\nconst schema = a  .schema({    Todo: a.model({      name: a.string(),      description: a.string(),      isDone: a.boolean()    })  })Copy highlighted code example  .authorization(allow => [allow.resource(functionWithDataAccess)]);\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { defineFunction } from '@aws-amplify/backend';\nexport const functionWithDataAccess = defineFunction({  name: 'data-access',});\n"
        ]
      },
      {
        "title": "Modeling relationships",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/relationships/",
        "examples": [
          "const schema = a.schema({  Member: a.model({    name: a.string().required(),    // 1. Create a reference field    teamId: a.id(),    // 2. Create a belongsTo relationship with the reference field    team: a.belongsTo('Team', 'teamId'),  }),\n  Team: a.model({    mantra: a.string().required(),    // 3. Create a hasMany relationship with the reference field    //    from the `Member`s model.    members: a.hasMany('Member', 'teamId'),  }),}).authorization((allow) => allow.publicApiKey());\n",
          "const { data: team } = await client.models.Team.create({  mantra: 'Go Frontend!',});\nconst { data: member } = await client.models.Member.create({  name: \"Tim\",  teamId: team.id,});\n"
        ]
      },
      {
        "title": "Modify Amplify-generated AWS resources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/override-resources/",
        "examples": [
          "import { defineBackend } from '@aws-amplify/backend';import { data } from './data/resource';\nconst backend = defineBackend({  data});\nconst { cfnResources } = backend.data.resources;\nfor (const table of Object.values(cfnResources.amplifyDynamoDbTables)) {  table.pointInTimeRecoveryEnabled = true;}\n",
          "import { defineBackend } from '@aws-amplify/backend';import { data } from './data/resource';\nconst backend = defineBackend({  data});\nconst { cfnResources } = backend.data.resources;\ncfnResources.cfnGraphqlApi.xrayEnabled = true;\n"
        ]
      },
      {
        "title": "Next.js App Router (Server Components)",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "examples": [
          "npm create next-app@14 -- next-amplify-gen2 --typescript --eslint --app --no-src-dir --no-tailwind --import-alias '@/*'cd next-amplify-gen2\n",
          "npm create amplify@latest\n"
        ]
      },
      {
        "title": "Next.js server runtime",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nextjs-server-runtime/",
        "examples": [
          "import { type Schema } from '@/amplify/data/resource';import { generateServerClientUsingCookies } from '@aws-amplify/adapter-nextjs/data';import outputs from '@/amplify_outputs.json';import { cookies } from 'next/headers';\nexport const cookieBasedClient = generateServerClientUsingCookies<Schema>({  config: outputs,  cookies,});\n",
          "import { type Schema } from '@/amplify/data/resource';import { createServerRunner } from '@aws-amplify/adapter-nextjs';import { generateServerClientUsingReqRes } from '@aws-amplify/adapter-nextjs/data';import outputs from '@/amplify_outputs.json';\nexport const { runWithAmplifyServerContext } = createServerRunner({  config: outputs,});\nexport const reqResBasedClient = generateServerClientUsingReqRes<Schema>({  config: outputs,});\n"
        ]
      },
      {
        "title": "Nuxt.js server runtime",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nuxtjs-server-runtime/",
        "examples": [
          "import {  fetchAuthSession,  fetchUserAttributes,  signIn,  signOut,  getCurrentUser,} from \"aws-amplify/auth\";import { generateClient } from \"aws-amplify/data\";import outputs from \"../amplify_outputs.json\";import type { Schema } from \"@/amplify/data/resource\";import { Amplify } from \"aws-amplify\";\n// configure the Amplify client libraryif (process.client) {  Amplify.configure(outputs, { ssr: true });}\n// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\nexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    return {      provide: {        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        Amplify: {          Auth: {            fetchAuthSession,            fetchUserAttributes,            getCurrentUser,            signIn,            signOut,          },          GraphQL: {            client,          },        },      },    };  },});\n",
          "import type { CookieRef } from \"nuxt/app\";import {  createKeyValueStorageFromCookieStorageAdapter,  createUserPoolsTokenProvider,  createAWSCredentialsAndIdentityIdProvider,  runWithAmplifyServerContext,} from \"aws-amplify/adapter-core\";import { parseAmplifyConfig } from \"aws-amplify/utils\";import {  fetchAuthSession,  fetchUserAttributes,  getCurrentUser,} from \"aws-amplify/auth/server\";import { generateClient } from \"aws-amplify/data/server\";import type {  LibraryOptions,  FetchAuthSessionOptions,} from \"@aws-amplify/core\";import type {  GraphQLOptionsV6,  GraphQLResponseV6,} from \"@aws-amplify/api-graphql\";\nimport outputs from \"../amplify_outputs.json\";\n// parse the content of `amplify_outputs.json` into the shape of ResourceConfigconst amplifyConfig = parseAmplifyConfig(outputs);\n// create the Amplify used token cookies names arrayconst userPoolClientId = amplifyConfig.Auth!.Cognito.userPoolClientId;const lastAuthUserCookieName = `CognitoIdentityServiceProvider.${userPoolClientId}.LastAuthUser`;\n// create a GraphQL client that can be used in a server contextconst gqlServerClient = generateClient({ config: amplifyConfig });\nconst getAmplifyAuthKeys = (lastAuthUser: string) =>  [\"idToken\", \"accessToken\", \"refreshToken\", \"clockDrift\"]    .map(      (key) =>        `CognitoIdentityServiceProvider.${userPoolClientId}.${lastAuthUser}.${key}`    )    .concat(lastAuthUserCookieName);\n// define the pluginexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    // The Nuxt composable `useCookie` is capable of sending cookies to the    // client via the `SetCookie` header. If the `expires` option is left empty,    // it sets a cookie as a session cookie. If you need to persist the cookie    // on the client side after your end user closes your Web app, you need to    // specify an `expires` value.    //    // We use 30 days here as an example (the default Cognito refreshToken    // expiration time).    const expires = new Date();    expires.setDate(expires.getDate() + 30);\n    // Get the last auth user cookie value    //    // We use `sameSite: 'lax'` in this example, which allows the cookie to be    // sent to your Nuxt server when your end user gets redirected to your Web    // app from a different domain. You should choose an appropriate value for    // your own use cases.    const lastAuthUserCookie = useCookie(lastAuthUserCookieName, {      sameSite: \"lax\",      expires,      secure: true,    });\n    // Get all Amplify auth token cookie names    const authKeys = lastAuthUserCookie.value      ? getAmplifyAuthKeys(lastAuthUserCookie.value)      : [];\n    // Create a key-value map of cookie name => cookie ref    //    // Using the composable `useCookie` here in the plugin setup prevents    // cross-request pollution.    const amplifyCookies = authKeys      .map((name) => ({        name,        cookieRef: useCookie(name, { sameSite: \"lax\", expires, secure: true }),      }))      .reduce<Record<string, CookieRef<string | null | undefined>>>(        (result, current) => ({          ...result,          [current.name]: current.cookieRef,        }),        {}      );\n    // Create a key value storage based on the cookies    //    // This key value storage is responsible for providing Amplify Auth tokens to    // the APIs that you are calling.    //    // If you implement the `set` method, when Amplify needed to refresh the Auth    // tokens on the server side, the new tokens would be sent back to the client    // side via `SetCookie` header in the response. Otherwise the refresh tokens    // would not be propagate to the client side, and Amplify would refresh    // the tokens when needed on the client side.    //    // In addition, if you decide not to implement the `set` method, you don't    // need to pass any `CookieOptions` to the `useCookie` composable.    const keyValueStorage = createKeyValueStorageFromCookieStorageAdapter({      get(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef && cookieRef.value) {          return { name, value: cookieRef.value };        }\n        return undefined;      },      getAll() {        return Object.entries(amplifyCookies).map(([name, cookieRef]) => {          return { name, value: cookieRef.value ?? undefined };        });      },      set(name, value) {        const cookieRef = amplifyCookies[name];        if (cookieRef) {          cookieRef.value = value;        }      },      delete(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef) {          cookieRef.value = null;        }      },    });\n    // Create a token provider    const tokenProvider = createUserPoolsTokenProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create a credentials provider    const credentialsProvider = createAWSCredentialsAndIdentityIdProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create the libraryOptions object    const libraryOptions: LibraryOptions = {      Auth: {        tokenProvider,        credentialsProvider,      },    };\n    return {      provide: {        // You can add the Amplify APIs that you will use on the server side of        // your Nuxt app here. You must only use the APIs exported from the        // `aws-amplify/<category>/server` subpaths.        //        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        //        // Recall that Amplify server APIs are required to be called in a isolated        // server context that is created by the `runWithAmplifyServerContext`        // function.        Amplify: {          Auth: {            fetchAuthSession: (options: FetchAuthSessionOptions) =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchAuthSession(contextSpec, options)              ),            fetchUserAttributes: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchUserAttributes(contextSpec)              ),            getCurrentUser: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => getCurrentUser(contextSpec)              ),          },          GraphQL: {            client: {              // Follow this typing to ensure the`graphql` API return type can              // be inferred correctly according to your queries and mutations              graphql: <                FALLBACK_TYPES = unknown,                TYPED_GQL_STRING extends string = string              >(                options: GraphQLOptionsV6<FALLBACK_TYPES, TYPED_GQL_STRING>,                additionalHeaders?: Record<string, string>              ) =>                runWithAmplifyServerContext<                  GraphQLResponseV6<FALLBACK_TYPES, TYPED_GQL_STRING>                >(amplifyConfig, libraryOptions, (contextSpec) =>                  gqlServerClient.graphql(                    contextSpec,                    options,                    additionalHeaders                  )                ),            },          },        },      },    };  },});\n"
        ]
      },
      {
        "title": "Optimistic UI",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/optimistic-ui/",
        "examples": [
          "npm add @tanstack/react-query && \\npm add --save-dev @tanstack/react-query-devtools\n",
          "const schema = a.schema({  RealEstateProperty: a.model({    name: a.string().required(),    address: a.string(),  }).authorization(allow => [allow.guest()])})\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'iam',  },});\n"
        ]
      },
      {
        "title": "Public data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/public-data-access/",
        "examples": [
          "const schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'apiKey',  });\n"
        ]
      },
      {
        "title": "Read application data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/query-data/",
        "examples": [
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '@/amplify/data/resource';\nconst client = generateClient<Schema>();\n// list itemsconst { data: todos, errors } = await client.models.Todo.list();\n// get a specific itemconst { data: todo, errors } = await client.models.Todo.get({  id: '...',});\n",
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '@/amplify/data/resource';\nconst client = generateClient<Schema>();\nconst { errors, data: todos } = await client.models.Todo.list({  authMode: 'apiKey',});\n"
        ]
      },
      {
        "title": "Server-Side Rendering",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
        "examples": [
          "npm add aws-amplify @aws-amplify/adapter-nextjs\n",
          "import { createServerRunner } from '@aws-amplify/adapter-nextjs';import outputs from '@/amplify_outputs.json';\nexport const { runWithAmplifyServerContext } = createServerRunner({  config: outputs});\n"
        ]
      },
      {
        "title": "Set up Amplify Data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/set-up-data/",
        "examples": [
          "import { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a.model({      content: a.string(),      isDone: a.boolean()    })    .authorization(allow => [allow.publicApiKey()])});\n// Used for code completion / highlighting when making requests from frontendexport type Schema = ClientSchema<typeof schema>;\n// defines the data resource to be deployedexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: { expiresInDays: 30 }  }});\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Set up a Function",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/set-up-function/",
        "examples": [
          "import { defineFunction } from '@aws-amplify/backend';\nexport const sayHello = defineFunction({  // optionally specify a name for the Function (defaults to directory name)  name: 'say-hello',  // optionally specify a path to your handler (defaults to \"./handler.ts\")  entry: './handler.ts'});\n",
          "import type { Handler } from 'aws-lambda';\nexport const handler: Handler = async (event, context) => {  // your function code goes here  return 'Hello, World!';};\n"
        ]
      },
      {
        "title": "Subscribe to real-time events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/subscribe-data/",
        "examples": [
          "import { useState, useEffect } from 'react';import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource';\ntype Todo = Schema['Todo']['type'];\nconst client = generateClient<Schema>();\nexport default function MyComponent() {  const [todos, setTodos] = useState<Todo[]>([]);\n  useEffect(() => {    const sub = client.models.Todo.observeQuery().subscribe({      next: ({ items, isSynced }) => {        setTodos([...items]);      },    });    return () => sub.unsubscribe();  }, []);\n  return (    <ul>      {todos.map((todo) => (        <li key={todo.id}>{todo.content}</li>      ))}    </ul>  );}\n",
          "// Defining your selection set `as const` ensures the types// propagate through to the response objects.const selectionSet = ['title', 'author', 'posts.*'] as const;\nconst sub = client.models.Blog.observeQuery(  filter: { id: { eq: 'blog-id' } },  selectionSet: [...selectionSet]).subscribe({  next(data) {    handle(data.items)  }});\n// The update uses the same selection set, ensuring all the// required fields are provided to the subscriber.const { data } = await client.models.Blog.update({  id: 'blog-id',  name: 'Updated Name'}, {  selectionSet: [...selectionSet]});\n"
        ]
      },
      {
        "title": "Test the REST API",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/test-api/",
        "examples": [
          "curl <your-api-endpoint>/<your-api-stage>/items\n",
          "curl -H \"Content-Type: application/json\" -d '{\"name\":\"item-1\"}' <your-api-endpoint>/<your-api-stage>/items\n"
        ]
      },
      {
        "title": "Troubleshoot CDKToolkit stack issues",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/cdktoolkit-stack/",
        "examples": [
          "Error bootstrapping account in region “<your-aws-region>”. There is an issue with the CDKToolkit stack which must be resolved manually.\n",
          "cdk bootstrap aws://$(aws sts get-caller-identity --query Account --output text)/$AWS_REGION\n"
        ]
      },
      {
        "title": "Troubleshoot circular dependency issues",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/circular-dependency/",
        "examples": [
          "export const queryFunction = defineFunction({  name: 'query-function',  resourceGroupName: 'data',});\n",
          "export const preSignUpTrigger = defineFunction({  name: 'pre-sign-up',  resourceGroupName: 'auth',});\n"
        ]
      },
      {
        "title": "Use Amazon Q Developer with Amplify",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/q-developer/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\n// ...\n// const schema = a.schema({//   Todo: a//     .model({//       content: a.string(),//     })//     .authorization(allow => [allow.publicApiKey()]),// });\n// ...\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\n// ...\n// const schema = a.schema({//   Todo: a//     .model({//       content: a.string(),//     })//     .authorization(allow => [allow.publicApiKey()]),// });\nCopy highlighted code example// generate a restaurant model with the following fields: id, name, description, address, image, rating, style. Rating can be a float value. Authorization should allow public.\n// ...\n"
        ]
      },
      {
        "title": "Use OpenID Connect as an authorization provider",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/using-oidc-authorization-provider/",
        "examples": [
          "// amplify/data/resource.tsimport { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [      allow.owner('oidc').identityClaim('user_id'),      allow.authenticated('oidc'),      allow        .groups(['testGroupName'], 'oidc')        .withClaimIn('user_groups'),    ]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'oidc',    oidcAuthorizationMode: {      oidcProviderName: 'oidc-provider-name',      oidcIssuerUrl: 'https://example.com',      clientId: 'client-id',      tokenExpiryFromAuthInSeconds: 300,      tokenExpireFromIssueInSeconds: 600,    },  },});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: todos } = await client.models.Todo.list({Copy highlighted code example  authMode: \"oidc\",});\n"
        ]
      },
      {
        "title": "User groups",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/user-groups/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },Copy highlighted code example  groups: [\"ADMINS\", \"EDITORS\"],})\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\"\nconst schema = a.schema({  Article: a.model({}).authorization(allow => [    allow.groups([\"EDITORS\"]).to([\"read\", \"update\"])  ])})\n// ...\n"
        ]
      },
      {
        "title": "With admin actions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/with-admin-actions/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },Copy highlighted code example  groups: [\"ADMINS\"]})\n",
          "import { defineFunction } from \"@aws-amplify/backend\"\nexport const addUserToGroup = defineFunction({  name: \"add-user-to-group\",})\n"
        ]
      },
      {
        "title": "Component slots",
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/slots/",
        "examples": [
          "/*Import your component*/import { Ampligram } from './ui-components';\nfunction App() {  return (    /*Add your component below*/    <Ampligram />  );}export default App;\n",
          "import { Ampligram } from '.ui-components';\nfunction App() {  return (    <Ampligram      style={styles.post}      comments={        //Pass your content into the component slot        <div>          <h1>Hi mom!</h1>          <p>Thanks for checking out my app</p>        </div>      }    />  );}export default App;\n"
        ]
      },
      {
        "title": "Connected forms",
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/",
        "examples": [
          "npm add @aws-amplify/ui-react\n",
          "npx ampx generate forms\n"
        ]
      },
      {
        "title": "Dark Mode",
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "examples": [
          "import * as React from 'react';\nimport {\n  defaultDarkModeOverride,\n  ThemeProvider,\n  Card,\n  Text,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@aws-amplify/ui-react';\n\nexport const DefaultDarkMode = () => {\n  const [colorMode, setColorMode] = React.useState('system');\n  const theme = {\n    name: 'my-theme',\n    overrides: [defaultDarkModeOverride],\n  };\n\n  return (\n    <ThemeProvider theme={theme} colorMode={colorMode}>\n      <Card>\n        <ToggleButtonGroup\n          value={colorMode}\n          isExclusive\n          onChange={(value) => setColorMode(value)}\n        >\n          <ToggleButton value=\"light\">Light</ToggleButton>\n          <ToggleButton value=\"dark\">Dark</ToggleButton>\n          <ToggleButton value=\"system\">System</ToggleButton>\n        </ToggleButtonGroup>\n        <Text>Current color mode: {colorMode}</Text>\n      </Card>\n    </ThemeProvider>\n  );\n};\n\n",
          "import * as React from 'react';\nimport {\n  defaultDarkModeOverride,\n  ThemeProvider,\n  ColorMode,\n  Card,\n  Text,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@aws-amplify/ui-react';\n\nexport const DefaultDarkMode = () => {\n  const [colorMode, setColorMode] = React.useState<ColorMode>('system');\n  const theme = {\n    name: 'my-theme',\n    overrides: [defaultDarkModeOverride],\n  };\n\n  return (\n    <ThemeProvider theme={theme} colorMode={colorMode}>\n      <Card>\n        <ToggleButtonGroup\n          value={colorMode}\n          isExclusive\n          onChange={(value: ColorMode) => setColorMode(value)}\n        >\n          <ToggleButton value=\"light\">Light</ToggleButton>\n          <ToggleButton value=\"dark\">Dark</ToggleButton>\n          <ToggleButton value=\"system\">System</ToggleButton>\n        </ToggleButtonGroup>\n        <Text>Current color mode: {colorMode}</Text>\n      </Card>\n    </ThemeProvider>\n  );\n};\n\n"
        ]
      },
      {
        "title": "Extend with code",
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "examples": [
          "import {AmpligramCollection} from './ui-components'\n<AmpligramCollection isPaginated itemsPerPage={3}/>\n",
          "import {FAQItem} from './ui-components'... ... //⬇️ Element nameshown in Studio<FAQItem overrides={{ Title: { color: 'red' } }} />\n"
        ]
      },
      {
        "title": "Overview",
        "url": "https://ui.docs.amplify.aws/react/theming",
        "examples": [
          "import { ThemeProvider } from '@aws-amplify/ui-react';\nconst App = (\n  <ThemeProvider>\n    <MyApp>/* AmplifyUI */</MyApp>\n  </ThemeProvider>\n);\n\n",
          "// Option 1: Use the theme through component variations\nimport { Text } from '@aws-amplify/ui-react';\nconst MyComponent = ({ children }) => {\n  return <Text variation=\"primary\">{children}</Text>;\n};\n\n// Option 2: Get the theme object through the useTheme hook and style components with it\nimport { Text, useTheme } from '@aws-amplify/ui-react';\nconst MyComponent = ({ children }) => {\n  const { tokens } = useTheme();\n  return <Text color={tokens.colors.font.tertiary}>{children}</Text>;\n};\n\n"
        ]
      },
      {
        "title": "SearchField",
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "examples": [
          "<SearchField  label=\"Search\"  placeholder=\"Search here...\"/>\n",
          "import { SearchField } from '@aws-amplify/ui-react';\n\nexport const DefaultSearchFieldExample = () => <SearchField label=\"search\" />;\n\n"
        ]
      },
      {
        "title": "UI event handler",
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/eventhandling/",
        "examples": [
          "import { HeroLayout1 } from './ui-components'\n<div className=\"App\">  <HeroLayout1 />  ...  <div id=\"lorem-ipsum\">    <h2>Lorem Ipsum</h2>    <p>      Here is a description of my new feature.    </p>  </div>  ...</div>\n",
          "import { NewHomeInput, HomeCollection } from './ui-components'\n...<div>  <NewHomeInput />  <HomeCollection /></div>\n"
        ]
      },
      {
        "title": "<AIConversation>",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
        "examples": [
          "import { AIConversation } from '@aws-amplify/ui-react-ai';\nexport default function Chat() {  return (    <AIConversation      messages={[]}      handleSendMessage={() => {}}    />  )}\n",
          "import ReactMarkdown from 'react-markdown';\n<AIConversation  messageRenderer={{    text: ({ text }) => <ReactMarkdown>{text}</ReactMarkdown>  }}/>\n"
        ]
      },
      {
        "title": "Concepts",
        "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
        "examples": [
          "const schema = a.schema({  Chat: a.model({    name: a.string(),    message: a.hasMany('Message', 'chatId'),  }),  Message: a.model({    text: a.string(),    chat: a.belongsTo('Chat', 'chatId'),    chatId: a.id()  }),}).authorization((allow) => allow.owner());\n",
          "// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\n// list all messagesconst { data } = await client.models.Message.list();\n// create a new messageconst { errors, data: newMessage } = await client.models.Message.create({  text: 'My message text'});\n"
        ]
      },
      {
        "title": "Generation",
        "url": "https://docs.amplify.aws/nextjs/ai/generation/",
        "examples": [
          "const schema = a.schema({  generateRecipe: a.generation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'You are a helpful assistant that generates recipes.',  })    .arguments({ description: a.string() })    .returns(      a.customType({        name: a.string(),        ingredients: a.string().array(),        instructions: a.string(),      })    )    .authorization((allow) => allow.authenticated())});\n",
          "const schema = ({  summarize: a.generation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'Provide an accurate, clear, and concise summary of the input provided'  })  .arguments({ input: a.string() })  .returns(a.string())  .authorization((allow) => allow.guest()),});\n"
        ]
      },
      {
        "title": "Knowledge Base",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/knowledge-base/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({Copy highlighted code example  knowledgeBase: a    .query()    .arguments({ input: a.string() })    .handler(      a.handler.custom({        dataSource: \"KnowledgeBaseDataSource\",        entry: \"./resolvers/kbResolver.js\",      }),    )    .returns(a.string())    .authorization((allow) => allow.authenticated()),\n  chat: a.conversation({    aiModel: a.ai.model(\"Claude 3.5 Haiku\"),    systemPrompt: `You are a helpful assistant.`,Copy highlighted code example    tools: [      a.ai.dataTool({        name: 'searchDocumentation',        description: 'Performs a similarity search over the documentation for ...',        query: a.ref('knowledgeBase'),      }),    ]  })})\n",
          "export function request(ctx) {  const { input } = ctx.args;  return {    resourcePath: \"/knowledgebases/[KNOWLEDGE_BASE_ID]/retrieve\",    method: \"POST\",    params: {      headers: {        \"Content-Type\": \"application/json\",      },      body: JSON.stringify({        retrievalQuery: {          text: input,        },      }),    },  };}\nexport function response(ctx) {  return JSON.stringify(ctx.result.body);}\n"
        ]
      },
      {
        "title": "Sandbox Seed",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/seed/",
        "examples": [
          "npm install @aws-amplify/seed --save-dev\n",
          "amplify/  └── seed/      └── seed.ts\n"
        ]
      },
      {
        "title": "Sandbox features",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/features/",
        "examples": [
          "npx ampx sandbox secret set foo? Enter secret value: ###Done!\nnpx ampx sandbox secret set bar? Enter secret value: ###Done!\n",
          "npx ampx sandbox secret list - foo - bar\n"
        ]
      },
      {
        "title": "Set up AI",
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "examples": [
          "npm create amplify@latest\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Tools",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/tools/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Post: a.model({    title: a.string(),    body: a.string(),  })  .authorization(allow => allow.owner()),\n  chat: a.conversation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'Hello, world!',    tools: [      a.ai.dataTool({        // The name of the tool as it will be referenced in the message to the LLM        name: 'PostQuery',        // The description of the tool provided to the LLM.        // Use this to help the LLM understand when to use the tool.        description: 'Searches for Post records',        // A reference to the `a.model()` that the tool will use        model: a.ref('Post'),        // The operation to perform on the model        modelOperation: 'list',      }),    ],  }),})\n",
          "import { type ClientSchema, a, defineData, defineFunction } from \"@aws-amplify/backend\";\nexport const getWeather = defineFunction({  name: 'getWeather',  entry: './getWeather.ts',  environment: {    API_ENDPOINT: 'MY_API_ENDPOINT',    API_KEY: secret('MY_API_KEY'),  },});\nconst schema = a.schema({  getWeather: a.query()    .arguments({ city: a.string() })    .returns(a.customType({      value: a.integer(),      unit: a.string()    }))    .handler(a.handler.function(getWeather))    .authorization((allow) => allow.authenticated()),\n  chat: a.conversation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'You are a helpful assistant',    tools: [      a.ai.dataTool({        // The name of the tool as it will be referenced in the LLM prompt        name: 'get_weather',        // The description of the tool provided to the LLM.        // Use this to help the LLM understand when to use the tool.        description: 'Gets the weather for a given city',        // A reference to the `a.query()` that the tool will invoke.        query: a.ref('getWeather'),      }),    ]  })    .authorization((allow) => allow.owner()),});\n"
        ]
      },
      {
        "title": "Manual installation",
        "url": "https://docs.amplify.aws/nextjs/start/manual-installation/",
        "examples": [
          "npm create amplify@latest\n",
          "? Where should we create your project? (.) # press enter\n"
        ]
      },
      {
        "title": "Next.js App Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      },
      {
        "title": "Next.js Pages Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      },
      {
        "title": "About amplify_outputs.json",
        "url": "https://docs.amplify.aws/nextjs/reference/amplify_outputs/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,   data, });\nbackend.addOutput({  storage: {    aws_region: \"us-east-1\",    bucket_name: \"my-externally-managed-bucket\",  },});\n",
          "import { Amplify } from \"aws-amplify\";import outputs from \"@/amplify_outputs.json\";\nAmplify.configure(outputs);\n"
        ]
      },
      {
        "title": "CLI commands",
        "url": "https://docs.amplify.aws/nextjs/reference/cli-commands/",
        "examples": [
          "npx ampx sandbox\n",
          "npx ampx sandbox --profile my-other-profile\n"
        ]
      }
    ],
    "data": [
      {
        "title": "Connect your app code to API",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-API/",
        "examples": [
          "import { Amplify } from 'aws-amplify';import outputs from '../amplify_outputs.json';\nAmplify.configure(outputs);\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\n// Now you should be able to make CRUDL operations with the// Data clientconst fetchTodos = async () => {  const { data: todos, errors } = await client.models.Todo.list();};\n"
        ]
      },
      {
        "title": "Customize your data model",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a  .schema({    Customer: a      .model({        customerId: a.id().required(),        // fields can be of various scalar types,        // such as string, boolean, float, integers etc.        name: a.string(),        // fields can be of custom types        location: a.customType({          // fields can be required or optional          lat: a.float().required(),          long: a.float().required(),        }),        // fields can be enums        engagementStage: a.enum([\"PROSPECT\", \"INTERESTED\", \"PURCHASED\"]),        collectionId: a.id(),        collection: a.belongsTo(\"Collection\", \"collectionId\")        // Use custom identifiers. By default, it uses an `id: a.id()` field      })      .identifier([\"customerId\"]),    Collection: a      .model({        customers: a.hasMany(\"Customer\", \"collectionId\"), // setup relationships between types        tags: a.string().array(), // fields can be arrays        representativeId: a.id().required(),        // customize secondary indexes to optimize your query performance      })      .secondaryIndexes((index) => [index(\"representativeId\")]),  })  .authorization((allow) => [allow.publicApiKey()]);\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineData } from '@aws-amplify/backend';\nconst schema = /* GraphQL */`  type Todo @model @auth(rules: [{ allow: owner }]) {    content: String    isDone: Boolean  }`;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n"
        ]
      },
      {
        "title": "Working with files/attachments",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Song: a    .model({      id: a.id().required(),      name: a.string().required(),      coverArtPath: a.string(),    })    .authorization((allow) => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",\n    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineStorage } from \"@aws-amplify/backend\";\nexport const storage = defineStorage({  name: \"amplify-gen2-files\",  access: (allow) => ({    \"images/*\": [allow.authenticated.to([\"read\", \"write\", \"delete\"])],  }),});\n"
        ]
      },
      {
        "title": "Customize your auth rules",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/",
        "examples": [
          "const schema = a.schema({  Post: a.model({    content: a.string()  }).authorization(allow => [    // Allow anyone auth'd with an API key to read everyone's posts.    allow.publicApiKey().to(['read']),    // Allow signed-in user to create, read, update,    // and delete their __OWN__ posts.    allow.owner(),  ])})\n",
          "const schema = a.schema({  // Because no model-level authorization rule is present  // this model will use the global authorization rule.  Todo: a.model({    content: a.string()  }),\n  // Will use model-level authorization rule  Notes: a.model({    content: a.string()    // [Model-level authorization rule]  }).authorization(allow => [allow.publicApiKey().to(['read'])])\n// [Global authorization rule]}).authorization(allow => [  allow.publicApiKey()])\n"
        ]
      },
      {
        "title": "Add custom queries and mutations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type  EchoResponse: a.customType({    content: a.string(),    executionDuration: a.float()  }),\n  // 2. Define your query with the return type and, optionally, arguments  echo: a    .query()    // arguments that this query accepts    .arguments({      content: a.string()    })    // return type of the query    .returns(a.ref('EchoResponse'))    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type or model  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  // 2. Define your mutation with the return type and, optionally, arguments  likePost: a    .mutation()    // arguments that this query accepts    .arguments({      postId: a.string()    })    // return type of the query    .returns(a.ref('Post'))    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n"
        ]
      },
      {
        "title": "Add custom real-time subscriptions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-subscription/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // Message type that's used for this PubSub sample  Message: a.customType({    content: a.string().required(),    channelName: a.string().required()  }),\n  // Message publish mutation  publish: a.mutation()    .arguments({      channelName: a.string().required(),      content: a.string().required()    })    .returns(a.ref('Message'))    .handler(a.handler.custom({ entry: './publish.js' }))    .authorization(allow => [allow.publicApiKey()]),\nCopy highlighted code example  // Subscribe to incoming messages  receive: a.subscription()    // subscribes to the 'publish' mutation    .for(a.ref('publish'))     // subscription handler to set custom filters    .handler(a.handler.custom({entry: './receive.js'}))     // authorization rules as to who can subscribe to the data    .authorization(allow => [allow.publicApiKey()]),\n  // A data model to manage channels  Channel: a.model({    name: a.string(),  }).authorization(allow => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "// This handler simply passes through the arguments of the mutation through as the resultexport function request() {  return {}}\n/** * @param {import('@aws-appsync/utils').Context} ctx */export function response(ctx) {  return ctx.args}\n"
        ]
      },
      {
        "title": "Add fields to data model",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/add-fields/",
        "examples": [
          "a.schema({  Post: a.model({    location: a.customType({      lat: a.float(),      long: a.float(),    }),    content: a.string(),  }),}).authorization((allow) => allow.publicApiKey());\n",
          "a.schema({  Location: a.customType({      lat: a.float(),      long: a.float(),  }),\n  Post: a.model({    location: a.ref('Location'),    content: a.string(),  }),\n  User: a.model({    lastKnownLocation: a.ref('Location'),  }),}).authorization((allow) => allow.publicApiKey());\n"
        ]
      },
      {
        "title": "Batch DynamoDB Operations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/batch-ddb-operations/",
        "examples": [
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  // 1. Define your return type as a custom type or model  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  // 2. Define your mutation with the return type and, optionally, arguments  BatchCreatePost: a    .mutation()    // arguments that this query accepts    .arguments({      content: a.string().array()    })    .returns(a.ref('Post').array())    // only allow signed-in users to call this API    .authorization(allow => [allow.authenticated()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { type ClientSchema, a, defineData } from '@aws-amplify/backend';\nconst schema = a.schema({  Post: a.model({    id: a.id(),    content: a.string(),    likes: a.integer()  }),\n  BatchCreatePost: a    .mutation()    .arguments({      contents: a.string().array()    })    .returns(a.ref('Post').array())    .authorization(allow => [allow.authenticated()])    // 1. Add the custom handler    .handler(      a.handler.custom({        dataSource: a.ref('Post'),        entry: './BatchCreatePostHandler.js',      })    )});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n"
        ]
      },
      {
        "title": "Configure client library",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/configure-client-library/",
        "examples": [
          "import { getAmplifyDataClientConfig } from '@aws-amplify/backend/function/runtime';import { env } from '$amplify/env/my-function';\nconst { resourceConfig, libraryOptions } = await getAmplifyDataClientConfig(  env);\n",
          "import { getAmplifyDataClientConfig } from '@aws-amplify/backend/function/runtime';Copy highlighted code exampleimport { Amplify } from 'aws-amplify';import { env } from '$amplify/env/my-function';\nconst { resourceConfig, libraryOptions } = await getAmplifyDataClientConfig(  env);\nCopy highlighted code exampleAmplify.configure(resourceConfig, libraryOptions);\n"
        ]
      },
      {
        "title": "Configure custom identity and group claims",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/configure-custom-identity-and-group-claim/",
        "examples": [
          "import { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Post: a    .model({      id: a.id(),      owner: a.string(),      postname: a.string(),      content: a.string(),    })    .authorization(allow => [      allow.owner().identityClaim('user_id'),      allow.groups(['Moderator']).withClaimIn('user_groups'),    ]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({ schema });\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    postname: 'My New Post'    content: 'My post content',  },Copy highlighted code example  {    authMode: 'userPool',  });\n"
        ]
      },
      {
        "title": "Connect to AWS AppSync Events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-event-api/",
        "examples": [
          "import type { EventsChannel } from 'aws-amplify/data';import { useState, useEffect, useRef } from 'react';import { Amplify } from 'aws-amplify';import { events } from 'aws-amplify/data';\nAmplify.configure({  API: {    Events: {      endpoint:        'https://abcdefghijklmnopqrstuvwxyz.appsync-api.us-east-1.amazonaws.com/event',      region: 'us-east-1',      defaultAuthMode: 'apiKey',      apiKey: 'da2-abcdefghijklmnopqrstuvwxyz',    },  },});\nexport default function App() { const [myEvents, setMyEvents] = useState<unknown[]>([]);\n  const sub = useRef<ReturnType<EventsChannel['subscribe']>>(null);\n  useEffect(() => {    let channel: EventsChannel;\n    const connectAndSubscribe = async () => {      channel = await events.connect('default/channel');\n      if (!sub.current) {        sub.current = channel.subscribe({          next: (data) => {            console.log('received', data);            setMyEvents((prev) => [data, ...prev]);          },          error: (err) => console.error('error', err),        });      }    };\n    connectAndSubscribe();\n    return () => {      sub.current?.unsubscribe();      sub.current = null;      return channel?.close();    };  }, []);\n  async function publishEvent() {    // Publish via HTTP POST    await events.post('default/channel', { some: 'data' });\n    // Alternatively, publish events through the WebSocket channel    const channel = await events.connect('default/channel');    await channel.publish({ some: 'data' });  }\n  return (    <>      <button onClick={publishEvent}>Publish Event</button>      <ul>        {myEvents.map((data, idx) => (          <li key={idx}>{JSON.stringify(data.event, null, 2)}</li>        ))}      </ul>    </>  );}\n",
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';Copy highlighted code example// import CDK resources:import {  CfnApi,  CfnChannelNamespace,  AuthorizationType,} from 'aws-cdk-lib/aws-appsync';import { Policy, PolicyStatement } from 'aws-cdk-lib/aws-iam';\nconst backend = defineBackend({\tauth,});\nCopy highlighted code example// create a new stack for our Event API resources:const customResources = backend.createStack('custom-resources');\n// add a new Event API to the stack:const cfnEventAPI = new CfnApi(customResources, 'CfnEventAPI', {  name: 'my-event-api',  eventConfig: {    authProviders: [      {        authType: AuthorizationType.USER_POOL,        cognitoConfig: {          awsRegion: customResources.region,          // configure Event API to use the Cognito User Pool provisioned by Amplify:          userPoolId: backend.auth.resources.userPool.userPoolId,        },      },    ],    // configure the User Pool as the auth provider for Connect, Publish, and Subscribe operations:    connectionAuthModes: [{ authType: AuthorizationType.USER_POOL }],    defaultPublishAuthModes: [{ authType: AuthorizationType.USER_POOL }],    defaultSubscribeAuthModes: [{ authType: AuthorizationType.USER_POOL }],  },});\n// create a default namespace for our Event API:const namespace = new CfnChannelNamespace(  customResources,  'CfnEventAPINamespace',  {    apiId: cfnEventAPI.attrApiId,    name: 'default',  });\n// attach a policy to the authenticated user role in our User Pool to grant access to the Event API:backend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(  new Policy(customResources, 'AppSyncEventPolicy', {    statements: [      new PolicyStatement({        actions: [          'appsync:EventConnect',          'appsync:EventSubscribe',          'appsync:EventPublish',        ],        resources: [`${cfnEventAPI.attrApiArn}/*`, `${cfnEventAPI.attrApiArn}`],      }),    ],  }));\n// finally, add the Event API configuration to amplify_outputs:backend.addOutput({  custom: {    events: {      url: `https://${cfnEventAPI.getAtt('Dns.Http').toString()}/event`,      aws_region: customResources.region,      default_authorization_type: AuthorizationType.USER_POOL,    },  },});\n"
        ]
      },
      {
        "title": "Connect to Amazon Bedrock for generative AI use cases",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data, MODEL_ID, generateHaikuFunction } from \"./data/resource\";import { Effect, PolicyStatement } from \"aws-cdk-lib/aws-iam\";\nexport const backend = defineBackend({  auth,  data,  generateHaikuFunction,});\nbackend.generateHaikuFunction.resources.lambda.addToRolePolicy(  new PolicyStatement({    effect: Effect.ALLOW,    actions: [\"bedrock:InvokeModel\"],    resources: [      `arn:aws:bedrock:*::foundation-model/${MODEL_ID}`,    ],  }));\n",
          "import { Effect, PolicyStatement } from \"aws-cdk-lib/aws-iam\";import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nexport const backend = defineBackend({  auth,  data,});\nconst MODEL_ID = \"anthropic.claude-3-haiku-20240307-v1:0\";\nconst bedrockDataSource = backend.data.addHttpDataSource(  \"BedrockDataSource\",  \"https://bedrock-runtime.us-east-1.amazonaws.com\",  {    authorizationConfig: {      signingRegion: backend.data.stack.region,      signingServiceName: \"bedrock\",    },  });\nbedrockDataSource.grantPrincipal.addToPrincipalPolicy(  new PolicyStatement({    effect: Effect.ALLOW,    actions: [\"bedrock:InvokeModel\"],    resources: [      `arn:aws:bedrock:${backend.data.stack.region}::foundation-model/${MODEL_ID}`,    ],  }));\nbackend.data.resources.cfnResources.cfnGraphqlApi.environmentVariables = {  MODEL_ID}\n"
        ]
      },
      {
        "title": "Connect to Amazon EventBridge to send and receive events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-eventbridge-datasource/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  OrderStatus: a.enum([\"OrderPending\", \"OrderShipped\", \"OrderDelivered\"]),  OrderStatusChange: a.customType({    orderId: a.id().required(),    status: a.ref(\"OrderStatus\").required(),    message: a.string().required(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import { aws_events } from \"aws-cdk-lib\";import {  Effect,  PolicyDocument,  PolicyStatement,  Role,  ServicePrincipal,} from \"aws-cdk-lib/aws-iam\";\nexport const backend = defineBackend({  auth,  data,});\n// Create a new stack for the EventBridge data sourceconst eventStack = backend.createStack(\"MyExternalDataSources\");\n// Reference or create an EventBridge EventBusconst eventBus = aws_events.EventBus.fromEventBusName(  eventStack,  \"MyEventBus\",  \"default\");\n// Add the EventBridge data sourceCopy highlighted code examplebackend.data.addEventBridgeDataSource(\"MyEventBridgeDataSource\", eventBus);\n// Create a policy statement to allow invoking the AppSync API's mutationsconst policyStatement = new PolicyStatement({  effect: Effect.ALLOW,  actions: [\"appsync:GraphQL\"],  resources: [`${backend.data.resources.graphqlApi.arn}/types/Mutation/*`],});\n// Create a role for the EventBus to assumeconst eventBusRole = new Role(eventStack, \"AppSyncInvokeRole\", {  assumedBy: new ServicePrincipal(\"events.amazonaws.com\"),  inlinePolicies: {    PolicyStatement: new PolicyDocument({      statements: [policyStatement],    }),  },});\n// Create an EventBridge rule to route events to the AppSync APIconst rule = new aws_events.CfnRule(eventStack, \"MyOrderRule\", {  eventBusName: eventBus.eventBusName,  name: \"broadcastOrderStatusChange\",  eventPattern: {    source: [\"amplify.orders\"],    /* The shape of the event pattern must match EventBridge's event message structure.    So, this field must be spelled as \"detail-type\". Otherwise, events will not trigger the rule.\n    https://docs.aws.amazon.com/AmazonS3/latest/userguide/ev-events.html    */    [\"detail-type\"]: [\"OrderStatusChange\"],    detail: {      orderId: [{ exists: true }],      status: [\"PENDING\", \"SHIPPED\", \"DELIVERED\"],      message: [{ exists: true }],    },  },  targets: [    {      id: \"orderStatusChangeReceiver\",      arn: backend.data.resources.cfnResources.cfnGraphqlApi        .attrGraphQlEndpointArn,      roleArn: eventBusRole.roleArn,      appSyncParameters: {        graphQlOperation: `        mutation PublishOrderFromEventBridge(          $orderId: String!          $status: String!          $message: String!        ) {          publishOrderFromEventBridge(orderId: $orderId, status: $status, message: $message) {            orderId            status            message          }        }`,      },      inputTransformer: {        inputPathsMap: {          orderId: \"$.detail.orderId\",          status: \"$.detail.status\",          message: \"$.detail.message\",        },        inputTemplate: JSON.stringify({          orderId: \"<orderId>\",          status: \"<status>\",          message: \"<message>\",        }),      },    },  ],});\n"
        ]
      },
      {
        "title": "Connect to Amazon OpenSearch for search and aggregate queries",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({Copy highlighted code example  Todo: a    .model({      content: a.string(),      done: a.boolean(),      priority: a.enum([\"low\", \"medium\", \"high\"]),    })    .authorization((allow) => [allow.publicApiKey()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "Copy highlighted code exampleimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({  auth,  data});\nCopy highlighted code exampleconst todoTable =  backend.data.resources.cfnResources.amplifyDynamoDbTables['Todo'];\n// Update table settingstodoTable.pointInTimeRecoveryEnabled = true;\ntodoTable.streamSpecification = {  streamViewType: dynamodb.StreamViewType.NEW_IMAGE};\n// Get the DynamoDB table ARNconst tableArn = backend.data.resources.tables['Todo'].tableArn;// Get the DynamoDB table nameconst tableName = backend.data.resources.tables['Todo'].tableName;\n"
        ]
      },
      {
        "title": "Connect to Amazon Polly for Text-To-Speech APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-polly/",
        "examples": [
          "npm add @aws-sdk/client-polly\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Connect to Amazon Rekognition for Image Analysis APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
        "examples": [
          "npm add @aws-sdk/client-rekognition\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Connect to Amazon Translate for language translation APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-translate/",
        "examples": [
          "npm add @aws-sdk/client-translate\n",
          "import { defineBackend } from '@aws-amplify/backend';import { PolicyStatement } from 'aws-cdk-lib/aws-iam';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({ auth, data});\nconst translateDataSource = backend.data.addHttpDataSource( \"TranslateDataSource\", `https://translate.${backend.data.stack.region}.amazonaws.com`, {   authorizationConfig: {     signingRegion: backend.data.stack.region,     signingServiceName: \"translate\",   }, });\ntranslateDataSource.grantPrincipal.addToPrincipalPolicy( new PolicyStatement({   actions: [\"translate:TranslateText\"],   resources: [\"*\"], }));\n"
        ]
      },
      {
        "title": "Connect to an external HTTP endpoint",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-http-datasource/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  Post: a.customType({    title: a.string(),    content: a.string(),    author: a.string().required(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,  data,});\nconst httpDataSource = backend.data.addHttpDataSource(  \"HttpDataSource\",  \"https://www.example.com\");\n"
        ]
      },
      {
        "title": "Connect to external Amazon DynamoDB data sources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),Copy highlighted code example  Post: a.customType({    id: a.id().required(),    author: a.string().required(),    title: a.string(),    content: a.string(),    url: a.string(),    ups: a.integer(),    downs: a.integer(),    version: a.integer(),  }),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import { aws_dynamodb } from \"aws-cdk-lib\";\nexport const backend = defineBackend({  auth,  data,});\nCopy highlighted code exampleconst externalDataSourcesStack = backend.createStack(\"MyExternalDataSources\");\nconst externalTable = aws_dynamodb.Table.fromTableName(  externalDataSourcesStack,  \"MyExternalPostTable\",  \"PostTable\");\nbackend.data.addDynamoDbDataSource(  \"ExternalPostTableDataSource\",  externalTable);\n"
        ]
      },
      {
        "title": "Connect your app to existing MySQL and PostgreSQL database",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-postgres-mysql-database/",
        "examples": [
          "npx ampx sandbox secret set SQL_CONNECTION_STRING\n",
          "mysql://user:password@hostname:port/db-name\n"
        ]
      },
      {
        "title": "Create a user profile record",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/create-user-profile-record/",
        "examples": [
          "npm add --save-dev @types/aws-lambda\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";import { postConfirmation } from \"../auth/post-confirmation/resource\";\nconst schema = a  .schema({    UserProfile: a      .model({        email: a.string(),        profileOwner: a.string(),      })      .authorization((allow) => [        allow.ownerDefinedIn(\"profileOwner\"),      ]),  })  .authorization((allow) => [allow.resource(postConfirmation)]);export type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n"
        ]
      },
      {
        "title": "Create, update, and delete application data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/mutate-data/",
        "examples": [
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '../amplify/data/resource'\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create({  content: \"My new todo\",  isDone: true,})\n",
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '../amplify/data/resource';\nconst client = generateClient<Schema>();\nconst todo = {  id: 'some_id',  content: 'Updated content',};\nconst { data: updatedTodo, errors } = await client.models.Todo.update(todo);\n"
        ]
      },
      {
        "title": "Custom data access using Lambda functions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/custom-data-access-patterns/",
        "examples": [
          "import {  type ClientSchema,  a,  defineData,  defineFunction,} from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    // STEP 1    // Indicate which models / fields should use a custom authorization rule    .authorization(allow => [allow.custom()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'lambda',    // STEP 2    // Pass in the function to be used for a custom authorization rule    lambdaAuthorizationMode: {      function: defineFunction({        entry: './custom-authorizer.ts',      }),      // (Optional) STEP 3      // Configure the token's time to live      timeToLiveInSeconds: 300,    },  },});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'lambda',  });\n"
        ]
      },
      {
        "title": "Custom functions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/custom-functions/",
        "examples": [
          "import { execSync } from \"node:child_process\";import * as path from \"node:path\";import { fileURLToPath } from \"node:url\";import { defineFunction } from \"@aws-amplify/backend\";import { DockerImage, Duration } from \"aws-cdk-lib\";import { Code, Function, Runtime } from \"aws-cdk-lib/aws-lambda\";\nconst functionDir = path.dirname(fileURLToPath(import.meta.url));\nexport const sayHelloFunctionHandler = defineFunction(  (scope) =>    new Function(scope, \"say-hello\", {      handler: \"index.handler\",      runtime: Runtime.PYTHON_3_9, // or any other python version      timeout: Duration.seconds(20), //  default is 3 seconds      code: Code.fromAsset(functionDir, {        bundling: {          image: DockerImage.fromRegistry(\"dummy\"), // replace with desired image from AWS ECR Public Gallery          local: {            tryBundle(outputDir: string) {              execSync(                `python3 -m pip install -r ${path.join(functionDir, \"requirements.txt\")} -t ${path.join(outputDir)} --platform manylinux2014_x86_64 --only-binary=:all:`              );              execSync(`cp -r ${functionDir}/* ${path.join(outputDir)}`);              return true;            },          },        },      }),    }),    {      resourceGroupName: \"auth\" // Optional: Groups this function with auth resource    });\n",
          "import json\ndef handler(event, context):  return {      \"statusCode\": 200,      \"body\": json.dumps({          \"message\": \"Hello World\",      }),  }\n"
        ]
      },
      {
        "title": "Customize authorization rules",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/authorization/",
        "examples": [
          "export const storage = defineStorage({  name: 'myProjectFiles',  access: (allow) => ({    'media/*': [      allow.guest.to(['read']) // additional actions such as \"write\" and \"delete\" can be specified depending on your use case    ]  })});\n",
          "export const storage = defineStorage({  name: 'myProjectFiles',  access: (allow) => ({    'media/*': [      allow.authenticated.to(['read']) // additional actions such as \"write\" and \"delete\" can be specified depending on your use case    ]  })});\n"
        ]
      },
      {
        "title": "Customize data model identifiers",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/identifiers/",
        "examples": [
          "const schema = a.schema({  Todo: a.model({    content: a.string(),    completed: a.boolean(),  })  .authorization(allow => [allow.publicApiKey()]),});\n",
          "const client = generateClient<Schema>();\nconst todo = await client.models.Todo.create({ content: 'Buy Milk', completed: false });console.log(`New Todo created: ${todo.id}`); // New Todo created: 5DB6B4CC-CD41-49F5-9844-57C0AB506B69\n"
        ]
      },
      {
        "title": "Customize secondary indexes",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/secondary-index/",
        "examples": [
          "export const schema = a.schema({  Customer: a    .model({      name: a.string(),      phoneNumber: a.phone(),      accountRepresentativeId: a.id().required(),    })Copy highlighted code example    .secondaryIndexes((index) => [index(\"accountRepresentativeId\")])    .authorization(allow => [allow.publicApiKey()]),});\n",
          "import { type Schema } from '../amplify/data/resource';import { generateClient } from 'aws-amplify/data';\nconst client = generateClient<Schema>();\nconst { data, errors } =Copy highlighted code example  await client.models.Customer.listCustomerByAccountRepresentativeId({    accountRepresentativeId: \"YOUR_REP_ID\",  });\n"
        ]
      },
      {
        "title": "Define authorization rules",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/customize-authz/",
        "examples": [
          "Amplify.configure(outputs, {  API: {    REST: {      headers: async () => {        return { 'X-Api-Key': apiKey };      }    }  }});\n",
          "import { fetchAuthSession } from 'aws-amplify/auth'\nconst session = await fetchAuthSession();const token = session.tokens?.idToken\n"
        ]
      },
      {
        "title": "Disable Operations",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/disable-operations/",
        "examples": [
          "export const schema = a.schema({  Customer: a    .model({      name: a.string(),      phoneNumber: a.phone(),      accountRepresentativeId: a.id().required(),    })Copy highlighted code example    .disableOperations([\"mutations\", \"subscriptions\", \"queries\"])    .authorization(allow => [allow.publicApiKey()]),});\n",
          "// Disable all mutationsdisableOperations: [\"mutations\"]\n// Disable both subscriptions and queriesdisableOperations: [\"subscriptions\", \"queries\"]\n// Disable specific operationsdisableOperations: [\"create\", \"update\", \"list\"]\n// Disable specific subscription typesdisableOperations: [\"onCreate\", \"onUpdate\"]\n// Mix general categories with specific operationsdisableOperations: [\"queries\", \"create\", \"onDelete\"]\n"
        ]
      },
      {
        "title": "Enable logging",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/enable-logging/",
        "examples": [
          "export const data = defineData({  // ...  logging: true});\n",
          "export const data = defineData({  // ...  logging: {    excludeVerboseContent: false,    fieldLogLevel: 'all',    retention: '1 month'  }});\n"
        ]
      },
      {
        "title": "External identity providers",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/external-identity-providers/",
        "examples": [
          "import { defineAuth, secret } from '@aws-amplify/backend';\nexport const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      google: {        clientId: secret('GOOGLE_CLIENT_ID'),        clientSecret: secret('GOOGLE_CLIENT_SECRET')      },      signInWithApple: {        clientId: secret('SIWA_CLIENT_ID'),        keyId: secret('SIWA_KEY_ID'),        privateKey: secret('SIWA_PRIVATE_KEY'),        teamId: secret('SIWA_TEAM_ID')      },      loginWithAmazon: {        clientId: secret('LOGINWITHAMAZON_CLIENT_ID'),        clientSecret: secret('LOGINWITHAMAZON_CLIENT_SECRET')      },      facebook: {        clientId: secret('FACEBOOK_CLIENT_ID'),        clientSecret: secret('FACEBOOK_CLIENT_SECRET')      },      callbackUrls: [        'http://localhost:3000/profile',        'https://mywebsite.com/profile'      ],      logoutUrls: ['http://localhost:3000/', 'https://mywebsite.com'],    }  }});\n",
          "import { defineAuth } from '@aws-amplify/backend';\nexport const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      loginWithAmazon: {        clientId: secret('LOGINWITHAMAZON_CLIENT_ID'),        clientSecret: secret('LOGINWITHAMAZON_CLIENT_SECRET'),Copy highlighted code example        scopes: ['profile']      },      callbackUrls: [        'http://localhost:3000/profile',        'https://mywebsite.com/profile'      ],      logoutUrls: ['http://localhost:3000/', 'https://mywebsite.com'],    }  }});\n"
        ]
      },
      {
        "title": "Fetch data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/fetch-data/",
        "examples": [
          "import { get } from 'aws-amplify/api';\nasync function getItem() {  try {    const restOperation = get({         apiName: 'myRestApi',        path: 'items'         options: {          retryStrategy: {            strategy: 'no-retry' // Overrides default retry strategy          },        }    });    const response = await restOperation.response;    console.log('GET call succeeded: ', response);  } catch (error) {    console.log('GET call failed: ', JSON.parse(error.response.body));  }}\n",
          "// ...const { body } = await restOperation.response;// consume as a string:const str = await body.text();// OR consume as a blob:const blob = await body.blob();// OR consume as a JSON:const json = await body.json();\n"
        ]
      },
      {
        "title": "Field-level validation",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/field-level-validation/",
        "examples": [
          "const schema = a.schema({  Todo: a.model({    content: a.string().validate(v =>       v        .minLength(1, 'Content must be at least 1 character long')        .maxLength(100, 'Content must be less than 100 characters')        .matches('^[a-zA-Z0-9\\\\\\\\s]+$', 'Content must contain only letters, numbers, and spaces')    )  })  .authorization(allow => [allow.publicApiKey()])});\n"
        ]
      },
      {
        "title": "Grant Lambda function access to API and Data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/grant-lambda-function-access-to-api/",
        "examples": [
          "import {  a,  defineData,  type ClientSchema} from '@aws-amplify/backend';import { functionWithDataAccess } from '../function/data-access/resource';\nconst schema = a  .schema({    Todo: a.model({      name: a.string(),      description: a.string(),      isDone: a.boolean()    })  })Copy highlighted code example  .authorization(allow => [allow.resource(functionWithDataAccess)]);\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema});\n",
          "import { defineFunction } from '@aws-amplify/backend';\nexport const functionWithDataAccess = defineFunction({  name: 'data-access',});\n"
        ]
      },
      {
        "title": "Microsoft Entra ID (SAML)",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/examples/microsoft-entra-id-saml/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\n/** * Define and configure your auth resource * @see https://docs.amplify.aws/gen2/build-a-backend/auth */export const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      logoutUrls: [\"http://localhost:3000/come-back-soon\"],      callbackUrls: [\"http://localhost:3000/profile\"],    },  },})\n",
          "{  \"auth\": {    \"aws_region\": \"us-east-1\",    \"user_pool_id\": \"<your-cognito-user-pool-id>\",    \"user_pool_client_id\": \"<your-cognito-user-pool-client-id>\",    \"identity_pool_id\": \"<your-cognito-identity-pool-id>\",    \"mfa_methods\": [],    \"standard_required_attributes\": [      \"email\"    ],    \"username_attributes\": [      \"email\"    ],    \"user_verification_types\": [      \"email\"    ],    \"mfa_configuration\": \"OFF\",    \"password_policy\": {      \"min_length\": 8,      \"require_numbers\": true,      \"require_lowercase\": true,      \"require_uppercase\": true,      \"require_symbols\": true    },    \"oauth\": {      \"identity_providers\": [],      \"redirect_sign_in_uri\": [        \"http://localhost:3000/profile\"      ],      \"redirect_sign_out_uri\": [        \"http://localhost:3000/come-back-soon\"      ],      \"response_type\": \"code\",      \"scopes\": [        \"phone\",        \"email\",        \"openid\",        \"profile\",        \"aws.cognito.signin.user.admin\"      ],Copy highlighted code example      \"domain\": \"<some-hash>.auth.us-east-1.amazoncognito.com\"    },  },  \"version\": \"1\"}\n"
        ]
      },
      {
        "title": "Modeling relationships",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/relationships/",
        "examples": [
          "const schema = a.schema({  Member: a.model({    name: a.string().required(),    // 1. Create a reference field    teamId: a.id(),    // 2. Create a belongsTo relationship with the reference field    team: a.belongsTo('Team', 'teamId'),  }),\n  Team: a.model({    mantra: a.string().required(),    // 3. Create a hasMany relationship with the reference field    //    from the `Member`s model.    members: a.hasMany('Member', 'teamId'),  }),}).authorization((allow) => allow.publicApiKey());\n",
          "const { data: team } = await client.models.Team.create({  mantra: 'Go Frontend!',});\nconst { data: member } = await client.models.Member.create({  name: \"Tim\",  teamId: team.id,});\n"
        ]
      },
      {
        "title": "Multi-user data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/multi-user-data-access/",
        "examples": [
          "const schema = a.schema({  Todo: a    .model({      content: a.string(),      owners: a.string().array(),    })    .authorization(allow => [allow.ownersDefinedIn('owners')]),});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\n// Create a record with current user as first ownerconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'userPool',  });\n"
        ]
      },
      {
        "title": "Next.js App Router (Server Components)",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "examples": [
          "npm create next-app@14 -- next-amplify-gen2 --typescript --eslint --app --no-src-dir --no-tailwind --import-alias '@/*'cd next-amplify-gen2\n",
          "npm create amplify@latest\n"
        ]
      },
      {
        "title": "Optimistic UI",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/optimistic-ui/",
        "examples": [
          "npm add @tanstack/react-query && \\npm add --save-dev @tanstack/react-query-devtools\n",
          "const schema = a.schema({  RealEstateProperty: a.model({    name: a.string().required(),    address: a.string(),  }).authorization(allow => [allow.guest()])})\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'iam',  },});\n"
        ]
      },
      {
        "title": "Per-user/per-owner data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/per-user-per-owner-data-access/",
        "examples": [
          "// The \"owner\" of a Todo is allowed to create, read, update, and delete their own todosconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.owner()]),});\n",
          "// The \"owner\" of a Todo record is only allowed to create, read, and update it.// The \"owner\" of a Todo record is denied to delete it.const schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.owner().to(['create', 'read', 'update'])]),});\n"
        ]
      },
      {
        "title": "Public data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/public-data-access/",
        "examples": [
          "const schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.publicApiKey()]),});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'apiKey',  });\n"
        ]
      },
      {
        "title": "Read application data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/query-data/",
        "examples": [
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '@/amplify/data/resource';\nconst client = generateClient<Schema>();\n// list itemsconst { data: todos, errors } = await client.models.Todo.list();\n// get a specific itemconst { data: todo, errors } = await client.models.Todo.get({  id: '...',});\n",
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '@/amplify/data/resource';\nconst client = generateClient<Schema>();\nconst { errors, data: todos } = await client.models.Todo.list({  authMode: 'apiKey',});\n"
        ]
      },
      {
        "title": "Set up Amplify Data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/set-up-data/",
        "examples": [
          "import { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a.model({      content: a.string(),      isDone: a.boolean()    })    .authorization(allow => [allow.publicApiKey()])});\n// Used for code completion / highlighting when making requests from frontendexport type Schema = ClientSchema<typeof schema>;\n// defines the data resource to be deployedexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'apiKey',    apiKeyAuthorizationMode: { expiresInDays: 30 }  }});\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Set up Amplify HTTP API",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/set-up-http-api/",
        "examples": [
          "import { defineFunction } from \"@aws-amplify/backend\";\nexport const myApiFunction = defineFunction({  name: \"api-function\",});\n",
          "import type { APIGatewayProxyHandlerV2 } from \"aws-lambda\";\nexport const handler: APIGatewayProxyHandlerV2 = async (event) => {  console.log(\"event\", event);  return {    statusCode: 200,    // Modify the CORS settings below to match your specific requirements    headers: {      \"Access-Control-Allow-Origin\": \"*\", // Restrict this to domains you trust      \"Access-Control-Allow-Headers\": \"*\", // Specify only the headers you need to allow    },    body: JSON.stringify(\"Hello from api-function!\"),  };};\n"
        ]
      },
      {
        "title": "Set up Amplify REST API",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/set-up-rest-api/",
        "examples": [
          "import { defineFunction } from \"@aws-amplify/backend\";\nexport const myApiFunction = defineFunction({  name: \"api-function\",});\n",
          "import type { APIGatewayProxyHandler } from \"aws-lambda\";\nexport const handler: APIGatewayProxyHandler = async (event) => {  console.log(\"event\", event);  return {    statusCode: 200,    // Modify the CORS settings below to match your specific requirements    headers: {      \"Access-Control-Allow-Origin\": \"*\", // Restrict this to domains you trust      \"Access-Control-Allow-Headers\": \"*\", // Specify only the headers you need to allow    },    body: JSON.stringify(\"Hello from myFunction!\"),  };};\n"
        ]
      },
      {
        "title": "Set up Storage",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/set-up-storage/",
        "examples": [
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'amplifyTeamDrive'});\n",
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';Copy highlighted code exampleimport { storage } from './storage/resource';\ndefineBackend({  auth,Copy highlighted code example  storage});\n"
        ]
      },
      {
        "title": "Set up a Function",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/set-up-function/",
        "examples": [
          "import { defineFunction } from '@aws-amplify/backend';\nexport const sayHello = defineFunction({  // optionally specify a name for the Function (defaults to directory name)  name: 'say-hello',  // optionally specify a path to your handler (defaults to \"./handler.ts\")  entry: './handler.ts'});\n",
          "import type { Handler } from 'aws-lambda';\nexport const handler: Handler = async (event, context) => {  // your function code goes here  return 'Hello, World!';};\n"
        ]
      },
      {
        "title": "Set up in-app messaging",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/set-up-in-app-messaging/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import {  CfnApp,  CfnCampaign,  CfnSegment,} from \"aws-cdk-lib/aws-pinpoint\";import { Policy, PolicyStatement } from \"aws-cdk-lib/aws-iam\";import { Stack } from \"aws-cdk-lib/core\";\n\nconst backend = defineBackend({  auth,   data,  // additional resources });\nconst inAppMessagingStack = backend.createStack(\"inAppMessaging-stack\");\n// create a Pinpoint appconst pinpoint = new CfnApp(inAppMessagingStack, \"Pinpoint\", {  name: \"myPinpointApp\",});\n// create a segment const mySegment = new CfnSegment(inAppMessagingStack, \"Segment\", {  applicationId: pinpoint.ref,  name: \"mySegment\",});\n// create a campaign with event and in-app message templatenew CfnCampaign(inAppMessagingStack, \"Campaign\", {  applicationId: pinpoint.ref,  name: \"MyCampaign\",  segmentId: mySegment.attrSegmentId,  schedule: {    // ensure the start and end time are in the future    startTime: \"2024-02-23T14:39:34Z\",     endTime: \"2024-02-29T14:32:40Z\",    frequency: \"IN_APP_EVENT\",    eventFilter: {      dimensions: {        eventType: {          dimensionType: \"INCLUSIVE\",          values: [\"my_first_event\"],        },      },      filterType: \"ENDPOINT\",    },  },\n  messageConfiguration: {    inAppMessage: {      layout: \"TOP_BANNER\",      content: [        {          // define the content of the in-app message          bodyConfig: {            alignment: \"CENTER\",            body: \"This is an example in-app message.\",            textColor: \"#FFFFFF\",          },          backgroundColor: \"#000000\",          headerConfig: {            alignment: \"CENTER\",            header: \"Welcome!\",            textColor: \"#FFFFFF\",          },          // optionally, define buttons, images, etc.        },      ],    },  },});\n//create an IAM policy to allow interacting with Pinpoint in-app messagingconst pinpointPolicy = new Policy(inAppMessagingStack, \"PinpointPolicy\", {  policyName: \"PinpointPolicy\",  statements: [    new PolicyStatement({      actions: [        \"mobiletargeting:GetInAppMessages\",        \"mobiletargeting:UpdateEndpoint\",        \"mobiletargeting:PutEvents\",      ],      resources: [pinpoint.attrArn + \"/*\", pinpoint.attrArn],    }),  ],});\n// apply the policy to the authenticated and unauthenticated rolesbackend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(pinpointPolicy);backend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(pinpointPolicy);\n// patch the custom Pinpoint resource to the expected output configurationbackend.addOutput({  notifications: {    amazon_pinpoint_app_id: pinpoint.ref,    aws_region: Stack.of(pinpoint).region,    channels: [\"IN_APP_MESSAGING\"],  },});\n",
          "npm add aws-amplify\n"
        ]
      },
      {
        "title": "Signed-in user data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/signed-in-user-data-access/",
        "examples": [
          "const schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [allow.authenticated()]),});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: newTodo } = await client.models.Todo.create(  {    content: 'My new todo',  },Copy highlighted code example  {    authMode: 'userPool',  });\n"
        ]
      },
      {
        "title": "Subscribe to real-time events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/subscribe-data/",
        "examples": [
          "import { useState, useEffect } from 'react';import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource';\ntype Todo = Schema['Todo']['type'];\nconst client = generateClient<Schema>();\nexport default function MyComponent() {  const [todos, setTodos] = useState<Todo[]>([]);\n  useEffect(() => {    const sub = client.models.Todo.observeQuery().subscribe({      next: ({ items, isSynced }) => {        setTodos([...items]);      },    });    return () => sub.unsubscribe();  }, []);\n  return (    <ul>      {todos.map((todo) => (        <li key={todo.id}>{todo.content}</li>      ))}    </ul>  );}\n",
          "// Defining your selection set `as const` ensures the types// propagate through to the response objects.const selectionSet = ['title', 'author', 'posts.*'] as const;\nconst sub = client.models.Blog.observeQuery(  filter: { id: { eq: 'blog-id' } },  selectionSet: [...selectionSet]).subscribe({  next(data) {    handle(data.items)  }});\n// The update uses the same selection set, ensuring all the// required fields are provided to the subscriber.const { data } = await client.models.Blog.update({  id: 'blog-id',  name: 'Updated Name'}, {  selectionSet: [...selectionSet]});\n"
        ]
      },
      {
        "title": "Troubleshoot \"Cannot find module $amplify/env/<function-name>\"",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/cannot-find-module-amplify-env/",
        "examples": [
          "{  \"exclude\": [\"amplify/**/*\"]}\n",
          "{  \"name\": \"my-backend\",  \"private\": true,  \"exports\": {    \"./schema\": \"./amplify/data/resource.ts\",    \"./outputs\": \"./amplify_outputs.json\"  }}\n"
        ]
      },
      {
        "title": "Upload files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload-files/",
        "examples": [
          "npm add @aws-amplify/ui-react-storage aws-amplify\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';import '@aws-amplify/ui-react/styles.css';\nexport const DefaultFileUploaderExample = () => {  return (    <FileUploader      acceptedFileTypes={['image/*']}      path=\"public/\"      maxFileCount={1}      isResumable    />  );};\n"
        ]
      },
      {
        "title": "Use Amazon Q Developer with Amplify",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/q-developer/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\n// ...\n// const schema = a.schema({//   Todo: a//     .model({//       content: a.string(),//     })//     .authorization(allow => [allow.publicApiKey()]),// });\n// ...\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\n// ...\n// const schema = a.schema({//   Todo: a//     .model({//       content: a.string(),//     })//     .authorization(allow => [allow.publicApiKey()]),// });\nCopy highlighted code example// generate a restaurant model with the following fields: id, name, description, address, image, rating, style. Rating can be a float value. Authorization should allow public.\n// ...\n"
        ]
      },
      {
        "title": "Use Amplify Storage with any S3 bucket",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/use-with-custom-s3/",
        "examples": [
          "{  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Sid\": \"Statement1\",      \"Principal\": {         \"AWS\": \"arn:aws:iam::<AWS-account-ID>:role/<role-name>\"       },      \"Effect\": \"Allow\",      \"Action\": [        \"s3:PutObject\",        \"s3:GetObject\",        \"s3:DeleteObject\",        \"s3:ListBucket\"      ],      \"Resource\": [        \"arn:aws:s3:::<bucket-name>\",        \"arn:aws:s3:::<bucket-name>/*\"      ]    }  ]}\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { Effect, Policy, PolicyStatement } from \"aws-cdk-lib/aws-iam\";import { Bucket } from \"aws-cdk-lib/aws-s3\";import { auth } from \"./auth/resource\";\nconst backend = defineBackend({  auth,});Copy highlighted code exampleconst customBucketStack = backend.createStack(\"custom-bucket-stack\");\n// Import existing bucketconst customBucket = Bucket.fromBucketAttributes(customBucketStack, \"MyCustomBucket\", {  bucketArn: \"arn:aws:s3:::<bucket-name>\",  region: \"<region>\"});\nbackend.addOutput({  storage: {    aws_region: customBucket.env.region,    bucket_name: customBucket.bucketName,    // optional: `buckets` can be used when setting up more than one existing bucket    buckets: [      {        aws_region: customBucket.env.region,        bucket_name: customBucket.bucketName,        name: customBucket.bucketName,        /*          optional: `paths` can be used to set up access to specific           bucket prefixes and configure user access types to them        */         paths: {          \"public/*\": {            // \"write\" and \"delete\" can also be added depending on your use case            guest: [\"get\", \"list\"],           },        },      }    ]  },});\n/*  Define an inline policy to attach to Amplify's unauth role  This policy defines how unauthenticated/guest users can access your existing bucket*/ const unauthPolicy = new Policy(backend.stack, \"customBucketUnauthPolicy\", {  statements: [    new PolicyStatement({      effect: Effect.ALLOW,      actions: [\"s3:GetObject\"],      resources: [`${customBucket.bucketArn}/public/*`],    }),    new PolicyStatement({      effect: Effect.ALLOW,      actions: [\"s3:ListBucket\"],      resources: [        `${customBucket.bucketArn}`,        `${customBucket.bucketArn}/*`      ],      conditions: {        StringLike: {          \"s3:prefix\": [\"public/\", \"public/*\"],        },      },    }),  ],});\n// Add the policies to the unauthenticated user rolebackend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(  unauthPolicy,);\n"
        ]
      },
      {
        "title": "Use OpenID Connect as an authorization provider",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/using-oidc-authorization-provider/",
        "examples": [
          "// amplify/data/resource.tsimport { a, defineData, type ClientSchema } from '@aws-amplify/backend';\nconst schema = a.schema({  Todo: a    .model({      content: a.string(),    })    .authorization(allow => [      allow.owner('oidc').identityClaim('user_id'),      allow.authenticated('oidc'),      allow        .groups(['testGroupName'], 'oidc')        .withClaimIn('user_groups'),    ]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: 'oidc',    oidcAuthorizationMode: {      oidcProviderName: 'oidc-provider-name',      oidcIssuerUrl: 'https://example.com',      clientId: 'client-id',      tokenExpiryFromAuthInSeconds: 300,      tokenExpireFromIssueInSeconds: 600,    },  },});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\nconst { errors, data: todos } = await client.models.Todo.list({Copy highlighted code example  authMode: \"oidc\",});\n"
        ]
      },
      {
        "title": "Use existing Amazon Location resources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/existing-resources/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\"\nconst backend = defineBackend({})\nbackend.addOutput({  geo: {    aws_region: \"<your-aws-region>\",    maps: {      items: {        \"<your-friendly-map-name>\": {          name: \"<your-map-name>\",          style: \"<your-map-style>\",        },      },      default: \"<your-friendly-map-name>\",    },  },})\n",
          "{  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Sid\": \"GetTiles\",      \"Effect\": \"Allow\",      \"Action\": [        \"geo:GetMapTile\",        \"geo:GetMapSprites\",        \"geo:GetMapGlyphs\",        \"geo:GetMapStyleDescriptor\"      ],      \"Resource\": \"arn:aws:geo:<your-geo-region>:<your-account-id>:map/<your-map-name>\"    },    {      \"Sid\": \"Search\",      \"Effect\": \"Allow\",      \"Action\": [        \"geo:SearchPlaceIndexForPosition\",        \"geo:SearchPlaceIndexForText\"      ],      \"Resource\": \"arn:aws:geo:<your-geo-region>:<your-account-id>:place-index/<your-index-name>\"    },    {      \"Sid\": \"Geofence\",      \"Effect\": \"Allow\",      \"Action\": [        \"geo:GetGeofence\",        \"geo:PutGeofence\",        \"geo:BatchPutGeofence\",        \"geo:BatchDeleteGeofence\",        \"geo:ListGeofences\",      ],      \"Resource\": \"arn:aws:geo:<your-geo-region>:<your-account-id>:geofence-collection/<your-collection-name>\"    }  ]}\n"
        ]
      },
      {
        "title": "User group-based data access",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/customize-authz/user-group-based-data-access/",
        "examples": [
          "// allow one specific groupconst schema = a.schema({  Salary: a    .model({      wage: a.float(),      currency: a.string(),    })    .authorization(allow => [allow.group('Admin')]),});\n",
          "import { generateClient } from 'aws-amplify/data';import type { Schema } from '../amplify/data/resource'; // Path to your backend resource definition\nconst client = generateClient<Schema>();\n// As a signed-in user that belongs to the 'Admin' User Pool Groupconst { errors, data: newSalary } = await client.models.Salary.create(  {    wage: 50.25,    currency: 'USD'  },Copy highlighted code example  {    authMode: 'userPool',  });\n"
        ]
      },
      {
        "title": "User groups",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/user-groups/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },Copy highlighted code example  groups: [\"ADMINS\", \"EDITORS\"],})\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\"\nconst schema = a.schema({  Article: a.model({}).authorization(allow => [    allow.groups([\"EDITORS\"]).to([\"read\", \"update\"])  ])})\n// ...\n"
        ]
      },
      {
        "title": "With admin actions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/manage-users/with-admin-actions/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },Copy highlighted code example  groups: [\"ADMINS\"]})\n",
          "import { defineFunction } from \"@aws-amplify/backend\"\nexport const addUserToGroup = defineFunction({  name: \"add-user-to-group\",})\n"
        ]
      },
      {
        "title": "Connected forms",
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/",
        "examples": [
          "npm add @aws-amplify/ui-react\n",
          "npx ampx generate forms\n"
        ]
      },
      {
        "title": "Validate form data",
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/validations/",
        "examples": [
          "<HomeCreateForm  onValidate={{    address: (value, validationResponse) => {      const firstWord = value.split('')[0];      if (!isNaN(firstWord)) {        // check if the first word is a number        return {          hasError: true,          errorMessage: 'Address must start with a number'        };      }      return validationResponse;    }  }}/>\n",
          "type ValidationResponse = {  hasError: boolean;  errorMessage?: string;};\n"
        ]
      },
      {
        "title": "Concepts",
        "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
        "examples": [
          "const schema = a.schema({  Chat: a.model({    name: a.string(),    message: a.hasMany('Message', 'chatId'),  }),  Message: a.model({    text: a.string(),    chat: a.belongsTo('Chat', 'chatId'),    chatId: a.id()  }),}).authorization((allow) => allow.owner());\n",
          "// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\n// list all messagesconst { data } = await client.models.Message.list();\n// create a new messageconst { errors, data: newMessage } = await client.models.Message.create({  text: 'My message text'});\n"
        ]
      },
      {
        "title": "Connect your frontend",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/connect-your-frontend/",
        "examples": [
          "import { generateClient } from 'aws-amplify/data';import { type Schema } from '../amplify/data/resource'\nconst client = generateClient<Schema>();\n// 1. Create a conversationconst { data: chat, errors } = await client.conversations.chat.create();\n// 2. Subscribe to assistant responsesconst subscription = chat.onStreamEvent({  next: (event) => {    // handle assistant response stream events    console.log(event);  },  error: (error) => {    // handle errors    console.error(error);  },});\n// 3. Send a message to the conversationconst { data: message, errors } = await chat.sendMessage('Hello, world!');\n",
          "const { data: chat, errors } = await client.conversations.chat.create();\n/**Example conversation data{  id: '123e4567-e89b-12d3-a456-426614174000',  createdAt: '2024-01-01T00:00:00.000Z',  updatedAt: '2024-01-01T00:00:00.000Z',}*/\n"
        ]
      },
      {
        "title": "Conversation History",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/history/",
        "examples": [
          "const { data: conversations } = await client.conversations.chat.list()\n",
          "const { data: conversations, nextToken } = await client.conversations.chat.list();\n// retrieve next pageif (nextToken) {   const { data: nextPageConversations } = await client.conversations.chat.list({     nextToken   });}\n"
        ]
      },
      {
        "title": "Data Extraction",
        "url": "https://docs.amplify.aws/nextjs/ai/generation/data-extraction/",
        "examples": [
          "const schema = a.schema({  ProductDetails: a.customType({    name: a.string().required(),    summary: a.string().required(),    price: a.float().required(),    category: a.string().required(),  }),\n  extractProductDetails: a.generation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'Extract the property details from the text provided',  })    .arguments({      productDescription: a.string()    })    .returns(a.ref('ProductDetails'))    .authorization((allow) => allow.authenticated()),});\n",
          "import type { Schema } from \"../amplify/data/resource\";import { generateClient } from \"aws-amplify/api\";import { createAIHooks } from \"@aws-amplify/ui-react-ai\";\nconst client = generateClient<Schema>({ authMode: \"userPool\" });const { useAIGeneration } = createAIHooks(client);\nexport default function Example() {  const productDescription = `The NBA Official Game Basketball is a premium  regulation-size basketball crafted with genuine leather and featuring  official NBA specifications. This professional-grade ball offers superior grip  and durability, with deep channels and a moisture-wicking surface that ensures  consistent performance during intense game play. Priced at $159.99, this high-end  basketball belongs in our Professional Sports Equipment category and is the same model  used in NBA games.`\n  // data is React state and will be populated when the generation is returned  const [{ data, isLoading }, extractProductDetails] =    useAIGeneration(\"extractProductDetails\");\n  const productDetails = async () => {    extractProductDetails({      productDescription    });  };}\n"
        ]
      },
      {
        "title": "Generation",
        "url": "https://docs.amplify.aws/nextjs/ai/generation/",
        "examples": [
          "const schema = a.schema({  generateRecipe: a.generation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'You are a helpful assistant that generates recipes.',  })    .arguments({ description: a.string() })    .returns(      a.customType({        name: a.string(),        ingredients: a.string().array(),        instructions: a.string(),      })    )    .authorization((allow) => allow.authenticated())});\n",
          "const schema = ({  summarize: a.generation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'Provide an accurate, clear, and concise summary of the input provided'  })  .arguments({ input: a.string() })  .returns(a.string())  .authorization((allow) => allow.guest()),});\n"
        ]
      },
      {
        "title": "Knowledge Base",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/knowledge-base/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({Copy highlighted code example  knowledgeBase: a    .query()    .arguments({ input: a.string() })    .handler(      a.handler.custom({        dataSource: \"KnowledgeBaseDataSource\",        entry: \"./resolvers/kbResolver.js\",      }),    )    .returns(a.string())    .authorization((allow) => allow.authenticated()),\n  chat: a.conversation({    aiModel: a.ai.model(\"Claude 3.5 Haiku\"),    systemPrompt: `You are a helpful assistant.`,Copy highlighted code example    tools: [      a.ai.dataTool({        name: 'searchDocumentation',        description: 'Performs a similarity search over the documentation for ...',        query: a.ref('knowledgeBase'),      }),    ]  })})\n",
          "export function request(ctx) {  const { input } = ctx.args;  return {    resourcePath: \"/knowledgebases/[KNOWLEDGE_BASE_ID]/retrieve\",    method: \"POST\",    params: {      headers: {        \"Content-Type\": \"application/json\",      },      body: JSON.stringify({        retrievalQuery: {          text: input,        },      }),    },  };}\nexport function response(ctx) {  return JSON.stringify(ctx.result.body);}\n"
        ]
      },
      {
        "title": "Models",
        "url": "https://docs.amplify.aws/nextjs/ai/concepts/models/",
        "examples": [
          "const schema = a.schema({  summarizer: a.generation({    aiModel: a.ai.model(\"Claude 3.5 Haiku\")  })})\n",
          "const schema = a.schema({  summarizer: a.generation({    aiModel: {      resourcePath: 'meta.llama3-1-405b-instruct-v1:0'    }  })})\n"
        ]
      },
      {
        "title": "Monorepo setup",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/monorepos/",
        "examples": [
          "├── apps/│   ├── admin-dashboard/│   │   ├── next.config.mjs│   │   └── package.json│   └── marketing-site/│       ├── astro.config.mjs│       └── package.json├── packages/│   └── my-shared-backend/│       ├── amplify/│       │   ├── auth/│       │   │   └── resource.ts│       │   ├── data/│       │   │   └── resource.ts│       │   └── backend.ts│       |── package.json        └── tsconfig.json└── package.json\n",
          "npx ampx generate outputs --branch main --app-id BACKEND-APP-ID\n"
        ]
      },
      {
        "title": "Response components",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/response-components/",
        "examples": [
          "<AIConversationCopy highlighted code example  responseComponents={{    WeatherCard: {      description: \"Used to display the weather to the user\",      component: ({ city }) => {        return (          <div>{city}</div>        )      },      props: {        city: {          type: \"string\",          required: true,          description: \"The name of the city to display the weather for\",        },      },    },  }}/>\n",
          "// Create a context to share state across componentsCopy highlighted code exampleconst DataContext = React.createContext<{  data: any;  setData: (value: React.SetStateAction<any>) => void;}>({ data: {}, setData: () => {} });\nfunction WeatherCard({ city }: { city: string }) {  const { setData } = React.useContext(DataContext);\n  React.useEffect(() => {    // fetch some weather data    // set the data context    setData({       city,      // weather info    })  },[city])\n  return (    <div>{city}</div>  )}Copy highlighted code example\n\nfunction Chat() {  const { data } = React.useContext(DataContext);  const [    {      data: { messages },      isLoading,    },    sendMessage,  ] = useAIConversation('chat');\n  return (    <AIConversation      messages={messages}      isLoading={isLoading}      handleSendMessage={sendMessage}      responseComponents={{        WeatherCard: {          component: WeatherCard,          description: \"Used to display the weather to the user\",          props: {            city: {              type: \"string\",              required: true,              description: \"The name of the city to display the weather for\",            },          },        }      }}Copy highlighted code example      aiContext={() => {        return {          ...data,        };      }}    />  );}\nexport default function Example() {  const [data, setData] = React.useState({});  return (    <Authenticator>      <DataContext.Provider value={{ data, setData }}>        <Chat />      </DataContext.Provider>    </Authenticator>  )}\n"
        ]
      },
      {
        "title": "Sandbox Seed",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/seed/",
        "examples": [
          "npm install @aws-amplify/seed --save-dev\n",
          "amplify/  └── seed/      └── seed.ts\n"
        ]
      },
      {
        "title": "Separate frontend and backend teams",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/mono-and-multi-repos/",
        "examples": [
          "npm create next-app@14 -- multi-repo-example --typescript --eslint --no-app --no-src-dir --no-tailwind --import-alias '@/*'\n",
          "cd multi-repo-examplenpm add @aws-amplify/backend-cli aws-amplify @aws-amplify/ui-react\n"
        ]
      },
      {
        "title": "Set up AI",
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "examples": [
          "npm create amplify@latest\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Tools",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/tools/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Post: a.model({    title: a.string(),    body: a.string(),  })  .authorization(allow => allow.owner()),\n  chat: a.conversation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'Hello, world!',    tools: [      a.ai.dataTool({        // The name of the tool as it will be referenced in the message to the LLM        name: 'PostQuery',        // The description of the tool provided to the LLM.        // Use this to help the LLM understand when to use the tool.        description: 'Searches for Post records',        // A reference to the `a.model()` that the tool will use        model: a.ref('Post'),        // The operation to perform on the model        modelOperation: 'list',      }),    ],  }),})\n",
          "import { type ClientSchema, a, defineData, defineFunction } from \"@aws-amplify/backend\";\nexport const getWeather = defineFunction({  name: 'getWeather',  entry: './getWeather.ts',  environment: {    API_ENDPOINT: 'MY_API_ENDPOINT',    API_KEY: secret('MY_API_KEY'),  },});\nconst schema = a.schema({  getWeather: a.query()    .arguments({ city: a.string() })    .returns(a.customType({      value: a.integer(),      unit: a.string()    }))    .handler(a.handler.function(getWeather))    .authorization((allow) => allow.authenticated()),\n  chat: a.conversation({    aiModel: a.ai.model('Claude 3.5 Haiku'),    systemPrompt: 'You are a helpful assistant',    tools: [      a.ai.dataTool({        // The name of the tool as it will be referenced in the LLM prompt        name: 'get_weather',        // The description of the tool provided to the LLM.        // Use this to help the LLM understand when to use the tool.        description: 'Gets the weather for a given city',        // A reference to the `a.query()` that the tool will invoke.        query: a.ref('getWeather'),      }),    ]  })    .authorization((allow) => allow.owner()),});\n"
        ]
      },
      {
        "title": "Configure AWS for local development",
        "url": "https://docs.amplify.aws/nextjs/start/account-setup/",
        "examples": [
          "read -p \"Enter email address: \" user_email # hit enter\n",
          "Enter email address: <your-email-address>\n"
        ]
      },
      {
        "title": "Manual installation",
        "url": "https://docs.amplify.aws/nextjs/start/manual-installation/",
        "examples": [
          "npm create amplify@latest\n",
          "? Where should we create your project? (.) # press enter\n"
        ]
      },
      {
        "title": "Next.js App Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      },
      {
        "title": "Next.js Pages Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      },
      {
        "title": "About amplify_outputs.json",
        "url": "https://docs.amplify.aws/nextjs/reference/amplify_outputs/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,   data, });\nbackend.addOutput({  storage: {    aws_region: \"us-east-1\",    bucket_name: \"my-externally-managed-bucket\",  },});\n",
          "import { Amplify } from \"aws-amplify\";import outputs from \"@/amplify_outputs.json\";\nAmplify.configure(outputs);\n"
        ]
      },
      {
        "title": "CLI commands",
        "url": "https://docs.amplify.aws/nextjs/reference/cli-commands/",
        "examples": [
          "npx ampx sandbox\n",
          "npx ampx sandbox --profile my-other-profile\n"
        ]
      },
      {
        "title": "Project structure",
        "url": "https://docs.amplify.aws/nextjs/reference/project-structure/",
        "examples": [
          "├── amplify/│   ├── auth/│   │   └── resource.ts│   ├── data/│   │   └── resource.ts│   ├── backend.ts│   └── package.json├── node_modules/├── .gitignore├── package-lock.json├── package.json└── tsconfig.json\n",
          "├── amplify/│   ├── auth/│   │   ├── custom-message/│   │   │   ├── custom-message.tsx│   │   │   ├── handler.ts│   │   │   ├── package.json│   │   │   └── resource.ts│   │   ├── post-confirmation.ts│   │   ├── pre-sign-up.ts│   │   ├── resource.ts│   │   └── verification-email.tsx│   ├── data/│   │   ├── resolvers/│   │   │   ├── list-featured-posts.ts│   │   │   └── list-top-10-posts.ts│   │   ├── resource.ts│   │   └── schema.ts│   ├── jobs/│   │   ├── monthly-report/│   │   │   ├── handler.ts│   │   │   └── resource.ts│   │   ├── process-featured-posts/│   │   │   ├── handler.py│   │   │   ├── requirements.txt│   │   │   └── resource.ts│   │   └── store-top-10-posts/│   │       ├── handler.ts│   │       └── resource.ts│   ├── storage/│   │   ├── photos/│   │   │   ├── resource.ts│   │   │   └── trigger.ts│   │   └── reports/│   │       └── resource.ts│   ├── backend.ts│   └── package.json├── node_modules/├── .gitignore├── package-lock.json├── package.json└── tsconfig.json\n"
        ]
      }
    ],
    "auth": [
      {
        "title": "Working with files/attachments",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Song: a    .model({      id: a.id().required(),      name: a.string().required(),      coverArtPath: a.string(),    })    .authorization((allow) => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",\n    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineStorage } from \"@aws-amplify/backend\";\nexport const storage = defineStorage({  name: \"amplify-gen2-files\",  access: (allow) => ({    \"images/*\": [allow.authenticated.to([\"read\", \"write\", \"delete\"])],  }),});\n"
        ]
      },
      {
        "title": "Advanced workflows",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/advanced-workflows/",
        "examples": [
          "import { Amplify } from 'aws-amplify';import {  fetchAuthSession,  CredentialsAndIdentityIdProvider,  CredentialsAndIdentityId,  GetCredentialsOptions,  AuthTokens,} from 'aws-amplify/auth';\n// Note: This example requires installing `@aws-sdk/client-cognito-identity` to obtain Cognito credentials// npm add @aws-sdk/client-cognito-identityimport { CognitoIdentity } from '@aws-sdk/client-cognito-identity';\n// You can make use of the sdk to get identityId and credentialsconst cognitoidentity = new CognitoIdentity({  region: '<region-from-config>',});\n// Note: The custom provider class must implement CredentialsAndIdentityIdProviderclass CustomCredentialsProvider implements CredentialsAndIdentityIdProvider {\n  // Example class member that holds the login information  federatedLogin?: {    domain: string,    token: string  };\n  // Custom method to load the federated login information  loadFederatedLogin(login?: typeof this.federatedLogin) {    // You may also persist this by caching if needed    this.federatedLogin = login;  }\n  async getCredentialsAndIdentityId(    getCredentialsOptions: GetCredentialsOptions  ): Promise<CredentialsAndIdentityId | undefined> {    try {\n      // You can add in some validation to check if the token is available before proceeding      // You can also refresh the token if it's expired before proceeding\n      const getIdResult = await cognitoidentity.getId({        // Get the identityPoolId from config        IdentityPoolId: '<identity-pool-id-from-config>',        Logins: { [this.federatedLogin.domain]: this.federatedLogin.token },      });\n      const cognitoCredentialsResult = await cognitoidentity.getCredentialsForIdentity({        IdentityId: getIdResult.IdentityId,        Logins: { [this.federatedLogin.domain]: this.federatedLogin.token },      });\n      const credentials: CredentialsAndIdentityId = {        credentials: {          accessKeyId: cognitoCredentialsResult.Credentials?.AccessKeyId,          secretAccessKey: cognitoCredentialsResult.Credentials?.SecretKey,          sessionToken: cognitoCredentialsResult.Credentials?.SessionToken,          expiration: cognitoCredentialsResult.Credentials?.Expiration,        },        identityId: getIdResult.IdentityId,      };      return credentials;    } catch (e) {      console.log('Error getting credentials: ', e);    }  }  // Implement this to clear any cached credentials and identityId. This can be called when signing out of the federation service.  clearCredentialsAndIdentityId(): void {}}\n// Create an instance of your custom providerconst customCredentialsProvider = new CustomCredentialsProvider();Amplify.configure(awsconfig, {  Auth: {    // Supply the custom credentials provider to Amplify    credentialsProvider: customCredentialsProvider  },});\n",
          "import React, { useEffect } from 'react';import {  fetchAuthSession,} from 'aws-amplify/auth';\n// To federated sign in from Facebookconst SignInWithFacebook = () => {\n  useEffect(() => {    if (!window.FB) createScript();  }, [])\n  const signIn = () => {    const fb = window.FB;    fb.getLoginStatus(response => {      if (response.status === 'connected') {        getAWSCredentials(response.authResponse);      } else {        fb.login(          response => {            if (!response || !response.authResponse) {              return;            }            customCredentialsProvider.loadFederatedLogin({              domain: 'graph.facebook.com',              token: response.authResponse.accessToken,            });            const fetchSessionResult = await fetchAuthSession(); // will return the credentials            console.log('fetchSessionResult: ', fetchSessionResult);          },          {            // the authorized scopes            scope: 'public_profile,email'          }        );      }    });  }\n  const createScript = () => {    // load the sdk    window.fbAsyncInit = fbAsyncInit;    const script = document.createElement('script');    script.src = 'https://connect.facebook.net/en_US/sdk.js';    script.async = true;    script.onload = initFB;    document.body.appendChild(script);  }\n  const initFB = () => {    const fb = window.FB;    console.log('FB SDK initialized');  }\n  const fbAsyncInit = () => {    // init the fb sdk client    const fb = window.FB;    fb.init({      appId   : 'your_facebook_app_id',      cookie  : true,      xfbml   : true,      version : 'v2.11'    });  }\n  return (    <div>      <button onClick={signIn}>Sign in with Facebook</button>    </div>  );}\n"
        ]
      },
      {
        "title": "Connect to AWS AppSync Events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-event-api/",
        "examples": [
          "import type { EventsChannel } from 'aws-amplify/data';import { useState, useEffect, useRef } from 'react';import { Amplify } from 'aws-amplify';import { events } from 'aws-amplify/data';\nAmplify.configure({  API: {    Events: {      endpoint:        'https://abcdefghijklmnopqrstuvwxyz.appsync-api.us-east-1.amazonaws.com/event',      region: 'us-east-1',      defaultAuthMode: 'apiKey',      apiKey: 'da2-abcdefghijklmnopqrstuvwxyz',    },  },});\nexport default function App() { const [myEvents, setMyEvents] = useState<unknown[]>([]);\n  const sub = useRef<ReturnType<EventsChannel['subscribe']>>(null);\n  useEffect(() => {    let channel: EventsChannel;\n    const connectAndSubscribe = async () => {      channel = await events.connect('default/channel');\n      if (!sub.current) {        sub.current = channel.subscribe({          next: (data) => {            console.log('received', data);            setMyEvents((prev) => [data, ...prev]);          },          error: (err) => console.error('error', err),        });      }    };\n    connectAndSubscribe();\n    return () => {      sub.current?.unsubscribe();      sub.current = null;      return channel?.close();    };  }, []);\n  async function publishEvent() {    // Publish via HTTP POST    await events.post('default/channel', { some: 'data' });\n    // Alternatively, publish events through the WebSocket channel    const channel = await events.connect('default/channel');    await channel.publish({ some: 'data' });  }\n  return (    <>      <button onClick={publishEvent}>Publish Event</button>      <ul>        {myEvents.map((data, idx) => (          <li key={idx}>{JSON.stringify(data.event, null, 2)}</li>        ))}      </ul>    </>  );}\n",
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';Copy highlighted code example// import CDK resources:import {  CfnApi,  CfnChannelNamespace,  AuthorizationType,} from 'aws-cdk-lib/aws-appsync';import { Policy, PolicyStatement } from 'aws-cdk-lib/aws-iam';\nconst backend = defineBackend({\tauth,});\nCopy highlighted code example// create a new stack for our Event API resources:const customResources = backend.createStack('custom-resources');\n// add a new Event API to the stack:const cfnEventAPI = new CfnApi(customResources, 'CfnEventAPI', {  name: 'my-event-api',  eventConfig: {    authProviders: [      {        authType: AuthorizationType.USER_POOL,        cognitoConfig: {          awsRegion: customResources.region,          // configure Event API to use the Cognito User Pool provisioned by Amplify:          userPoolId: backend.auth.resources.userPool.userPoolId,        },      },    ],    // configure the User Pool as the auth provider for Connect, Publish, and Subscribe operations:    connectionAuthModes: [{ authType: AuthorizationType.USER_POOL }],    defaultPublishAuthModes: [{ authType: AuthorizationType.USER_POOL }],    defaultSubscribeAuthModes: [{ authType: AuthorizationType.USER_POOL }],  },});\n// create a default namespace for our Event API:const namespace = new CfnChannelNamespace(  customResources,  'CfnEventAPINamespace',  {    apiId: cfnEventAPI.attrApiId,    name: 'default',  });\n// attach a policy to the authenticated user role in our User Pool to grant access to the Event API:backend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(  new Policy(customResources, 'AppSyncEventPolicy', {    statements: [      new PolicyStatement({        actions: [          'appsync:EventConnect',          'appsync:EventSubscribe',          'appsync:EventPublish',        ],        resources: [`${cfnEventAPI.attrApiArn}/*`, `${cfnEventAPI.attrApiArn}`],      }),    ],  }));\n// finally, add the Event API configuration to amplify_outputs:backend.addOutput({  custom: {    events: {      url: `https://${cfnEventAPI.getAtt('Dns.Http').toString()}/event`,      aws_region: customResources.region,      default_authorization_type: AuthorizationType.USER_POOL,    },  },});\n"
        ]
      },
      {
        "title": "Email",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/email/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },})\n"
        ]
      },
      {
        "title": "External identity providers",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/external-identity-providers/",
        "examples": [
          "import { defineAuth, secret } from '@aws-amplify/backend';\nexport const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      google: {        clientId: secret('GOOGLE_CLIENT_ID'),        clientSecret: secret('GOOGLE_CLIENT_SECRET')      },      signInWithApple: {        clientId: secret('SIWA_CLIENT_ID'),        keyId: secret('SIWA_KEY_ID'),        privateKey: secret('SIWA_PRIVATE_KEY'),        teamId: secret('SIWA_TEAM_ID')      },      loginWithAmazon: {        clientId: secret('LOGINWITHAMAZON_CLIENT_ID'),        clientSecret: secret('LOGINWITHAMAZON_CLIENT_SECRET')      },      facebook: {        clientId: secret('FACEBOOK_CLIENT_ID'),        clientSecret: secret('FACEBOOK_CLIENT_SECRET')      },      callbackUrls: [        'http://localhost:3000/profile',        'https://mywebsite.com/profile'      ],      logoutUrls: ['http://localhost:3000/', 'https://mywebsite.com'],    }  }});\n",
          "import { defineAuth } from '@aws-amplify/backend';\nexport const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      loginWithAmazon: {        clientId: secret('LOGINWITHAMAZON_CLIENT_ID'),        clientSecret: secret('LOGINWITHAMAZON_CLIENT_SECRET'),Copy highlighted code example        scopes: ['profile']      },      callbackUrls: [        'http://localhost:3000/profile',        'https://mywebsite.com/profile'      ],      logoutUrls: ['http://localhost:3000/', 'https://mywebsite.com'],    }  }});\n"
        ]
      },
      {
        "title": "Identify user",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/identify-user/",
        "examples": [
          "import { identifyUser } from 'aws-amplify/analytics';import { getCurrentUser } from 'aws-amplify/auth';\nconst location = {  latitude: 47.606209,  longitude: -122.332069,  postalCode: '98122',  city: 'Seattle',  region: 'WA',  country: 'USA'};\nconst customProperties = {  plan: ['plan'],  phoneNumber: ['+11234567890'],  age: ['25']};\nconst userProfile = {  location,  name: 'username',  email: 'name@example.com',  customProperties};\nasync function sendUserData() {  const user = await getCurrentUser();\n  identifyUser({    userId: user.userId,    userProfile  });}\n"
        ]
      },
      {
        "title": "Listen to auth events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/listen-to-auth-events/",
        "examples": [
          "import { Hub } from 'aws-amplify/utils';\nHub.listen('auth', (data) => {  console.log(data)});\n",
          "import { Hub } from 'aws-amplify/utils';\nHub.listen('auth', ({ payload }) => {  switch (payload.event) {    case 'signedIn':      console.log('user have been signedIn successfully.');      break;    case 'signedOut':      console.log('user have been signedOut successfully.');      break;    case 'tokenRefresh':      console.log('auth tokens have been refreshed.');      break;    case 'tokenRefresh_failure':      console.log('failure while refreshing auth tokens.');      break;    case 'signInWithRedirect':      console.log('signInWithRedirect API has successfully been resolved.');      break;    case 'signInWithRedirect_failure':      console.log('failure while trying to resolve signInWithRedirect API.');      break;    case 'customOAuthState':      logger.info('custom state returned from CognitoHosted UI');      break;  }});\n"
        ]
      },
      {
        "title": "Manage user sessions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/manage-user-sessions/",
        "examples": [
          "import { getCurrentUser } from 'aws-amplify/auth';\nconst { username, userId, signInDetails } = await getCurrentUser();\nconsole.log(\"username\", username);console.log(\"user id\", userId);console.log(\"sign-in details\", signInDetails);\n",
          "import { fetchAuthSession } from 'aws-amplify/auth';\nconst session = await fetchAuthSession();\nconsole.log(\"id token\", session.tokens.idToken)console.log(\"access token\", session.tokens.accessToken)\n"
        ]
      },
      {
        "title": "Microsoft Entra ID (SAML)",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/examples/microsoft-entra-id-saml/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\n/** * Define and configure your auth resource * @see https://docs.amplify.aws/gen2/build-a-backend/auth */export const auth = defineAuth({  loginWith: {    email: true,    externalProviders: {      logoutUrls: [\"http://localhost:3000/come-back-soon\"],      callbackUrls: [\"http://localhost:3000/profile\"],    },  },})\n",
          "{  \"auth\": {    \"aws_region\": \"us-east-1\",    \"user_pool_id\": \"<your-cognito-user-pool-id>\",    \"user_pool_client_id\": \"<your-cognito-user-pool-client-id>\",    \"identity_pool_id\": \"<your-cognito-identity-pool-id>\",    \"mfa_methods\": [],    \"standard_required_attributes\": [      \"email\"    ],    \"username_attributes\": [      \"email\"    ],    \"user_verification_types\": [      \"email\"    ],    \"mfa_configuration\": \"OFF\",    \"password_policy\": {      \"min_length\": 8,      \"require_numbers\": true,      \"require_lowercase\": true,      \"require_uppercase\": true,      \"require_symbols\": true    },    \"oauth\": {      \"identity_providers\": [],      \"redirect_sign_in_uri\": [        \"http://localhost:3000/profile\"      ],      \"redirect_sign_out_uri\": [        \"http://localhost:3000/come-back-soon\"      ],      \"response_type\": \"code\",      \"scopes\": [        \"phone\",        \"email\",        \"openid\",        \"profile\",        \"aws.cognito.signin.user.admin\"      ],Copy highlighted code example      \"domain\": \"<some-hash>.auth.us-east-1.amazoncognito.com\"    },  },  \"version\": \"1\"}\n"
        ]
      },
      {
        "title": "Multi-factor authentication",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/multi-factor-authentication/",
        "examples": [
          "import { defineAuth } from '@aws-amplify/backend';\nexport const auth = defineAuth({  loginWith: {    email: true  },Copy highlighted code example  multifactor: {    mode: 'OPTIONAL',    totp: true,  },  userAttributes: {    phoneNumber: {       required: true    }  }});\n",
          "import { confirmSignIn, type SignInOutput } from 'aws-amplify/auth';\nfunction handleSignInNextSteps(output: SignInOutput) {\tconst { nextStep } = output;\tswitch (nextStep.signInStep) {\t\t// ...\t\tcase 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION':\t\t\tconst allowedMFATypes = nextStep.allowedMFATypes;\t\t\tconst mfaType = promptUserForMFAType(allowedMFATypes);\t\tcase 'CONFIRM_SIGN_IN_WITH_SMS_CODE':\t\t\t// prompt user to enter otp code delivered via SMS\t\t\tbreak;\t\tcase 'CONFIRM_SIGN_IN_WITH_TOTP_CODE':\t\t\t// prompt user to enter otp code from their authenticator app\t\t\tbreak;\t\tcase 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE':\t\t\t// prompt user to enter otp code delivered via EMAIL\t\t\tbreak;\t\t// ...\t}}\ntype MfaType = 'SMS' | 'TOTP' | 'EMAIL';\nfunction promptUserForMFAType(allowedMFATypes?: MfaType[]): MfaType {\t// Prompt user to select MFA type}\nasync function handleMFASelection(mfaType: MfaType) {\ttry {\t\tconst output = await confirmSignIn({\t\t\tchallengeResponse: mfaType,\t\t});\t\thandleSignInNextSteps(output);\t} catch (error) {\t\tconsole.log(error);\t}}\n"
        ]
      },
      {
        "title": "Multi-step sign-in",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/multi-step-sign-in/",
        "examples": [
          "import {\tconfirmSignIn,\tconfirmSignUp,\tresetPassword,\tsignIn,} from 'aws-amplify/auth';\nconst { nextStep } = await signIn({\tusername: 'hello@mycompany.com',\tpassword: 'hunter2',});\nif (\tnextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_SMS_CODE' ||\tnextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE' ||\tnextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_TOTP_CODE') {\t// collect OTP from user\tawait confirmSignIn({\t\tchallengeResponse: '123456',\t});}\nif (nextStep.signInStep === 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION') {\t// present nextStep.allowedMFATypes to user\t// collect user selection\tawait confirmSignIn({\t\tchallengeResponse: 'EMAIL', // 'EMAIL', 'SMS', or 'TOTP'\t});}\nif (nextStep.signInStep === 'CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION') {\t// present nextStep.allowedMFATypes to user\t// collect user selection\tawait confirmSignIn({\t\tchallengeResponse: 'EMAIL', // 'EMAIL' or 'TOTP'\t});}\nif (nextStep.signInStep === 'CONTINUE_SIGN_IN_WITH_EMAIL_SETUP') {\t// collect email address from user\tawait confirmSignIn({\t\tchallengeResponse: 'hello@mycompany.com',\t});}\nif (nextStep.signInStep === 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP') {\t// present nextStep.totpSetupDetails.getSetupUri() to user\t// collect OTP from user\tawait confirmSignIn({\t\tchallengeResponse: '123456',\t});}\nif (nextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_PASSWORD') {    // collect password from user    await confirmSignIn({        challengeResponse: 'hunter2',    });}\nif (nextStep.signInStep === 'CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION') {    // present nextStep.availableChallenges to user    // collect user selection    await confirmSignIn({        challengeResponse: 'SMS_OTP', // or 'EMAIL_OTP', 'WEB_AUTHN', 'PASSWORD', 'PASSWORD_SRP'    });}\nif (nextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE') {\t// collect custom challenge answer from user\tawait confirmSignIn({\t\tchallengeResponse: 'custom-challenge-answer',\t});}\nif (nextStep.signInStep === 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED') {\t// collect new password from user\tawait confirmSignIn({\t\tchallengeResponse: 'new-password',\t});}\nif (nextStep.signInStep === 'RESET_PASSWORD') {\t// initiate reset password flow\tawait resetPassword({\t\tusername: 'username',\t});}\nif (nextStep.signInStep === 'CONFIRM_SIGN_UP') {\t// user was not confirmed during sign up process\t// if user has confirmation code, invoke `confirmSignUp` api\t// otherwise, invoke `resendSignUpCode` to resend the code\tawait confirmSignUp({\t\tusername: 'username',\t\tconfirmationCode: '123456',\t});}\nif (nextStep.signInStep === 'DONE') {\t// signin complete}\n",
          "import { type SignInOutput, confirmSignIn } from '@aws-amplify/auth';\nasync function handleSignInResult(result: SignInOutput) {\tswitch (result.nextStep.signInStep) {\t\tcase 'CONFIRM_SIGN_IN_WITH_SMS_CODE': {\t\t\tconst { codeDeliveryDetails } = result.nextStep;\t\t\t// OTP has been delivered to user via SMS\t\t\t// Inspect codeDeliveryDetails for additional delivery information\t\t\tconsole.log(\t\t\t\t`A confirmation code has been sent to ${codeDeliveryDetails?.destination}`,\t\t\t);\t\t\tconsole.log(\t\t\t\t`Please check your ${codeDeliveryDetails?.deliveryMedium} for the code.`,\t\t\t);\t\t\tbreak;\t\t}\t}}\nasync function confirmMfaCode(mfaCode: string) {\tconst result = await confirmSignIn({ challengeResponse: mfaCode });\n\treturn handleSignInResult(result);}\n"
        ]
      },
      {
        "title": "Next.js App Router (Server Components)",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "examples": [
          "npm create next-app@14 -- next-amplify-gen2 --typescript --eslint --app --no-src-dir --no-tailwind --import-alias '@/*'cd next-amplify-gen2\n",
          "npm create amplify@latest\n"
        ]
      },
      {
        "title": "Nuxt.js server runtime",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nuxtjs-server-runtime/",
        "examples": [
          "import {  fetchAuthSession,  fetchUserAttributes,  signIn,  signOut,  getCurrentUser,} from \"aws-amplify/auth\";import { generateClient } from \"aws-amplify/data\";import outputs from \"../amplify_outputs.json\";import type { Schema } from \"@/amplify/data/resource\";import { Amplify } from \"aws-amplify\";\n// configure the Amplify client libraryif (process.client) {  Amplify.configure(outputs, { ssr: true });}\n// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\nexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    return {      provide: {        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        Amplify: {          Auth: {            fetchAuthSession,            fetchUserAttributes,            getCurrentUser,            signIn,            signOut,          },          GraphQL: {            client,          },        },      },    };  },});\n",
          "import type { CookieRef } from \"nuxt/app\";import {  createKeyValueStorageFromCookieStorageAdapter,  createUserPoolsTokenProvider,  createAWSCredentialsAndIdentityIdProvider,  runWithAmplifyServerContext,} from \"aws-amplify/adapter-core\";import { parseAmplifyConfig } from \"aws-amplify/utils\";import {  fetchAuthSession,  fetchUserAttributes,  getCurrentUser,} from \"aws-amplify/auth/server\";import { generateClient } from \"aws-amplify/data/server\";import type {  LibraryOptions,  FetchAuthSessionOptions,} from \"@aws-amplify/core\";import type {  GraphQLOptionsV6,  GraphQLResponseV6,} from \"@aws-amplify/api-graphql\";\nimport outputs from \"../amplify_outputs.json\";\n// parse the content of `amplify_outputs.json` into the shape of ResourceConfigconst amplifyConfig = parseAmplifyConfig(outputs);\n// create the Amplify used token cookies names arrayconst userPoolClientId = amplifyConfig.Auth!.Cognito.userPoolClientId;const lastAuthUserCookieName = `CognitoIdentityServiceProvider.${userPoolClientId}.LastAuthUser`;\n// create a GraphQL client that can be used in a server contextconst gqlServerClient = generateClient({ config: amplifyConfig });\nconst getAmplifyAuthKeys = (lastAuthUser: string) =>  [\"idToken\", \"accessToken\", \"refreshToken\", \"clockDrift\"]    .map(      (key) =>        `CognitoIdentityServiceProvider.${userPoolClientId}.${lastAuthUser}.${key}`    )    .concat(lastAuthUserCookieName);\n// define the pluginexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    // The Nuxt composable `useCookie` is capable of sending cookies to the    // client via the `SetCookie` header. If the `expires` option is left empty,    // it sets a cookie as a session cookie. If you need to persist the cookie    // on the client side after your end user closes your Web app, you need to    // specify an `expires` value.    //    // We use 30 days here as an example (the default Cognito refreshToken    // expiration time).    const expires = new Date();    expires.setDate(expires.getDate() + 30);\n    // Get the last auth user cookie value    //    // We use `sameSite: 'lax'` in this example, which allows the cookie to be    // sent to your Nuxt server when your end user gets redirected to your Web    // app from a different domain. You should choose an appropriate value for    // your own use cases.    const lastAuthUserCookie = useCookie(lastAuthUserCookieName, {      sameSite: \"lax\",      expires,      secure: true,    });\n    // Get all Amplify auth token cookie names    const authKeys = lastAuthUserCookie.value      ? getAmplifyAuthKeys(lastAuthUserCookie.value)      : [];\n    // Create a key-value map of cookie name => cookie ref    //    // Using the composable `useCookie` here in the plugin setup prevents    // cross-request pollution.    const amplifyCookies = authKeys      .map((name) => ({        name,        cookieRef: useCookie(name, { sameSite: \"lax\", expires, secure: true }),      }))      .reduce<Record<string, CookieRef<string | null | undefined>>>(        (result, current) => ({          ...result,          [current.name]: current.cookieRef,        }),        {}      );\n    // Create a key value storage based on the cookies    //    // This key value storage is responsible for providing Amplify Auth tokens to    // the APIs that you are calling.    //    // If you implement the `set` method, when Amplify needed to refresh the Auth    // tokens on the server side, the new tokens would be sent back to the client    // side via `SetCookie` header in the response. Otherwise the refresh tokens    // would not be propagate to the client side, and Amplify would refresh    // the tokens when needed on the client side.    //    // In addition, if you decide not to implement the `set` method, you don't    // need to pass any `CookieOptions` to the `useCookie` composable.    const keyValueStorage = createKeyValueStorageFromCookieStorageAdapter({      get(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef && cookieRef.value) {          return { name, value: cookieRef.value };        }\n        return undefined;      },      getAll() {        return Object.entries(amplifyCookies).map(([name, cookieRef]) => {          return { name, value: cookieRef.value ?? undefined };        });      },      set(name, value) {        const cookieRef = amplifyCookies[name];        if (cookieRef) {          cookieRef.value = value;        }      },      delete(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef) {          cookieRef.value = null;        }      },    });\n    // Create a token provider    const tokenProvider = createUserPoolsTokenProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create a credentials provider    const credentialsProvider = createAWSCredentialsAndIdentityIdProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create the libraryOptions object    const libraryOptions: LibraryOptions = {      Auth: {        tokenProvider,        credentialsProvider,      },    };\n    return {      provide: {        // You can add the Amplify APIs that you will use on the server side of        // your Nuxt app here. You must only use the APIs exported from the        // `aws-amplify/<category>/server` subpaths.        //        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        //        // Recall that Amplify server APIs are required to be called in a isolated        // server context that is created by the `runWithAmplifyServerContext`        // function.        Amplify: {          Auth: {            fetchAuthSession: (options: FetchAuthSessionOptions) =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchAuthSession(contextSpec, options)              ),            fetchUserAttributes: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchUserAttributes(contextSpec)              ),            getCurrentUser: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => getCurrentUser(contextSpec)              ),          },          GraphQL: {            client: {              // Follow this typing to ensure the`graphql` API return type can              // be inferred correctly according to your queries and mutations              graphql: <                FALLBACK_TYPES = unknown,                TYPED_GQL_STRING extends string = string              >(                options: GraphQLOptionsV6<FALLBACK_TYPES, TYPED_GQL_STRING>,                additionalHeaders?: Record<string, string>              ) =>                runWithAmplifyServerContext<                  GraphQLResponseV6<FALLBACK_TYPES, TYPED_GQL_STRING>                >(amplifyConfig, libraryOptions, (contextSpec) =>                  gqlServerClient.graphql(                    contextSpec,                    options,                    additionalHeaders                  )                ),            },          },        },      },    };  },});\n"
        ]
      },
      {
        "title": "Phone",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/phone/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {Copy highlighted code example    phone: true,  },})\n"
        ]
      },
      {
        "title": "Server-Side Rendering",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
        "examples": [
          "npm add aws-amplify @aws-amplify/adapter-nextjs\n",
          "import { createServerRunner } from '@aws-amplify/adapter-nextjs';import outputs from '@/amplify_outputs.json';\nexport const { runWithAmplifyServerContext } = createServerRunner({  config: outputs});\n"
        ]
      },
      {
        "title": "Set up Amplify Auth",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/set-up-auth/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\n/** * Define and configure your auth resource * @see https://docs.amplify.aws/gen2/build-a-backend/auth */export const auth = defineAuth({  loginWith: {    email: true,  },})\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Sign-in",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-in/",
        "examples": [
          "import { signIn } from 'aws-amplify/auth'\nawait signIn({  username: \"hello@mycompany.com\",  password: \"hunter2\",})\n",
          "import type { FormEvent } from \"react\"import { Amplify } from \"aws-amplify\"Copy highlighted code exampleimport { signIn } from \"aws-amplify/auth\"import outputs from \"../amplify_outputs.json\"\nAmplify.configure(outputs)\ninterface SignInFormElements extends HTMLFormControlsCollection {  email: HTMLInputElement  password: HTMLInputElement}\ninterface SignInForm extends HTMLFormElement {  readonly elements: SignInFormElements}\nexport default function App() {  async function handleSubmit(event: FormEvent<SignInForm>) {    event.preventDefault()    const form = event.currentTarget    // ... validate inputs    await signIn({      username: form.elements.email.value,      password: form.elements.password.value,    })  }\n  return (    <form onSubmit={handleSubmit}>      <label htmlFor=\"email\">Email:</label>      <input type=\"text\" id=\"email\" name=\"email\" />      <label htmlFor=\"password\">Password:</label>      <input type=\"password\" id=\"password\" name=\"password\" />      <input type=\"submit\" />    </form>  )}\n"
        ]
      },
      {
        "title": "Sign-out",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-out/",
        "examples": [
          "import { signOut } from 'aws-amplify/auth';\nawait signOut();\n",
          "import { signOut } from 'aws-amplify/auth';\nawait signOut({ global: true });\n"
        ]
      },
      {
        "title": "Sign-up",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-up/",
        "examples": [
          "import { signUp } from \"aws-amplify/auth\"\nconst { isSignUpComplete, userId, nextStep } = await signUp({  username: \"hello@mycompany.com\",  password: \"hunter2\",  options: {    userAttributes: {      email: \"hello@mycompany.com\",      phone_number: \"+15555555555\" // E.164 number convention    },  }});\n",
          "import { confirmSignUp } from 'aws-amplify/auth';\nconst { isSignUpComplete, nextStep } = await confirmSignUp({  username: \"hello@mycompany.com\",  confirmationCode: \"123456\"});\n"
        ]
      },
      {
        "title": "Switching authentication flows",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/switching-authentication-flows/",
        "examples": [
          "await signIn({  username: \"hello@mycompany.com\",  password: \"hunter2\",  options: {      authFlowType: 'USER_AUTH'  }})\n",
          "// PASSWORD_SRP / PASSWORD// sign in with preferred challenge as password// note password must be provided in same stepconst { nextStep } = await signIn({    username: \"hello@mycompany.com\",    password: \"hunter2\",    options: {        authFlowType: \"USER_AUTH\",        preferredChallenge: \"PASSWORD_SRP\" // or \"PASSWORD\"    },});\n// WEB_AUTHN / EMAIL_OTP / SMS_OTP// sign in with preferred passwordless challenge// no additional user input required at this step const { nextStep } = await signIn({    username: \"hello@example.com\",    options: {        authFlowType: \"USER_AUTH\",        preferredChallenge: \"WEB_AUTHN\" // or \"EMAIL_OTP\" or \"SMS_OTP\"    },});\n"
        ]
      },
      {
        "title": "Tokens and credentials",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/tokens-and-credentials/",
        "examples": [
          "{  \"sub\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"iss\": \"https://cognito-idp.us-east-1.amazonaws.com/us-east-1_yoKn9s4Tq\",  \"client_id\": \"1sg675g08g6g0e9f64grv9n5sk\",  \"origin_jti\": \"0eadb994-a6e0-419e-b309-a7a0d522d72f\",  \"event_id\": \"b180897a-181c-4f73-94bb-a2946e8b4ef1\",  \"token_use\": \"access\",  \"scope\": \"aws.cognito.signin.user.admin\",  \"auth_time\": 1714241873,  \"exp\": 1714245473,  \"iat\": 1714241873,  \"jti\": \"57f10a4d-a1f2-453b-8672-d1cfa8187047\",  \"username\": \"54288468-e051-706d-a73f-03892273d7e9\"}\n",
          "{  \"sub\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"email_verified\": true,  \"iss\": \"https://cognito-idp.us-east-1.amazonaws.com/us-east-1_yoKn9s4Tq\",  \"cognito:username\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"origin_jti\": \"0eadb994-a6e0-419e-b309-a7a0d522d72f\",  \"aud\": \"1sg675g08g6g0e9f64grv9n5sk\",  \"event_id\": \"b180897a-181c-4f73-94bb-a2946e8b4ef1\",  \"token_use\": \"id\",  \"auth_time\": 1714241873,  \"exp\": 1714245473,  \"iat\": 1714241873,  \"jti\": \"bb69af10-3ce0-47c2-8d8d-5bdc8630ab58\",  \"email\": \"hello@mycompany.com\"}\n"
        ]
      },
      {
        "title": "Using the Authenticator",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/using-the-authenticator/",
        "examples": [
          "import { Authenticator } from '@aws-amplify/ui-react';import { Amplify } from 'aws-amplify';import '@aws-amplify/ui-react/styles.css';import outputs from \"../amplify_outputs.json\";\nAmplify.configure(outputs);\nexport default function App() {  return (    <Authenticator>      {({ signOut, user }) => (        <main>          <h1>Hello {user?.username}</h1>          <button onClick={signOut}>Sign out</button>        </main>      )}    </Authenticator>  );}\n"
        ]
      },
      {
        "title": "Work with geofences",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/geofences/",
        "examples": [
          "npm add aws-amplify \\  @aws-amplify/geo \\  @aws-amplify/ui-react \\  @aws-amplify/ui-react-geo\n",
          "import { useEffect, useRef } from \"react\";- import { createMap } from \"maplibre-gl-js-amplify\";+ import { createMap, AmplifyGeofenceControl } from \"maplibre-gl-js-amplify\";+ import { withAuthenticator } from \"@aws-amplify/ui-react\";+ import \"@aws-amplify/ui-react/styles.css\";+ import \"maplibre-gl-js-amplify/dist/public/amplify-ctrl-geofence.css\";import \"maplibre-gl/dist/maplibre-gl.css\";\nfunction Map() {  const mapRef = useRef(null); // Reference to the map DOM element  // Wrapping your code in a useEffect allows us to run initializeMap after the div has been rendered into the DOM  useEffect(() => {    let map;    async function initializeMap() {      // You only want to initialize the underlying maplibre map after the div has been rendered      if (mapRef.current != null) {        map = await createMap({          container: mapRef.current,          center: [-122.431297, 37.773972],          zoom: 11,        });      }+     const control = new AmplifyGeofenceControl()+     map.addControl(control);  }  initializeMap();    // Cleans up and maplibre DOM elements and other resources - https://maplibre.org/maplibre-gl-js/docs/API/classes/Map/#remove    return function cleanup() {      if (map != null) map.remove();    };  }, []); return (   <div className=\"App\">     <div ref={mapRef} id=\"map\" />   </div> );}\nexport default withAuthenticator(Map);\n"
        ]
      },
      {
        "title": "Account Settings",
        "url": "https://ui.docs.amplify.aws/react/connected-components/account-settings",
        "examples": [
          "npm install -g @aws-amplify/cli@latest\n\n",
          "yarn global add @aws-amplify/cli@latest\n\n"
        ]
      },
      {
        "title": "Authenticator",
        "url": "https://ui.docs.amplify.aws/react/connected-components/authenticator",
        "examples": [
          "import React from 'react';\nimport { Amplify } from 'aws-amplify';\n\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nimport awsExports from './aws-exports';\nAmplify.configure(awsExports);\n\nexport default function App() {\n  return (\n    <Authenticator>\n      {({ signOut, user }) => (\n        <main>\n          <h1>Hello {user.username}</h1>\n          <button onClick={signOut}>Sign out</button>\n        </main>\n      )}\n    </Authenticator>\n  );\n}\n\n",
          "import { Amplify } from 'aws-amplify';\n\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nimport awsExports from './aws-exports';\nAmplify.configure(awsExports);\n\nfunction App({ isPassedToWithAuthenticator, signOut, user }) {\n  if (!isPassedToWithAuthenticator) {\n    throw new Error(`isPassedToWithAuthenticator was not provided`);\n  }\n\n  return (\n    <>\n      <h1>Hello {user.username}</h1>\n      <button onClick={signOut}>Sign out</button>\n    </>\n  );\n}\n\nexport default withAuthenticator(App);\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      isPassedToWithAuthenticator: true,\n    },\n  };\n}\n\n"
        ]
      },
      {
        "title": "FileUploader",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "examples": [
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\n\nexport const App = () => {\n  return (\n    <FileUploader\n      acceptedFileTypes={['image/*']}\n      path=\"public/\"\n      maxFileCount={1}\n      isResumable\n    />\n  );\n};\n\n"
        ]
      },
      {
        "title": "FileUploader",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "examples": [
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\n\nexport const App = () => {\n  return (\n    <FileUploader\n      acceptedFileTypes={['image/*']}\n      path=\"public/\"\n      maxFileCount={1}\n      isResumable\n    />\n  );\n};\n\n"
        ]
      },
      {
        "title": "Storage Image",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
        "examples": [
          "import { StorageImage } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { StorageImage } from '@aws-amplify/ui-react-storage';\n\nexport function App() {\n  return <StorageImage alt=\"sleepy-cat\" path=\"public/cat.jpg\" />;\n}\n\n"
        ]
      },
      {
        "title": "UI event handler",
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/eventhandling/",
        "examples": [
          "import { HeroLayout1 } from './ui-components'\n<div className=\"App\">  <HeroLayout1 />  ...  <div id=\"lorem-ipsum\">    <h2>Lorem Ipsum</h2>    <p>      Here is a description of my new feature.    </p>  </div>  ...</div>\n",
          "import { NewHomeInput, HomeCollection } from './ui-components'\n...<div>  <NewHomeInput />  <HomeCollection /></div>\n"
        ]
      },
      {
        "title": "<AIConversation>",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
        "examples": [
          "import { AIConversation } from '@aws-amplify/ui-react-ai';\nexport default function Chat() {  return (    <AIConversation      messages={[]}      handleSendMessage={() => {}}    />  )}\n",
          "import ReactMarkdown from 'react-markdown';\n<AIConversation  messageRenderer={{    text: ({ text }) => <ReactMarkdown>{text}</ReactMarkdown>  }}/>\n"
        ]
      },
      {
        "title": "Concepts",
        "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
        "examples": [
          "const schema = a.schema({  Chat: a.model({    name: a.string(),    message: a.hasMany('Message', 'chatId'),  }),  Message: a.model({    text: a.string(),    chat: a.belongsTo('Chat', 'chatId'),    chatId: a.id()  }),}).authorization((allow) => allow.owner());\n",
          "// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\n// list all messagesconst { data } = await client.models.Message.list();\n// create a new messageconst { errors, data: newMessage } = await client.models.Message.create({  text: 'My message text'});\n"
        ]
      },
      {
        "title": "Context",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/context/",
        "examples": [
          "function Chat() {  const [    {      data: { messages },      isLoading,    },    sendMessage,  ] = useAIConversation('chat');\n  return (    <AIConversation      messages={messages}      isLoading={isLoading}      handleSendMessage={sendMessage}      // This will let the LLM know about the current state of this application      // so it can better respond to questions      aiContext={() => {        return {          currentTime: new Date().toLocaleTimeString(),        };      }}    />  );}\n",
          "// Create a context to share state across componentsconst DataContext = React.createContext<{  data: any;  setData: (value: React.SetStateAction<any>) => void;}>({ data: {}, setData: () => {} });\n// Create a component that updates the shared statefunction Counter() {  const { data, setData } = React.useContext(AIContext);  const count = data.count ?? 0;  return (    <Button onClick={() => setData({ ...data, count: count + 1 })}>      {count}    </Button>  );}\n// reference shared data in aiContextfunction Chat() {  const { data } = React.useContext(DataContext);  const [    {      data: { messages },      isLoading,    },    sendMessage,  ] = useAIConversation('pirateChat');\n  return (    <AIConversation      messages={messages}      isLoading={isLoading}      handleSendMessage={sendMessage}      // This will let the LLM know about the current state of this application      // so it can better respond to questions      aiContext={() => {        return {          ...data,          currentTime: new Date().toLocaleTimeString(),        };      }}    />  );}\nexport default function Example() {  const [data, setData] = React.useState({});  return (    <Authenticator>      <DataContext.Provider value={{ data, setData }}>        <Counter />        <Chat />      </DataContext.Provider>    </Authenticator>  )}\n"
        ]
      },
      {
        "title": "Response components",
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/response-components/",
        "examples": [
          "<AIConversationCopy highlighted code example  responseComponents={{    WeatherCard: {      description: \"Used to display the weather to the user\",      component: ({ city }) => {        return (          <div>{city}</div>        )      },      props: {        city: {          type: \"string\",          required: true,          description: \"The name of the city to display the weather for\",        },      },    },  }}/>\n",
          "// Create a context to share state across componentsCopy highlighted code exampleconst DataContext = React.createContext<{  data: any;  setData: (value: React.SetStateAction<any>) => void;}>({ data: {}, setData: () => {} });\nfunction WeatherCard({ city }: { city: string }) {  const { setData } = React.useContext(DataContext);\n  React.useEffect(() => {    // fetch some weather data    // set the data context    setData({       city,      // weather info    })  },[city])\n  return (    <div>{city}</div>  )}Copy highlighted code example\n\nfunction Chat() {  const { data } = React.useContext(DataContext);  const [    {      data: { messages },      isLoading,    },    sendMessage,  ] = useAIConversation('chat');\n  return (    <AIConversation      messages={messages}      isLoading={isLoading}      handleSendMessage={sendMessage}      responseComponents={{        WeatherCard: {          component: WeatherCard,          description: \"Used to display the weather to the user\",          props: {            city: {              type: \"string\",              required: true,              description: \"The name of the city to display the weather for\",            },          },        }      }}Copy highlighted code example      aiContext={() => {        return {          ...data,        };      }}    />  );}\nexport default function Example() {  const [data, setData] = React.useState({});  return (    <Authenticator>      <DataContext.Provider value={{ data, setData }}>        <Chat />      </DataContext.Provider>    </Authenticator>  )}\n"
        ]
      },
      {
        "title": "Sandbox Seed",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/seed/",
        "examples": [
          "npm install @aws-amplify/seed --save-dev\n",
          "amplify/  └── seed/      └── seed.ts\n"
        ]
      },
      {
        "title": "Separate frontend and backend teams",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/mono-and-multi-repos/",
        "examples": [
          "npm create next-app@14 -- multi-repo-example --typescript --eslint --no-app --no-src-dir --no-tailwind --import-alias '@/*'\n",
          "cd multi-repo-examplenpm add @aws-amplify/backend-cli aws-amplify @aws-amplify/ui-react\n"
        ]
      },
      {
        "title": "Set up AI",
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "examples": [
          "npm create amplify@latest\n",
          "npx ampx sandbox\n"
        ]
      },
      {
        "title": "Connect to AWS resources",
        "url": "https://docs.amplify.aws/nextjs/start/connect-to-aws-resources/",
        "examples": [
          "import { Amplify } from \"aws-amplify\"import outputs from \"../amplify_outputs.json\"\nAmplify.configure(outputs)\n",
          "import { Amplify } from \"aws-amplify\"\nAmplify.configure({  Auth: {    Cognito: {      userPoolId: \"<your-cognito-user-pool-id>\",      userPoolClientId: \"<your-cognito-user-pool-client-id>\",      identityPoolId: \"<your-cognito-identity-pool-id>\",      loginWith: {        email: true,      },      signUpVerificationMethod: \"code\",      userAttributes: {        email: {          required: true,        },      },      allowGuestAccess: true,      passwordFormat: {        minLength: 8,        requireLowercase: true,        requireUppercase: true,        requireNumbers: true,        requireSpecialCharacters: true,      },    },  },})\n"
        ]
      },
      {
        "title": "Next.js App Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      },
      {
        "title": "Next.js Pages Router",
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
        "examples": [
          "├── amplify/ # Folder containing your Amplify backend configuration│   ├── auth/ # Definition for your auth backend│   │   └── resource.tsx│   ├── data/ # Definition for your data backend│   │   └── resource.ts|   ├── backend.ts│   └── tsconfig.json├── src/ # React UI code│   ├── App.tsx # UI code to sync todos in real-time│   ├── index.css # Styling for your app│   └── main.tsx # Entrypoint of the Amplify client library├── package.json└── tsconfig.json\n",
          "git clone https://github.com/<github-user>/amplify-next-template.gitcd amplify-next-template && npm install\n"
        ]
      }
    ],
    "storage": [
      {
        "title": "Working with files/attachments",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({  Song: a    .model({      id: a.id().required(),      name: a.string().required(),      coverArtPath: a.string(),    })    .authorization((allow) => [allow.publicApiKey()]),});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",\n    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "import { defineStorage } from \"@aws-amplify/backend\";\nexport const storage = defineStorage({  name: \"amplify-gen2-files\",  access: (allow) => ({    \"images/*\": [allow.authenticated.to([\"read\", \"write\", \"delete\"])],  }),});\n"
        ]
      },
      {
        "title": "Configure Functions",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/configure-functions/",
        "examples": [
          "export const myDemoFunction = defineFunction({  entry: './demo-function-handler.ts',  name: 'overrideName' // explicitly set the name to override the default naming behavior});\n",
          "export const myDemoFunction = defineFunction({Copy highlighted code example  timeoutSeconds: 60 // 1 minute timeout});\n"
        ]
      },
      {
        "title": "Configure location search",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/configure-location-search/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { Policy, PolicyStatement } from \"aws-cdk-lib/aws-iam\";Copy highlighted code exampleimport { CfnMap, CfnPlaceIndex } from \"aws-cdk-lib/aws-location\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,  data,  // additional resources});\nconst geoStack = backend.createStack(\"geo-stack\");\n// create a location services mapconst map = new CfnMap(geoStack, \"Map\", {  mapName: \"myMap\",  description: \"Map\",  configuration: {    style: \"VectorEsriNavigation\",  },  pricingPlan: \"RequestBasedUsage\",  tags: [    {      key: \"name\",      value: \"myMap\",    },  ],});\n\n// create an IAM policy to allow interacting with geo resourceconst myGeoPolicy = new Policy(geoStack, \"GeoPolicy\", {  policyName: \"myGeoPolicy\",  statements: [    new PolicyStatement({      actions: [        \"geo:GetMapTile\",        \"geo:GetMapSprites\",        \"geo:GetMapGlyphs\",        \"geo:GetMapStyleDescriptor\",      ],      resources: [map.attrArn],    }),  ],});\n// apply the policy to the authenticated and unauthenticated rolesbackend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(myGeoPolicy);backend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(myGeoPolicy);\nCopy highlighted code example// create a location services place indexconst myIndex = new CfnPlaceIndex(geoStack, \"PlaceIndex\", {  dataSource: \"Here\",  dataSourceConfiguration: {    intendedUse: \"SingleUse\",  },  indexName: \"myPlaceIndex\",  pricingPlan: \"RequestBasedUsage\",  tags: [    {      key: \"name\",      value: \"myPlaceIndex\",    },  ],});\n// create a policy to allow access to the place indexconst myIndexPolicy = new Policy(geoStack, \"IndexPolicy\", {  policyName: \"myIndexPolicy\",  statements: [    new PolicyStatement({      actions: [        \"geo:SearchPlaceIndexForPosition\",        \"geo:SearchPlaceIndexForText\",        \"geo:SearchPlaceIndexForSuggestions\",        \"geo:GetPlace\",      ],      resources: [myIndex.attrArn],    }),  ],});\n// attach the policy to the authenticated and unauthenticated IAM rolesbackend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(myIndexPolicy);backend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(myIndexPolicy);\n// patch the place index resource to the expected output configurationbackend.addOutput({  geo: {    aws_region: geoStack.region,    maps: {      items: {        [map.mapName]: {          style: \"VectorEsriNavigation\",        },      },      default: map.mapName,    },Copy highlighted code example    search_indices: {      default: myIndex.indexName,      items: [myIndex.indexName],    },  },});\n"
        ]
      },
      {
        "title": "Connect to Amazon OpenSearch for search and aggregate queries",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
        "examples": [
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\";\nconst schema = a.schema({Copy highlighted code example  Todo: a    .model({      content: a.string(),      done: a.boolean(),      priority: a.enum([\"low\", \"medium\", \"high\"]),    })    .authorization((allow) => [allow.publicApiKey()])});\nexport type Schema = ClientSchema<typeof schema>;\nexport const data = defineData({  schema,  authorizationModes: {    defaultAuthorizationMode: \"apiKey\",    apiKeyAuthorizationMode: {      expiresInDays: 30,    },  },});\n",
          "Copy highlighted code exampleimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';import { data } from './data/resource';\nconst backend = defineBackend({  auth,  data});\nCopy highlighted code exampleconst todoTable =  backend.data.resources.cfnResources.amplifyDynamoDbTables['Todo'];\n// Update table settingstodoTable.pointInTimeRecoveryEnabled = true;\ntodoTable.streamSpecification = {  streamViewType: dynamodb.StreamViewType.NEW_IMAGE};\n// Get the DynamoDB table ARNconst tableArn = backend.data.resources.tables['Todo'].tableArn;// Get the DynamoDB table nameconst tableName = backend.data.resources.tables['Todo'].tableName;\n"
        ]
      },
      {
        "title": "Connect to Amazon Polly for Text-To-Speech APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-polly/",
        "examples": [
          "npm add @aws-sdk/client-polly\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Connect to Amazon Rekognition for Image Analysis APIs",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
        "examples": [
          "npm add @aws-sdk/client-rekognition\n",
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'predictions_gen2'});\n"
        ]
      },
      {
        "title": "Copy files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/copy-files/",
        "examples": [
          "import { copy } from 'aws-amplify/storage';\nconst copyFile = async () => {  try {    const response = await copy({      source: {        path: `album/2024/${encodeURIComponent('#1.jpg')}`,        // Alternatively, path: ({identityId}) => `album/${identityId}/${encodeURIComponent('#1.jpg')`      },      destination: {        path: 'shared/2024/#1.jpg',        // Alternatively, path: ({identityId}) => `shared/${identityId}/#1.jpg`      },    });  } catch (error) {    console.error('Error', err);  }};\n",
          "import { copy } from 'aws-amplify/storage';\nconst copyFile = async () => {  try {    const response = await copy({      source: {        path: 'album/2024/1.jpg',        // Specify a target bucket using name assigned in Amplify Backend        // or bucket name from console and associated region        bucket: 'assignedNameInAmplifyBackend',        expectedBucketOwner: '123456789012'      },      destination: {        path: 'shared/2024/1.jpg',        // Specify a target bucket using name assigned in Amplify Backend        // or bucket name from console and associated region        bucket: {          bucketName: 'generated-second-bucket-name',          region: 'us-east-2'        },        expectedBucketOwner: '123456789013'      }    });  } catch (error) {    console.error('Error', error);  }};\n"
        ]
      },
      {
        "title": "Customize authorization rules",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/authorization/",
        "examples": [
          "export const storage = defineStorage({  name: 'myProjectFiles',  access: (allow) => ({    'media/*': [      allow.guest.to(['read']) // additional actions such as \"write\" and \"delete\" can be specified depending on your use case    ]  })});\n",
          "export const storage = defineStorage({  name: 'myProjectFiles',  access: (allow) => ({    'media/*': [      allow.authenticated.to(['read']) // additional actions such as \"write\" and \"delete\" can be specified depending on your use case    ]  })});\n"
        ]
      },
      {
        "title": "Download files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download-files/",
        "examples": [
          "npm add @aws-amplify/ui-react-storage aws-amplify\n",
          "import { StorageImage } from '@aws-amplify/ui-react-storage';\nexport const DefaultStorageImageExample = () => {  return <StorageImage alt=\"cat\" path=\"your-path/cat.jpg\" />;};\n"
        ]
      },
      {
        "title": "Extend S3 resources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/extend-s3-resources/",
        "examples": [
          "Copy highlighted code exampleimport * as s3 from 'aws-cdk-lib/aws-s3';import { defineBackend } from '@aws-amplify/backend';import { storage } from './storage/resource';\nconst backend = defineBackend({  storage});\nCopy highlighted code exampleconst s3Bucket = backend.storage.resources.bucket;\nconst cfnBucket = s3Bucket.node.defaultChild as s3.CfnBucket;\ncfnBucket.accelerateConfiguration = {  accelerationStatus: \"Enabled\" // 'Suspended' if you want to disable transfer acceleration}\n",
          "[  {    \"AllowedHeaders\": [\"*\"],    \"AllowedMethods\": [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\"],    \"AllowedOrigins\": [\"*\"],    \"ExposeHeaders\": [      \"x-amz-server-side-encryption\",      \"x-amz-request-id\",      \"x-amz-id-2\",      \"ETag\",      \"x-amz-meta-foo\"    ],    \"MaxAgeSeconds\": 3000  }]\n"
        ]
      },
      {
        "title": "Grant access to other resources",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/grant-access-to-other-resources/",
        "examples": [
          "import { defineStorage } from '@aws-amplify/backend';import { generateMonthlyReports } from '../functions/generate-monthly-reports/resource';\nexport const storage = defineStorage({  name: 'myReports',  access: (allow) => ({    'reports/*': [      allow.resource(generateMonthlyReports).to(['read', 'write', 'delete'])    ]  })});\n",
          "import { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';import { env } from '$amplify/env/generate-monthly-reports';\nconst s3Client = new S3Client();\nexport const handler = async () => {  const command = new PutObjectCommand({    Bucket: env.MY_REPORTS_BUCKET_NAME,    Key: `reports/${new Date().toISOString()}.csv`,    Body: new Blob([''], { type: 'text/csv;charset=utf-8;' })  });\n  await s3Client.send(command);};\n"
        ]
      },
      {
        "title": "Identify entities from images",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/identify-entity/",
        "examples": [
          "import { Predictions } from '@aws-amplify/predictions';\nconst response = await Predictions.identify({  entities: {    source: {      file,    },  }});\n",
          "import { Predictions } from '@aws-amplify/predictions';\nconst response = await Predictions.identify({  entities: {    source: {      bytes: imageArrayBuffer,    },  }});\n"
        ]
      },
      {
        "title": "List file properties",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/list-files/",
        "examples": [
          "import { list } from 'aws-amplify/storage';\nconst result = await list({\tpath: 'album/photos/',  // Alternatively, path: ({identityId}) => `album/${identityId}/photos/`});\n",
          "{  items: [    {      path: \"album/photos/123.jpg\",      eTag: \"30074401292215403a42b0739f3b5262\",      lastModified: \"Thu Oct 08 2020 23:59:31 GMT+0800 (Singapore Standard Time)\",      size: 138256    },    // ...  ],}\n"
        ]
      },
      {
        "title": "Listen to storage events",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/lambda-triggers/",
        "examples": [
          "export const storage = defineStorage({  name: 'myProjectFiles',Copy highlighted code example  triggers: {    onUpload: defineFunction({      entry: './on-upload-handler.ts'    }),    onDelete: defineFunction({      entry: './on-delete-handler.ts'    })  }});\n",
          "import type { S3Handler } from 'aws-lambda';\nexport const handler: S3Handler = async (event) => {  const objectKeys = event.Records.map((record) => record.s3.object.key);  console.log(`Upload handler invoked for objects [${objectKeys.join(', ')}]`);};\n"
        ]
      },
      {
        "title": "Nuxt.js server runtime",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nuxtjs-server-runtime/",
        "examples": [
          "import {  fetchAuthSession,  fetchUserAttributes,  signIn,  signOut,  getCurrentUser,} from \"aws-amplify/auth\";import { generateClient } from \"aws-amplify/data\";import outputs from \"../amplify_outputs.json\";import type { Schema } from \"@/amplify/data/resource\";import { Amplify } from \"aws-amplify\";\n// configure the Amplify client libraryif (process.client) {  Amplify.configure(outputs, { ssr: true });}\n// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\nexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    return {      provide: {        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        Amplify: {          Auth: {            fetchAuthSession,            fetchUserAttributes,            getCurrentUser,            signIn,            signOut,          },          GraphQL: {            client,          },        },      },    };  },});\n",
          "import type { CookieRef } from \"nuxt/app\";import {  createKeyValueStorageFromCookieStorageAdapter,  createUserPoolsTokenProvider,  createAWSCredentialsAndIdentityIdProvider,  runWithAmplifyServerContext,} from \"aws-amplify/adapter-core\";import { parseAmplifyConfig } from \"aws-amplify/utils\";import {  fetchAuthSession,  fetchUserAttributes,  getCurrentUser,} from \"aws-amplify/auth/server\";import { generateClient } from \"aws-amplify/data/server\";import type {  LibraryOptions,  FetchAuthSessionOptions,} from \"@aws-amplify/core\";import type {  GraphQLOptionsV6,  GraphQLResponseV6,} from \"@aws-amplify/api-graphql\";\nimport outputs from \"../amplify_outputs.json\";\n// parse the content of `amplify_outputs.json` into the shape of ResourceConfigconst amplifyConfig = parseAmplifyConfig(outputs);\n// create the Amplify used token cookies names arrayconst userPoolClientId = amplifyConfig.Auth!.Cognito.userPoolClientId;const lastAuthUserCookieName = `CognitoIdentityServiceProvider.${userPoolClientId}.LastAuthUser`;\n// create a GraphQL client that can be used in a server contextconst gqlServerClient = generateClient({ config: amplifyConfig });\nconst getAmplifyAuthKeys = (lastAuthUser: string) =>  [\"idToken\", \"accessToken\", \"refreshToken\", \"clockDrift\"]    .map(      (key) =>        `CognitoIdentityServiceProvider.${userPoolClientId}.${lastAuthUser}.${key}`    )    .concat(lastAuthUserCookieName);\n// define the pluginexport default defineNuxtPlugin({  name: \"AmplifyAPIs\",  enforce: \"pre\",  setup() {    // The Nuxt composable `useCookie` is capable of sending cookies to the    // client via the `SetCookie` header. If the `expires` option is left empty,    // it sets a cookie as a session cookie. If you need to persist the cookie    // on the client side after your end user closes your Web app, you need to    // specify an `expires` value.    //    // We use 30 days here as an example (the default Cognito refreshToken    // expiration time).    const expires = new Date();    expires.setDate(expires.getDate() + 30);\n    // Get the last auth user cookie value    //    // We use `sameSite: 'lax'` in this example, which allows the cookie to be    // sent to your Nuxt server when your end user gets redirected to your Web    // app from a different domain. You should choose an appropriate value for    // your own use cases.    const lastAuthUserCookie = useCookie(lastAuthUserCookieName, {      sameSite: \"lax\",      expires,      secure: true,    });\n    // Get all Amplify auth token cookie names    const authKeys = lastAuthUserCookie.value      ? getAmplifyAuthKeys(lastAuthUserCookie.value)      : [];\n    // Create a key-value map of cookie name => cookie ref    //    // Using the composable `useCookie` here in the plugin setup prevents    // cross-request pollution.    const amplifyCookies = authKeys      .map((name) => ({        name,        cookieRef: useCookie(name, { sameSite: \"lax\", expires, secure: true }),      }))      .reduce<Record<string, CookieRef<string | null | undefined>>>(        (result, current) => ({          ...result,          [current.name]: current.cookieRef,        }),        {}      );\n    // Create a key value storage based on the cookies    //    // This key value storage is responsible for providing Amplify Auth tokens to    // the APIs that you are calling.    //    // If you implement the `set` method, when Amplify needed to refresh the Auth    // tokens on the server side, the new tokens would be sent back to the client    // side via `SetCookie` header in the response. Otherwise the refresh tokens    // would not be propagate to the client side, and Amplify would refresh    // the tokens when needed on the client side.    //    // In addition, if you decide not to implement the `set` method, you don't    // need to pass any `CookieOptions` to the `useCookie` composable.    const keyValueStorage = createKeyValueStorageFromCookieStorageAdapter({      get(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef && cookieRef.value) {          return { name, value: cookieRef.value };        }\n        return undefined;      },      getAll() {        return Object.entries(amplifyCookies).map(([name, cookieRef]) => {          return { name, value: cookieRef.value ?? undefined };        });      },      set(name, value) {        const cookieRef = amplifyCookies[name];        if (cookieRef) {          cookieRef.value = value;        }      },      delete(name) {        const cookieRef = amplifyCookies[name];\n        if (cookieRef) {          cookieRef.value = null;        }      },    });\n    // Create a token provider    const tokenProvider = createUserPoolsTokenProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create a credentials provider    const credentialsProvider = createAWSCredentialsAndIdentityIdProvider(      amplifyConfig.Auth!,      keyValueStorage    );\n    // Create the libraryOptions object    const libraryOptions: LibraryOptions = {      Auth: {        tokenProvider,        credentialsProvider,      },    };\n    return {      provide: {        // You can add the Amplify APIs that you will use on the server side of        // your Nuxt app here. You must only use the APIs exported from the        // `aws-amplify/<category>/server` subpaths.        //        // You can call the API by via the composable `useNuxtApp()`. For example:        // `useNuxtApp().$Amplify.Auth.fetchAuthSession()`        //        // Recall that Amplify server APIs are required to be called in a isolated        // server context that is created by the `runWithAmplifyServerContext`        // function.        Amplify: {          Auth: {            fetchAuthSession: (options: FetchAuthSessionOptions) =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchAuthSession(contextSpec, options)              ),            fetchUserAttributes: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => fetchUserAttributes(contextSpec)              ),            getCurrentUser: () =>              runWithAmplifyServerContext(                amplifyConfig,                libraryOptions,                (contextSpec) => getCurrentUser(contextSpec)              ),          },          GraphQL: {            client: {              // Follow this typing to ensure the`graphql` API return type can              // be inferred correctly according to your queries and mutations              graphql: <                FALLBACK_TYPES = unknown,                TYPED_GQL_STRING extends string = string              >(                options: GraphQLOptionsV6<FALLBACK_TYPES, TYPED_GQL_STRING>,                additionalHeaders?: Record<string, string>              ) =>                runWithAmplifyServerContext<                  GraphQLResponseV6<FALLBACK_TYPES, TYPED_GQL_STRING>                >(amplifyConfig, libraryOptions, (contextSpec) =>                  gqlServerClient.graphql(                    contextSpec,                    options,                    additionalHeaders                  )                ),            },          },        },      },    };  },});\n"
        ]
      },
      {
        "title": "Remove files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/remove-files/",
        "examples": [
          "import { remove } from 'aws-amplify/storage';\ntry {  await remove({     path: 'album/2024/1.jpg',    // Alternatively, path: ({identityId}) => `album/${identityId}/1.jpg`    bucket: 'assignedNameInAmplifyBackend', // Specify a target bucket using name assigned in Amplify Backend  });} catch (error) {  console.log('Error ', error);}\n",
          "import { remove } from 'aws-amplify/storage';\ntry {  await remove({     path: 'album/2024/1.jpg',    // Alternatively, provide bucket name from console and associated region    bucket: {      bucketName: 'bucket-name-from-console',      region: 'us-east-2'    }\n  });} catch (error) {  console.log('Error ', error);}\n"
        ]
      },
      {
        "title": "S3 Upload confirmation",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/s3-upload-confirmation/",
        "examples": [
          "npm add --save @types/aws-lambda\n",
          "import { defineFunction, defineStorage } from \"@aws-amplify/backend\";\nexport const storage = defineStorage({  name: 'myProjectFiles',  triggers: {    onUpload: defineFunction({      entry: './on-upload-handler.ts'      resourceGroupName: 'storage',    })  }});\n"
        ]
      },
      {
        "title": "Server-Side Rendering",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
        "examples": [
          "npm add aws-amplify @aws-amplify/adapter-nextjs\n",
          "import { createServerRunner } from '@aws-amplify/adapter-nextjs';import outputs from '@/amplify_outputs.json';\nexport const { runWithAmplifyServerContext } = createServerRunner({  config: outputs});\n"
        ]
      },
      {
        "title": "Set up Storage",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/set-up-storage/",
        "examples": [
          "import { defineStorage } from '@aws-amplify/backend';\nexport const storage = defineStorage({  name: 'amplifyTeamDrive'});\n",
          "import { defineBackend } from '@aws-amplify/backend';import { auth } from './auth/resource';Copy highlighted code exampleimport { storage } from './storage/resource';\ndefineBackend({  auth,Copy highlighted code example  storage});\n"
        ]
      },
      {
        "title": "Storing analytics data",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/storing-data/",
        "examples": [
          "import { defineStorage } from \"@aws-amplify/backend\";\n// Define the S3 bucket resourceexport const storage = defineStorage({  name: \"FirehoseDestinationBucket\",});\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";import { storage } from \"./storage/resource\";import { CfnDeliveryStream } from \"aws-cdk-lib/aws-kinesisfirehose\";import { Stack } from \"aws-cdk-lib/core\";import {  Policy,  PolicyStatement,  Role,  ServicePrincipal,} from \"aws-cdk-lib/aws-iam\";\nconst backend = defineBackend({  auth,   data,  storage,  // additional resources });\n// Create a new stack for the Firehose resourcesconst firehoseStack = backend.createStack(\"firehose-stack\");\n// Access the S3 bucket resourceconst s3Bucket = backend.storage.resources.bucket;\n// Create a new IAM role for the Firehoseconst firehoseRole = new Role(firehoseStack, \"FirehoseRole\", {  assumedBy: new ServicePrincipal(\"firehose.amazonaws.com\"),});\n// Grant the Firehose role read/write permissions to the S3 buckets3Bucket.grantReadWrite(firehoseRole);\n// Create a new Firehose delivery streamconst myFirehose = new CfnDeliveryStream(firehoseStack, \"MyFirehose\", {  deliveryStreamType: \"DirectPut\",  s3DestinationConfiguration: {    bucketArn: s3Bucket.bucketArn,    roleArn: firehoseRole.roleArn,  },  deliveryStreamName: \"myFirehose\",});\n// Create a new IAM policy to allow users to write to the Firehoseconst firehosePolicy = new Policy(firehoseStack, \"FirehosePolicy\", {  statements: [    new PolicyStatement({      actions: [\"firehose:PutRecordBatch\"],      resources: [myFirehose.attrArn],    }),  ],});\n// Attach the policy to the authenticated and unauthenticated IAM rolesbackend.auth.resources.authenticatedUserIamRole.attachInlinePolicy(firehosePolicy);backend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(firehosePolicy);\n"
        ]
      },
      {
        "title": "Tokens and credentials",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/tokens-and-credentials/",
        "examples": [
          "{  \"sub\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"iss\": \"https://cognito-idp.us-east-1.amazonaws.com/us-east-1_yoKn9s4Tq\",  \"client_id\": \"1sg675g08g6g0e9f64grv9n5sk\",  \"origin_jti\": \"0eadb994-a6e0-419e-b309-a7a0d522d72f\",  \"event_id\": \"b180897a-181c-4f73-94bb-a2946e8b4ef1\",  \"token_use\": \"access\",  \"scope\": \"aws.cognito.signin.user.admin\",  \"auth_time\": 1714241873,  \"exp\": 1714245473,  \"iat\": 1714241873,  \"jti\": \"57f10a4d-a1f2-453b-8672-d1cfa8187047\",  \"username\": \"54288468-e051-706d-a73f-03892273d7e9\"}\n",
          "{  \"sub\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"email_verified\": true,  \"iss\": \"https://cognito-idp.us-east-1.amazonaws.com/us-east-1_yoKn9s4Tq\",  \"cognito:username\": \"54288468-e051-706d-a73f-03892273d7e9\",  \"origin_jti\": \"0eadb994-a6e0-419e-b309-a7a0d522d72f\",  \"aud\": \"1sg675g08g6g0e9f64grv9n5sk\",  \"event_id\": \"b180897a-181c-4f73-94bb-a2946e8b4ef1\",  \"token_use\": \"id\",  \"auth_time\": 1714241873,  \"exp\": 1714245473,  \"iat\": 1714241873,  \"jti\": \"bb69af10-3ce0-47c2-8d8d-5bdc8630ab58\",  \"email\": \"hello@mycompany.com\"}\n"
        ]
      },
      {
        "title": "Troubleshoot circular dependency issues",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/troubleshooting/circular-dependency/",
        "examples": [
          "export const queryFunction = defineFunction({  name: 'query-function',  resourceGroupName: 'data',});\n",
          "export const preSignUpTrigger = defineFunction({  name: 'pre-sign-up',  resourceGroupName: 'auth',});\n"
        ]
      },
      {
        "title": "Upload files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload-files/",
        "examples": [
          "npm add @aws-amplify/ui-react-storage aws-amplify\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';import '@aws-amplify/ui-react/styles.css';\nexport const DefaultFileUploaderExample = () => {  return (    <FileUploader      acceptedFileTypes={['image/*']}      path=\"public/\"      maxFileCount={1}      isResumable    />  );};\n"
        ]
      },
      {
        "title": "Use Amplify Storage with any S3 bucket",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/use-with-custom-s3/",
        "examples": [
          "{  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Sid\": \"Statement1\",      \"Principal\": {         \"AWS\": \"arn:aws:iam::<AWS-account-ID>:role/<role-name>\"       },      \"Effect\": \"Allow\",      \"Action\": [        \"s3:PutObject\",        \"s3:GetObject\",        \"s3:DeleteObject\",        \"s3:ListBucket\"      ],      \"Resource\": [        \"arn:aws:s3:::<bucket-name>\",        \"arn:aws:s3:::<bucket-name>/*\"      ]    }  ]}\n",
          "import { defineBackend } from \"@aws-amplify/backend\";import { Effect, Policy, PolicyStatement } from \"aws-cdk-lib/aws-iam\";import { Bucket } from \"aws-cdk-lib/aws-s3\";import { auth } from \"./auth/resource\";\nconst backend = defineBackend({  auth,});Copy highlighted code exampleconst customBucketStack = backend.createStack(\"custom-bucket-stack\");\n// Import existing bucketconst customBucket = Bucket.fromBucketAttributes(customBucketStack, \"MyCustomBucket\", {  bucketArn: \"arn:aws:s3:::<bucket-name>\",  region: \"<region>\"});\nbackend.addOutput({  storage: {    aws_region: customBucket.env.region,    bucket_name: customBucket.bucketName,    // optional: `buckets` can be used when setting up more than one existing bucket    buckets: [      {        aws_region: customBucket.env.region,        bucket_name: customBucket.bucketName,        name: customBucket.bucketName,        /*          optional: `paths` can be used to set up access to specific           bucket prefixes and configure user access types to them        */         paths: {          \"public/*\": {            // \"write\" and \"delete\" can also be added depending on your use case            guest: [\"get\", \"list\"],           },        },      }    ]  },});\n/*  Define an inline policy to attach to Amplify's unauth role  This policy defines how unauthenticated/guest users can access your existing bucket*/ const unauthPolicy = new Policy(backend.stack, \"customBucketUnauthPolicy\", {  statements: [    new PolicyStatement({      effect: Effect.ALLOW,      actions: [\"s3:GetObject\"],      resources: [`${customBucket.bucketArn}/public/*`],    }),    new PolicyStatement({      effect: Effect.ALLOW,      actions: [\"s3:ListBucket\"],      resources: [        `${customBucket.bucketArn}`,        `${customBucket.bucketArn}/*`      ],      conditions: {        StringLike: {          \"s3:prefix\": [\"public/\", \"public/*\"],        },      },    }),  ],});\n// Add the policies to the unauthenticated user rolebackend.auth.resources.unauthenticatedUserIamRole.attachInlinePolicy(  unauthPolicy,);\n"
        ]
      },
      {
        "title": "User groups",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/user-groups/",
        "examples": [
          "import { defineAuth } from \"@aws-amplify/backend\"\nexport const auth = defineAuth({  loginWith: {    email: true,  },Copy highlighted code example  groups: [\"ADMINS\", \"EDITORS\"],})\n",
          "import { type ClientSchema, a, defineData } from \"@aws-amplify/backend\"\nconst schema = a.schema({  Article: a.model({}).authorization(allow => [    allow.groups([\"EDITORS\"]).to([\"read\", \"update\"])  ])})\n// ...\n"
        ]
      },
      {
        "title": "Configure special inputs",
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
        "examples": [
          "// importsimport { FileUploader } from \"@aws-amplify/ui-react-storage\";// import the processFile helper function which will create unique filenames based on the file contentsimport { processFile } from \"./utils\";\n//...<FileUploader  accessLevel=\"public\"  maxFileCount={10}  acceptedFileTypes={['image/*']}  processFile={processFile}  onUploadSuccess={({key}) => {    // assuming you have an attribute called 'images' on your data model that is an array of strings    setImages(prevImages => [...prevImages, key])  }}  onFileRemove={({key}) => {    setImages(prevImages => prevImages.filter(img => img !== key))  }}/>\n",
          "// importsimport { FileUploader } from \"@aws-amplify/ui-react-storage\";// import the processFile helper function which will create unique filenames based on the file contentsimport { processFile } from \"./utils\";\n//...<FileUploader  accessLevel=\"public\"  maxFileCount={1}  acceptedFileTypes={['image/*']}  processFile={processFile}  onUploadSuccess={({key}) => {    // assuming you have an attribute called 'images' on your data model that is an array of strings    setImage(key)  }}  onFileRemove={({key}) => {    setImage(undefined)  }}/>\n"
        ]
      },
      {
        "title": "FileUploader",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "examples": [
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\n\nexport const App = () => {\n  return (\n    <FileUploader\n      acceptedFileTypes={['image/*']}\n      path=\"public/\"\n      maxFileCount={1}\n      isResumable\n    />\n  );\n};\n\n"
        ]
      },
      {
        "title": "FileUploader",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "examples": [
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { FileUploader } from '@aws-amplify/ui-react-storage';\n\nexport const App = () => {\n  return (\n    <FileUploader\n      acceptedFileTypes={['image/*']}\n      path=\"public/\"\n      maxFileCount={1}\n      isResumable\n    />\n  );\n};\n\n"
        ]
      },
      {
        "title": "Storage Image",
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
        "examples": [
          "import { StorageImage } from '@aws-amplify/ui-react-storage';\nimport '@aws-amplify/ui-react/styles.css';\n\n",
          "import { StorageImage } from '@aws-amplify/ui-react-storage';\n\nexport function App() {\n  return <StorageImage alt=\"sleepy-cat\" path=\"public/cat.jpg\" />;\n}\n\n"
        ]
      },
      {
        "title": "Concepts",
        "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
        "examples": [
          "const schema = a.schema({  Chat: a.model({    name: a.string(),    message: a.hasMany('Message', 'chatId'),  }),  Message: a.model({    text: a.string(),    chat: a.belongsTo('Chat', 'chatId'),    chatId: a.id()  }),}).authorization((allow) => allow.owner());\n",
          "// generate your data client using the Schema from your backendconst client = generateClient<Schema>();\n// list all messagesconst { data } = await client.models.Message.list();\n// create a new messageconst { errors, data: newMessage } = await client.models.Message.create({  text: 'My message text'});\n"
        ]
      },
      {
        "title": "Sandbox Seed",
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/sandbox-environments/seed/",
        "examples": [
          "npm install @aws-amplify/seed --save-dev\n",
          "amplify/  └── seed/      └── seed.ts\n"
        ]
      },
      {
        "title": "About amplify_outputs.json",
        "url": "https://docs.amplify.aws/nextjs/reference/amplify_outputs/",
        "examples": [
          "import { defineBackend } from \"@aws-amplify/backend\";import { auth } from \"./auth/resource\";import { data } from \"./data/resource\";\nconst backend = defineBackend({  auth,   data, });\nbackend.addOutput({  storage: {    aws_region: \"us-east-1\",    bucket_name: \"my-externally-managed-bucket\",  },});\n",
          "import { Amplify } from \"aws-amplify\";import outputs from \"@/amplify_outputs.json\";\nAmplify.configure(outputs);\n"
        ]
      },
      {
        "title": "Copy files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/copy/",
        "examples": [
          "import { copy } from 'aws-amplify/storage';\nconst copyFile = async () => {  try {    const response = await copy({      source: {        path: 'public/album/2024/1.jpg',        // Alternatively, path: ({identityId}) => `protected/${identityId}/album/1.jpg`      },      destination: {        path: 'public/shared/2024/1.jpg',        // Alternatively, path: ({identityId}) => `protected/${identityId}/shared/1.jpg`      },    });  } catch (error) {    console.error('Error', err);  }};\n",
          "import { copy } from 'aws-amplify/storage';\nconst copyFile = async () => {  try {    const response = await copy({      source: {        key: 'srcKey',        accessLevel: 'protected' // optional 'guest', 'private', or 'protected'. Defaults to 'guest'.        targetIdentityId: 'targetIdentityId' // optional, set it to other user's identity ID if copy from other user      },      destination: {        key: 'destKey',        accessLevel: 'protected' // optional 'guest', 'private', or 'protected'. Defaults to 'guest'.      },    });  } catch (error) {    console.error('Error', err);  }};\n"
        ]
      },
      {
        "title": "Download files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download/",
        "examples": [
          "import { getUrl } from 'aws-amplify/storage';\nconst getUrlResult = await getUrl({  path: 'public/album/2024/1.jpg',  // Alternatively, path: ({identityId}) => `protected/${identityId}/album/2024/1.jpg`  options: {    validateObjectExistence?: false,  // Check if object exists before creating a URL    expiresIn?: 20 // validity of the URL, in seconds. defaults to 900 (15 minutes) and maxes at 3600 (1 hour)    useAccelerateEndpoint?: true; // Whether to use accelerate endpoint  },});console.log('signed URL: ', getUrlResult.url);console.log('URL expires at: ', getUrlResult.expiresAt);\n",
          "import { getUrl } from 'aws-amplify/storage';\nconst getUrlResult = await getUrl({  key: 'album/2024/1.jpg',  options: {    accessLevel?: 'protected' , // can be 'private', 'protected', or 'guest' but defaults to `guest`    targetIdentityId?: 'XXXXXXX', // id of another user, if `accessLevel` is `protected`    validateObjectExistence?: false,  // Check if object exists before creating a URL    expiresIn?: 20 // validity of the URL, in seconds. defaults to 900 (15 minutes) and maxes at 3600 (1 hour)    useAccelerateEndpoint?: true; // Whether to use accelerate endpoint  },});console.log('signed URL: ', getUrlResult.url);console.log('URL expires at: ', getUrlResult.expiresAt);\n"
        ]
      },
      {
        "title": "Get file properties",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/get-properties/",
        "examples": [
          "import { getProperties } from 'aws-amplify/storage';\ntry {  const result = await getProperties({    path: 'public/album/2024/1.jpg',    // Alternatively, path: ({identityId}) => `protected/${identityId}/album/2024/1.jpg`  });  console.log('File Properties ', result);} catch (error) {  console.log('Error ', error);}\n",
          "import { getProperties } from 'aws-amplify/storage';\ntry {  const result = await getProperties({    key: 'album/2024/1.jpg',    options: {      accessLevel: 'guest', // defaults to `guest` but can be 'private' | 'protected' | 'guest'      targetIdentityId: 'xxxxxxx' // ID of another user, if accessLevel is `protected`    }  });  console.log('File Properties ', result);} catch (error) {  console.log('Error ', error);}\n"
        ]
      },
      {
        "title": "List files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/list/",
        "examples": [
          "import { list } from 'aws-amplify/storage';\ntry {  const result = await list({    path: 'public/photos/',    // Alternatively, path: ({identityId}) => `protected/${identityId}/photos/`  });} catch (error) {  console.log(error);}\n",
          "import { list } from 'aws-amplify/storage';\ntry {  const result = await list({    prefix: 'photos/',    options:  {      accessLevel: 'protected', // defaults to `guest` but can be 'private' | 'protected' | 'guest'      targetIdentityId: 'xxxxxxx' // the identityId of that user      // targetIdentityId is needed only it accessLevel is protected    }  });} catch (error) {  console.log(error);}\n"
        ]
      },
      {
        "title": "Remove files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/remove/",
        "examples": [
          "import { remove } from 'aws-amplify/storage';\ntry {  await remove({     path: 'public/album/2024/1.jpg',    // Alternatively, path: ({identityId}) => `protected/${identityId}/album/2024/1.jpg`  });} catch (error) {  console.log('Error ', error);}\n",
          "import { remove } from 'aws-amplify/storage';\ntry {  await remove({     key: 'album/2024/1.jpg',     options: {       accessLevel: 'guest' // defaults to `guest` but can be 'private' | 'protected' | 'guest'    }   });} catch (error) {  console.log('Error ', error);}\n"
        ]
      },
      {
        "title": "Upload files",
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload/",
        "examples": [
          "import { uploadData } from 'aws-amplify/storage';\ntry {  const result = await uploadData({    path: 'public/album/2024/1.jpg',     // Alternatively, path: ({identityId}) => `protected/${identityId}/album/2024/1.jpg`    data: file,    options: {      onProgress // Optional progress callback.    }  }).result;  console.log('Succeeded: ', result);} catch (error) {  console.log('Error : ', error);}\n",
          "import { uploadData } from 'aws-amplify/storage';\ntry {  const result = await uploadData({    key: 'album/2024/1.jpg',    data: file,    options: {      accessLevel: 'guest', // defaults to `guest` but can be 'private' | 'protected' | 'guest'      onProgress // Optional progress callback.    }  }).result;  console.log('Succeeded: ', result);} catch (error) {  console.log('Error : ', error);}\n"
        ]
      }
    ]
  },
  "components": {
    "Collection": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/",
        "title": "Customize your data model",
        "usage_context": "belongsTo\n(\n\"Collection\"\n,\n\"collectionId\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/configure-geofencing/",
        "title": "Configure a geofence collection",
        "usage_context": "Configure a geofence collection\nA Geofence is a virtual perimeter for a real-world geographic area. A Geofence contains points or vertices that form a closed boundary, defining an area of interest. Ge..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-postgres-mysql-database/",
        "title": "Connect your app to existing MySQL and PostgreSQL database",
        "usage_context": "linestring\na.string()\ngeometryCollection\na.string()\nNumeric..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-in/",
        "title": "Sign-in",
        "usage_context": "SignInFormElements\nextends\nHTMLFormControlsCollection\n{\nemail..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-up/",
        "title": "Sign-up",
        "usage_context": "SignUpFormElements\nextends\nHTMLFormControlsCollection\n{\nemail..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/existing-resources/",
        "title": "Use existing Amazon Location resources",
        "usage_context": "}\n,\ngeofenceCollections\n:\n{..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/geofences/",
        "title": "Work with geofences",
        "usage_context": "from \"maplibre-gl-js-amplify\", create a new instance of this control and add it to your MapLibre map instance.\nNotes:\nTo use Geofence Controls the user will need to be authenticated with the administr..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "Collection\nCollection provides a way to display items from a data source.\nTheme source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/collections/",
        "title": "Collections",
        "usage_context": "Figma-to-Code\n/\nCollections\nCollections\nCollections are any list of repeating items. You can visually create a collection from any individual component by selecting the..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/slots/",
        "title": "Component slots",
        "usage_context": "can have many\nComment\ns. The AmpligramCollection below will render an Ampligram for each record in the\nPost\nmodel. Then, each related..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/databinding/",
        "title": "Data binding",
        "usage_context": ". The live preview should update to an image from your database. Continue to repeat the same steps for different child elements such as text fields, inputs etc.\nLearn more in the\nCollections documenta..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "isPaginated\nprop is a property of the\n<Collection/>\ncomponent. Similarly, you can use any prop such as\ngap..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/eventhandling/",
        "title": "UI event handler",
        "usage_context": "NewHomeInput\n,\nHomeCollection\n}\nfrom..."
      }
    ],
    "Authenticator": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "title": "Working with files/attachments",
        "usage_context": "{\ntype\nWithAuthenticatorProps\n,\nwithAuthenticator..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-event-api/",
        "title": "Connect to AWS AppSync Events",
        "usage_context": "Connect your frontend application\nAfter the sandbox deploys, connect your frontend application to the Event API. We'll be using the\nAmplify Authenticator component\nto sign in to our Cognito User Pool...."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/",
        "title": "Connect your frontend",
        "usage_context": "Connect your frontend\nConnect your frontend\nUsing the Authenticator\nLearn how to use the Authenticator connected component from the Amplify UI library\nSign-up..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/external-identity-providers/",
        "title": "External identity providers",
        "usage_context": ")\n;\nLearn more about configuring the React Authenticator component for external providers\nConfigure OIDC provider\nTo setup a OIDC provider, you can configure them in your..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/multi-factor-authentication/",
        "title": "Multi-factor authentication",
        "usage_context": ";\nMulti-factor authentication with TOTP\nYou can use Time-based One-Time Password (TOTP) for multi-factor authentication (MFA) in your web or mobile applications. The Amplify Auth category includes sup..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/multi-step-sign-in/",
        "title": "Multi-step sign-in",
        "usage_context": "The\nCONTINUE_SIGN_IN_WITH_TOTP_SETUP\nstep signifies that the user must set up TOTP before they can sign in. The step returns an associated value of type TOTPSetupDetails which must be used to configur..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "title": "Next.js App Router (Server Components)",
        "usage_context": "components\nfolder that will be wrapped in\nwithAuthenticator\n. If the user is logged in, they will be redirected to the index route; otherwise, the\nAmplify UI Authenticator component..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-from-server-runtime/nuxtjs-server-runtime/",
        "title": "Nuxt.js server runtime",
        "usage_context": "import\n{\nAuthenticator\n}\nfrom..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/set-up-auth/",
        "title": "Set up Amplify Auth",
        "usage_context": "amplify_outputs.json\n) to enable your frontend app to connect to your backend resources. The values you configure in your backend authentication resource are set in the generated outputs file to autom..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/sign-up/",
        "title": "Sign-up",
        "usage_context": "}\nPREVIOUS\nUsing the Authenticator\nNEXT\nSign-in..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/using-the-authenticator/",
        "title": "Using the Authenticator",
        "usage_context": "Connect your frontend\n/\nUsing the Authenticator\nUsing the Authenticator\nThe quickest way to get started with Amplify Auth in your frontend application is with the..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/geofences/",
        "title": "Work with geofences",
        "usage_context": "Notes:\nTo use Geofence Controls the user will need to be authenticated with the administrative Cognito user associated with the Geofence Collection you created. Below is an example using React and the..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/account-settings",
        "title": "Account Settings",
        "usage_context": "flows to your application with minimal boilerplate.\nAccount Settings components require end user to be authenticated. You can use the\nAuthenticator\ncomponent to add authentication UI to your applicati..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/authenticator",
        "title": "Authenticator",
        "usage_context": "Authenticator\nAuthenticator component adds complete authentication flows to your application with minimal boilerplate.\nFeedback..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/",
        "title": "Build UI",
        "usage_context": "Figma-to-React\nGenerate React code directly inside Figma using Amplify UI.\nAuthenticator\nThe Authenticator is a connected component that adds complete authentication flows to your application with min..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Private or Protected Buckets\nWhen uploading to private or protected S3 buckets, you'll need to wrap your app in the\nAuthenticator\n, allowing the\nFileUploader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Private or Protected Buckets\nWhen uploading to private or protected S3 buckets, you'll need to wrap your app in the\nAuthenticator\n, allowing the\nFileUploader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
        "title": "Storage Image",
        "usage_context": "Private or Protected Image\nWhen using private or protected images, you'll need to wrap your app in the\nAuthenticator\n, allowing the\nStorageImage..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/eventhandling/",
        "title": "UI event handler",
        "usage_context": "Choose the \"Sign out from this device\" data action\nThe sign out actions work in combination with the\nAuthenticator\ncomponent\n. When you sign out, the Authenticator will appear to request the user to s..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
        "title": "<AIConversation>",
        "usage_context": "to set up your Amplify AI backend.\nConversations required a logged in user, so we recommend using the\n<Authenticator>\ncomponent to easily add authentication flows to your app.\nFormatting Markdown..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
        "title": "Concepts",
        "usage_context": "You can customize your authentication flow with customized sign-in and registration flows, multi-factor authentication (MFA), and third-party social providers. Amplify deploys an Amazon Cognito instan..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/context/",
        "title": "Context",
        "usage_context": "(\n<\nAuthenticator\n>\n<..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/response-components/",
        "title": "Response components",
        "usage_context": "(\n<\nAuthenticator\n>\n<..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/mono-and-multi-repos/",
        "title": "Separate frontend and backend teams",
        "usage_context": "file that contains all the information about your backend at the root of your project.\nTo validate that your frontend can connect to the backend, add the\nAuthenticator\nlogin form to your app.\npages/_a..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "}\nUse a conversation\nAI conversations are scoped to a user, so your users will need to be logged in with Amplify auth. The easiest way to do this is with the Authenticator component.\nPages router\nApp ..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/migrate-to-gen2/",
        "title": "Gen 2 for Gen 1 customers",
        "usage_context": "Yes\nYes\nZero-config Authenticator support\nYes\nYes..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
        "title": "Next.js App Router",
        "usage_context": "amplify/auth/resource.ts\nfile. We've configured it to support email and password login but you can extend it to support a variety of login mechanisms, including Google, Amazon, Sign In With Apple, and..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
        "title": "Next.js Pages Router",
        "usage_context": "amplify/auth/resource.ts\nfile. We've configured it to support email and password login but you can extend it to support a variety of login mechanisms, including Google, Amazon, Sign In With Apple, and..."
      }
    ],
    "Image": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
        "title": "Working with files/attachments",
        "usage_context": "const\n[\nlastImagePath\n]\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
        "title": "Connect to Amazon Bedrock for generative AI use cases",
        "usage_context": "Connect to Amazon Polly for Text-To-Speech APIs\nNEXT\nConnect to Amazon Rekognition for Image Analysis APIs..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
        "title": "Connect to Amazon Rekognition for Image Analysis APIs",
        "usage_context": "Add custom queries and mutations\n/\nConnect to Amazon Rekognition for Image Analysis APIs\nConnect to Amazon Rekognition for Image Analysis APIs\nAmazon Rekognition..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-translate/",
        "title": "Connect to Amazon Translate for language translation APIs",
        "usage_context": ";\nPREVIOUS\nConnect to Amazon Rekognition for Image Analysis APIs\nNEXT\nConnect to an external HTTP endpoint..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/create-campaign/",
        "title": "Create an in-app messaging campaign on AWS Console",
        "usage_context": "Background\n: Control the background color of the in-app message.\nImage URL\n: Add an image to be displayed as part of the in-app message body.\nPrimary button..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/custom-functions/",
        "title": "Custom functions",
        "usage_context": "import\n{\nDockerImage\n,\nDuration..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download-files/",
        "title": "Download files",
        "usage_context": "Download files\nDownload files\nStorage Image React UI Component\nYou can easily display images in your app by using the cloud-connected Storage Image React UI component. This component fetches images se..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/dynamo-db-stream/",
        "title": "DynamoDB Streams",
        "usage_context": "(\n`\nNew Image:\n${\nJSON..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/identify-entity/",
        "title": "Identify entities from images",
        "usage_context": "const\n{\nexternalImageId\n}\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
        "title": "Server-Side Rendering",
        "usage_context": ";\nimport\nImage\nfrom\n'next/image'..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions",
        "title": "Set up Predictions",
        "usage_context": "\"rekognition:DetectLabel\"\n,\n\"rekognition:SearchFacesByImage\"\n,\n\"textract:AnalyzeDocument\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions/",
        "title": "Set up Predictions",
        "usage_context": "\"rekognition:DetectLabel\"\n,\n\"rekognition:SearchFacesByImage\"\n,\n\"textract:AnalyzeDocument\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/location-search/",
        "title": "Work with location search",
        "usage_context": "=\nnew\nImage\n(\n100..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/",
        "title": "Build UI",
        "usage_context": "Authenticator\nThe Authenticator is a connected component that adds complete authentication flows to your application with minimal boilerplate.\nStorage Image\nStorage Image is a connected component that..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Card\n,\nImage\n,\nView..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": ">\n<\nImage\nsrc\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
        "title": "Configure special inputs",
        "usage_context": "{\n// assuming you have an attribute called 'images' on your data model that is an array of strings\nsetImages\n(\nprevImages..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Divider\n,\nImage\n,\nLoader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Divider\n,\nImage\n,\nLoader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/image",
        "title": "Image",
        "usage_context": "Image\nImage is used to display responsive images.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": ">\n<\nImage\nwidth\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
        "title": "Storage Image",
        "usage_context": "Storage Image\nThe Storage Image lets you load images from Amplify Storage.\nReact source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/connect-your-frontend/",
        "title": "Connect your frontend",
        "usage_context": "content\nproperty that provides a flexible way to send different types of content to the AI assistant.\nImage Content\nUse\nimage..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download/",
        "title": "Download files",
        "usage_context": "Frequently Asked Questions\nUsers can run into unexpected issues, so we are giving you advance notice in documentation with links to open issues - please vote for what you need, to help the team priori..."
      }
    ],
    "Text": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/",
        "title": "AI/ML Predictions",
        "usage_context": "Amazon Rekognition\n,\nAmazon Textract\n, and\nAmazon Comprehend..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/configure-location-search/",
        "title": "Configure location search",
        "usage_context": "\"geo:SearchPlaceIndexForPosition\"\n,\n\"geo:SearchPlaceIndexForText\"\n,\n\"geo:SearchPlaceIndexForSuggestions\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
        "title": "Connect to Amazon Bedrock for generative AI use cases",
        "usage_context": "To clean up, you can delete your sandbox by accepting the prompt when terminating the sandbox process in your terminal. Alternatively, you can also use the AWS Amplify console to manage and delete san..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-eventbridge-datasource/",
        "title": "Connect to Amazon EventBridge to send and receive events",
        "usage_context": "Connect to Amazon OpenSearch for search and aggregate queries\nNEXT\nConnect to Amazon Polly for Text-To-Speech APIs..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-polly/",
        "title": "Connect to Amazon Polly for Text-To-Speech APIs",
        "usage_context": "Add custom queries and mutations\n/\nConnect to Amazon Polly for Text-To-Speech APIs\nConnect to Amazon Polly for Text-To-Speech APIs\nAmazon Polly is a text-to-speech (TTS) service offered by Amazon Web ..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
        "title": "Connect to Amazon Rekognition for Image Analysis APIs",
        "usage_context": "Object and Scene Detection\n: Amazon Rekognition can identify thousands of objects and scenes in images and videos, providing valuable context for your media content.\nText Detection and Recognition\n: T..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-translate/",
        "title": "Connect to Amazon Translate for language translation APIs",
        "usage_context": ":\n[\n\"translate:TranslateText\"\n]\n,..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/custom-resources/",
        "title": "Custom resources",
        "usage_context": ":\n{\nText\n:\n{..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/identify-text/",
        "title": "Identify text",
        "usage_context": ":\n{\nfullText\n,\n// String..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/moving-to-production/",
        "title": "Moving to production",
        "usage_context": ", selecting SMS and voice in the navigation pane, and selecting Add phone number in the Destination phone numbers tab. To check if your AWS account is in the SMS sandbox, go to the\nSNS console\n, selec..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "title": "Next.js App Router (Server Components)",
        "usage_context": "Authenticator\n,\nText\n,\nView..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/interactions/set-up-interactions/",
        "title": "Set up Amplify Interactions",
        "usage_context": "{\n\"Effect\": \"Allow\",\n\"Action\": [\"lex:RecognizeText\", \"lex:RecognizeUtterance\"],\n\"Resource\": \"arn:aws:lex:<your-app-region>:<your-account-id>:bot-alias/<your-bot-id>/<your-bot-alias-id>\"\n}..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions",
        "title": "Set up Predictions",
        "usage_context": "Amazon Rekognition\n,\nAmazon Textract\n, and\nAmazon Comprehend..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/set-up-predictions/",
        "title": "Set up Predictions",
        "usage_context": "Amazon Rekognition\n,\nAmazon Textract\n, and\nAmazon Comprehend..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/text-to-speech/",
        "title": "Text to speech",
        "usage_context": "AI/ML Predictions\n/\nText to speech\nText to speech\nNote:..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/transcribe-audio/",
        "title": "Transcribe audio to text",
        "usage_context": "section first, where you will set up the IAM roles with the right policy actions\nWorking with the API\nYou can transcribe a PCM Audio byte buffer to Text, such as a recording from microphone.\nCopy\ncode..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/predictions/translate/",
        "title": "Translate language",
        "usage_context": "(\n{\ntranslateText\n:\n{..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/existing-resources/",
        "title": "Use existing Amazon Location resources",
        "usage_context": "\"Action\": [\n\"geo:SearchPlaceIndexForPosition\",\n\"geo:SearchPlaceIndexForText\"\n],\n\"Resource\": \"arn:aws:geo:<your-geo-region>:<your-account-id>:place-index/<your-index-name>\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/location-search/",
        "title": "Work with location search",
        "usage_context": "Search by text, address, business name, city, and more\nThe\nGeo.searchByText()\nAPI enables you to search for places or points of interest by free-form text, such as an address, name, city, or region.\nC..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/badge",
        "title": "Badge",
        "usage_context": "small\nlarge\nText\nCopy\n<..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "isDisabled\nisLoading\nloadingText\nCopy\n<..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Badge\n,\nText\n,\nButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "Heading\n,\nText\n}\nfrom..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
        "title": "Configure special inputs",
        "usage_context": "/>\nIf you want your data model to have only one image instead of an array of images, look for the\n<TextField>\ncomponent with\nvalue={image}..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "Amplify UI library\n. The generated form provides a mechanism to override properties for each individual input component, like\nTextField\n,\nTextAreaField..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "title": "Dark Mode",
        "usage_context": "Card\n,\nText\n,\nToggleButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/divider",
        "title": "Divider",
        "usage_context": ">\n<\nText\n>\nBefore..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "onChange\nhandlers. For example\nTextFieldzoh\nis the name of the \"name input field\" component.\nCopy..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.2.0: July 25 2022\nUpdate supported Amplify UI React version to 3.1.0.\nAdd TextAreaField primitive component. You can change any existing TextField into a TextAreaField by selecting the desired TextF..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": ">\nName\ndisplayText?\nDescription\nText to override in the component...."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": ">\nName\ndisplayText?\nDescription\nText to override in the component...."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/heading",
        "title": "Heading",
        "usage_context": "Demo\nHeading text\nDisplayed Text\nlevel\n1..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "Icon\n,\nText\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/in-app-messaging",
        "title": "In-App Messaging",
        "usage_context": "import\n{\nText\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/loader",
        "title": "Loader",
        "usage_context": ";\nTo hide the percentage text, set\nisPercentageTextHidden\nto\ntrue..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming",
        "title": "Overview",
        "usage_context": "import\n{\nText\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/responsive",
        "title": "Responsive Design",
        "usage_context": ". If only a few styles are specified, all the breakpoints above will have the same style.\n<\nText\nas\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": "ScrollView\n,\nText\n,\n}..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "Accessibility / Label behavior\nPlaceholder\nText that appears in the form control when it has no value set.\nsearch\nCopy..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/selectfield",
        "title": "SelectField",
        "usage_context": "quiet\nlabel\ndescriptiveText\nerrorMessage\nselectSize..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "SliderField\n,\nText\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/switchfield",
        "title": "SwitchField",
        "usage_context": "import\n{\nText\n,\nSwitchField..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/table",
        "title": "Table",
        "usage_context": "selector, data attributes, or style props.\nUsing a class selector:\nSmaller Text\nSmaller Text\nCopy..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/text",
        "title": "Text",
        "usage_context": "Text\nText is used to display text in an interface, and renders a <p> element by default.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textareafield",
        "title": "TextAreaField",
        "usage_context": "TextAreaField\nTextAreaField allows users to input multiline text content.\nReact source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "TextField\nTextField allows users to input text content.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/theme-provider",
        "title": "ThemeProvider",
        "usage_context": "Heading\n,\nText\n,\nThemeProvider..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
        "title": "<AIConversation>",
        "usage_context": ">\n<\nText\n>\nI am your virtual assistant, ask me any questions you like!..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/connect-your-frontend/",
        "title": "Connect your frontend",
        "usage_context": "Schema['myChat']['streamEventType']\nand is a union of the following types:\nConversationStreamTextEvent\nAs text is streamed back to the client, the\nnext..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "Loader\n,\nText\n,\nTextAreaField..."
      }
    ],
    "Link": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/reference/",
        "title": "API Reference",
        "usage_context": "void\n>\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/reference/",
        "title": "API Reference",
        "usage_context": "Returns\nPutOperation\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/reference/",
        "title": "API Reference",
        "usage_context": "Returns\nPutOperation\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/reference/",
        "title": "API Reference",
        "usage_context": "void\n>\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/reference/",
        "title": "API Reference",
        "usage_context": "UploadDataOutput\nOutput type for S3 uploadData API.\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/reference/",
        "title": "API Reference",
        "usage_context": "Returns\nvoid\nLink Color Legend\nInterface\nReference..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "Default\nPrimary\nLink\nColorTheme\nDefault..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/collections/",
        "title": "Collections",
        "usage_context": "collection\nfrom a component\nLink collection to a data model\nSet filters to customize what data should be displayed\nSet sort conditions to customize how the data should be displayed..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": ": This is for demonstration purposes only, to show designers how to use our components to build entire pages.\nPlease follow the README in our Figma file to learn how to create your components to optim..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/link",
        "title": "Link",
        "usage_context": "Link\nLink renders an anchor element <a> by default and is primarily used for navigation.\nARIA pattern..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/migrate-to-gen2/",
        "title": "Gen 2 for Gen 1 customers",
        "usage_context": "Yes\nYes\nEmail Verification - Link\nYes\nYes..."
      }
    ],
    "View": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/reference/",
        "title": "API Reference",
        "usage_context": "session\ntracker), and page view events (via the\npageView\ntracker).\nParameters..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/analytics/auto-track-sessions/",
        "title": "Automatically track sessions",
        "usage_context": "true\n,\n// REQUIRED, the event type, it's one of 'event', 'pageView' or 'session'\ntype\n:..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
        "title": "Connect to Amazon OpenSearch for search and aggregate queries",
        "usage_context": "=\n{\nstreamViewType\n:\ndynamodb..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/integrate-application/",
        "title": "Integrate your application",
        "usage_context": "Button\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/examples/microsoft-entra-id-saml/",
        "title": "Microsoft Entra ID (SAML)",
        "usage_context": "MicrosoftEntraIDSAML\n, created after configuring Amplify Auth with the Entra ID SAML provider. Select\nView signing certificate\nand\ndownload as .crt..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/google-migration/",
        "title": "Migrate from Google Maps",
        "usage_context": "Authorization\nWhen using Google Maps Platform or other similar services like Mapbox you will first be prompted to go to the Google Cloud Console to set up APIs and create an API key where you will the..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
        "title": "Next.js App Router (Server Components)",
        "usage_context": "Text\n,\nView\n,\nuseAuthenticator..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/optimistic-ui/",
        "title": "Optimistic UI",
        "usage_context": ";\nfunction\nRealEstatePropertyDetailView\n(\n)..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/set-up-geo/",
        "title": "Set up Amplify Geo",
        "usage_context": "Configure your application\nTo display a map in your application, you can use the\nAmplify React MapView component\nor the\nMapLibre GL..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/geofences/",
        "title": "Work with geofences",
        "usage_context": "Note:\nWhen using the\nAmplify React MapView component\nyou can use the\nuseControl..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/maps/",
        "title": "Work with maps",
        "usage_context": "Note:\nFor React, you can use the\nAmplify React MapView component\nTo render a map, the\nMapLibre GL..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "amplify-alert__heading\nDescription\nClass applied to the heading View\nClass\namplify-alert__body..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "Icon\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Image\n,\nView\n,\nHeading..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "/>\n<\nView\npadding\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "comments\n, and\nCommentViewCollection\n. These are bound to the\nPost..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/flex",
        "title": "Flex",
        "usage_context": ">\n<\nView\nheight\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/grid",
        "title": "Grid",
        "usage_context": "Grid\n,\nView\n,\nuseTheme..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "export\nconst\nViewboxExample\n=\n(..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/image",
        "title": "Image",
        "usage_context": "=\n\"\nView from road to Milford Sound, New Zealand.\n  Glittering stream with old log, snowy mountain peaks\n  tower over a green field...."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": "MenuItem\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/responsive",
        "title": "Responsive Design",
        "usage_context": "Flex\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": "ScrollView\nScrollView allows content to be scrollable.\nReact source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/switchfield",
        "title": "SwitchField",
        "usage_context": "SwitchField\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textareafield",
        "title": "TextAreaField",
        "usage_context": "TextAreaField\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "TextField\n,\nView\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/view",
        "title": "View",
        "usage_context": "View\nView is the foundational component for Amplify UI primitives. While View renders a <div> by default, it can render any HTML element and supports styling via props.\nReact source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/deploy-and-host/hosting/",
        "title": "Frontend hosting",
        "usage_context": "AWS Amplify Hosting is a fully managed CI/CD and hosting service for fast, secure, and reliable static and server-side rendered apps that scale with your business. This service supports modern web fra..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "TextAreaField\n,\nView\n,\n}..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-app-router-client-components/",
        "title": "Next.js App Router",
        "usage_context": "Save and deploy\n.\n3. View deployed app\nWhile you are waiting for your app to deploy (~5 mins)\nLearn about the project structure..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/start/quickstart/nextjs-pages-router/",
        "title": "Next.js Pages Router",
        "usage_context": "Save and deploy\n.\n3. View deployed app\nWhile you are waiting for your app to deploy (~5 mins)\nLearn about the project structure..."
      }
    ],
    "Table": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/",
        "title": "Add custom queries and mutations",
        "usage_context": ")\nconst\nexternalTable\n=\ndynamoDb..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
        "title": "Connect to Amazon OpenSearch for search and aggregate queries",
        "usage_context": "highlighted code example\nconst\ntodoTable\n=\nbackend..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
        "title": "Connect to external Amazon DynamoDB data sources",
        "usage_context": "The\na.model()\ndata model allows you to define a GraphQL schema for an AWS AppSync API where models are backed by DynamoDB Tables managed by Amplify. The generated schema also provides queries and muta..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/deletion-backup-resources/",
        "title": "Deletion protection and Backup resources",
        "usage_context": "const\n{\namplifyDynamoDbTables\n}\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/dynamo-db-stream/",
        "title": "DynamoDB Streams",
        "usage_context": ";\nconst\ntodoTable\n=\nbackend..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/override-resources/",
        "title": "Modify Amplify-generated AWS resources",
        "usage_context": "cfnResources\n.\namplifyDynamoDbTables\n)\n)..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/table",
        "title": "Table",
        "usage_context": "Table\nTable displays tabular data using the HTML <table> element and related elements.\nARIA pattern..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/concepts/models/",
        "title": "Models",
        "usage_context": "Converse API\nto leverage a unified API across models.\nTable with supported models for Amplify AI kit\nProvider\nModel..."
      }
    ],
    "Button": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/advanced-workflows/",
        "title": "Advanced workflows",
        "usage_context": "id\n.\nrenderButton\n(\ndocument..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/in-app-messaging/integrate-application/",
        "title": "Integrate your application",
        "usage_context": "import\n{\nButton\n,\nView..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/optimistic-ui/",
        "title": "Optimistic UI",
        "usage_context": "styles\n.\ndetailViewButton\n}\nonClick..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
        "title": "Server-Side Rendering",
        "usage_context": "Sign up button\nSign out button\nsrc/components/SignInButton.tsx\nCopy\nsrc/components/SignInButton.tsx..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "amplify-alert__dismiss\nDescription\nClass applied to the close Button\n--amplify-components-alert-align-items\n--amplify-components-alert-background-color..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "Button\nButton allows users to perform actions.\nARIA pattern..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Text\n,\nButton\n,\nuseTheme..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": ">\n<\nButton\nvariation\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "Copy\nhighlighted code example\nClearButton\n:\n{..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "title": "Dark Mode",
        "usage_context": "Text\n,\nToggleButton\n,\nToggleButtonGroup..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/databinding/",
        "title": "Data binding",
        "usage_context": "4. Child properties\nClicking on any child elements within the live preview allows you to set child prop values. You can either set static values or pass prop values from the parent component. Child pr..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "=\n{\n\"Button\"\n:\n{..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.3.0: June 21 2023\nThis update coincides with a major change to the Figma plugin which now allows for generating Amplify UI React code inside Figma!\nAdded a Theme page to display Amplify UI theme val..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "string\nName\ngetUploadButtonText?\nDescription\nType..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "string\nName\ngetUploadButtonText?\nDescription\nType..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/flex",
        "title": "Flex",
        "usage_context": "Usage\nImport the Flex primitive.\nButton 1\nButton 2\nButton 3..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "import\n{\nButton\n,\nIcon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/in-app-messaging",
        "title": "In-App Messaging",
        "usage_context": "import\n{\nButton\n,\nFlex..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": "Customize Menu button\nThe default Menu button can be customized by importing the\nMenuButton\ncomponent and passing it to the\nMenu..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming",
        "title": "Overview",
        "usage_context": "import\n{\nButton\n,\nCard..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": "import\n{\nButton\n,\nCard..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "default\nquiet\nhasSearchButton\nhasSearchIcon\nlabelHidden..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "Flex\n,\nButton\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/switchfield",
        "title": "SwitchField",
        "usage_context": "SwitchField\n,\nButton\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/tabs",
        "title": "Tabs",
        "usage_context": "Tabs\n,\nButton\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textareafield",
        "title": "TextAreaField",
        "usage_context": "import\n{\nButton\n,\nFlex..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "import\n{\nButton\n,\nFlex..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/theme-provider",
        "title": "ThemeProvider",
        "usage_context": "\"purple.80\"\n)\nThemed Button\nCopy\nimport..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/togglebutton",
        "title": "ToggleButton",
        "usage_context": "ToggleButton\nToggleButton allows users to toggle the on/off state for some configuration.\nARIA pattern..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/context/",
        "title": "Context",
        "usage_context": "(\n<\nButton\nonClick\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "import\n{\nButton\n,\nFlex..."
      }
    ],
    "Placeholder": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/functions/examples/kinesis-stream/",
        "title": "Amazon Kinesis Data Streams",
        "usage_context": ")\n;\n// Placeholder for an async process\nreturn\ndata..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "9\n}\nsearchPlaceholder\n=\n\"..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.3.0: June 21 2023\nThis update coincides with a major change to the Figma plugin which now allows for generating Amplify UI React code inside Figma!\nAdded a Theme page to display Amplify UI theme val..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/placeholder",
        "title": "Placeholder",
        "usage_context": "Placeholder\nPlaceholder can be used to fill out an interface while the content is loading.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "since the input value is under your control.\nAccessibility / Label behavior\nPlaceholder\nText that appears in the form control when it has no value set.\nsearch..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/selectfield",
        "title": "SelectField",
        "usage_context": ")\n;\nPlaceholder\nText that appears in the form control when it has no value set.\nplaceholderExample..."
      }
    ],
    "Flex": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-bedrock/",
        "title": "Connect to Amazon Bedrock for generative AI use cases",
        "usage_context": "is a fully managed service that removes the complexity of using foundation models (FMs) for generative AI development. It acts as a central hub, offering a curated selection of high-performing FMs fro..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "Alert\n,\nFlex\n,\nThemeProvider..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/badge",
        "title": "Badge",
        "usage_context": "Theme\n,\nFlex\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "Button\n,\nFlex\n,\nIcon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Heading\n,\nFlex\n,\nBadge..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": ">\n<\nFlex\n>\n{..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/databinding/",
        "title": "Data binding",
        "usage_context": "1. Elements tree\nThe elements tree shows the composition of the component in Figma. Each layer in Figma maps to a specific Amplify UI primitive. For example, a frame in Figma maps to a\n<Flex>\ncomponen..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/divider",
        "title": "Divider",
        "usage_context": "Copy\n<\nFlex\ndirection\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Button\n,\nFlex\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Button\n,\nFlex\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/flex",
        "title": "Flex",
        "usage_context": "Flex\nFlex provides a layout container using CSS Flexbox.\nReact source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/heading",
        "title": "Heading",
        "usage_context": "Heading\n,\nFlex\n,\nThemeProvider..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "Icon\n,\nFlex\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/in-app-messaging",
        "title": "In-App Messaging",
        "usage_context": "Button\n,\nFlex\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/link",
        "title": "Link",
        "usage_context": "Link\n,\nFlex\n,\nHeading..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/loader",
        "title": "Loader",
        "usage_context": "import\n{\nFlex\n,\nLoader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": "import\n{\nFlex\n,\nMenu..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/placeholder",
        "title": "Placeholder",
        "usage_context": "import\n{\nFlex\n,\nPlaceholder..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/rating",
        "title": "Rating",
        "usage_context": "Rating\n,\nFlex\n,\nThemeProvider..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/responsive",
        "title": "Responsive Design",
        "usage_context": "import\n{\nFlex\n,\nView..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": "Card\n,\nFlex\n,\nImage..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "SearchField\n,\nFlex\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/selectfield",
        "title": "SelectField",
        "usage_context": "SelectField\n,\nFlex\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "SliderField\n,\nFlex\n,\nButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/stepperfield",
        "title": "StepperField",
        "usage_context": "Using style props:\nAll style props will be applied to the\nFlex\nwrapper of the\nStepperField..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/switchfield",
        "title": "SwitchField",
        "usage_context": "Button\n,\nFlex\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/table",
        "title": "Table",
        "usage_context": "import\n{\nFlex\n,\nTable..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/tabs",
        "title": "Tabs",
        "usage_context": "import\n{\nFlex\n,\nTabs..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/text",
        "title": "Text",
        "usage_context": "Text\n,\nFlex\n,\nThemeProvider..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textareafield",
        "title": "TextAreaField",
        "usage_context": "import\n{\nFlex\n,\nTextAreaField..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "Button\n,\nFlex\n,\nTextField..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/togglebutton",
        "title": "ToggleButton",
        "usage_context": "import\n{\nFlex\n,\nToggleButton..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "Button\n,\nFlex\n,\nHeading..."
      }
    ],
    "Pagination": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
        "title": "Connect to external Amazon DynamoDB data sources",
        "usage_context": "Whether to use consistent reads\nquery direction (forward or backward)\nPagination token\nExample:\nCopy..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/query-data/",
        "title": "Read application data",
        "usage_context": ";\nIf you're building a React application, you can use the\nusePagination\nhook in Amplify UI to help with managing the pagination user experience.\nCopy..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "}\n;\nPagination\nA Collection can be paginated by adding a special\nisPaginated..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/collections/",
        "title": "Collections",
        "usage_context": "Search\nCollections have limited\nPagination\nAdditionally, if your data has any relationships, APIs without DataStore require a query depth of 4 or greater. To update your codegen query depth:\nNavigate ..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "Example use cases\nThe following code snippets show how you can handle specific scenarios in your app.\nAdd Pagination to a collection\nCopy\ncode example..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/pagination",
        "title": "Pagination",
        "usage_context": "Pagination\nPagination allows users to navigate large sets of data.\nTheme source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/history/",
        "title": "Conversation History",
        "usage_context": "updatedAt\n.\nPagination\nThe result of\n.list()..."
      }
    ],
    "StorageImage": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/download-files/",
        "title": "Download files",
        "usage_context": "import\n{\nStorageImage\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storageimage",
        "title": "Storage Image",
        "usage_context": "Next.js Pages Router,\nno changes are required to use Amplify UI components.\nTo use the StorageImage component, import it into your React application with the included styles.\nnpm\nyarn..."
      }
    ],
    "FileUploader": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/upload-files/",
        "title": "Upload files",
        "usage_context": "import\n{\nFileUploader\n}\nfrom..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
        "title": "Configure special inputs",
        "usage_context": ".\nAdding it to your form\nTo use the FileUploader component with an autogenerated form you will first need a data model that has an attribute that is either a string or an array of strings (\na.string()..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "FileUploader\nThe FileUploader lets your users upload and manage files in the cloud.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "FileUploader\nThe FileUploader lets your users upload and manage files in the cloud.\nTheme source..."
      }
    ],
    "Rating": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/q-developer/",
        "title": "Use Amazon Q Developer with Amplify",
        "usage_context": "Step 2:\nIn a new line below the commented schema, enter a comment to generate the schema using natural language. For example,\ngenerate a restaurant model with the following fields: id, name, descripti..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "Alert\nand\nRating\n, you can use the\nIconProvider..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/rating",
        "title": "Rating",
        "usage_context": "Rating\nRating displays a read-only star rating of a product or service.\nTheme source..."
      }
    ],
    "Icon": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/geo/location-search/",
        "title": "Work with location search",
        "usage_context": ")\n;\nCustomize Search Icons\nYou can customize the search icons used by the\nmaplibre-gl-geocoder..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "Body\nisDismissable\nhasIcon\nCopy\n<..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "Button\n>\nIcon buttons\nIcons can be added to buttons and will adapt to the surrounding font-size.\nSave..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.0.0: March 2 2022\nFixing primitive component layer names to map properly to React props.\nRemoving the Icon primitive and adding a custom Icon component. This change allows for easier icon customizat..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Loader\n,\nIcon\n,\n}..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Loader\n,\nIcon\n,\n}..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "Icon\nIcon is used to display Scalable Vector Graphics (SVG).\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/in-app-messaging",
        "title": "In-App Messaging",
        "usage_context": "CSSProperties\nName\ncloseIconButton?\nDescription\nstyle applied to the close button..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": "}\n;\nIcons\nCopy\nimport..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/pagination",
        "title": "Pagination",
        "usage_context": "}\n;\nIcons\nPage\n:..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/rating",
        "title": "Rating",
        "usage_context": "}\n;\nCustom Icon\nA custom icon can be used in the Rating component using the\nicon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "quiet\nhasSearchButton\nhasSearchIcon\nlabelHidden\nisDisabled..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/selectfield",
        "title": "SelectField",
        "usage_context": ")\n;\nIcon\nYou can change the icon used to expand the SelectField by using the\nicon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "}\n;\nIcons\nTo add icons on either side of the SliderField, you may use the\nouterStartComponent..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/stepperfield",
        "title": "StepperField",
        "usage_context": ")\n;\nIcons\nThemed stepper\nCopy..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/tabs",
        "title": "Tabs",
        "usage_context": "Badge\n,\nIcon\n,\nTabs..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "Inner components (icons)\nCompose\nFieldGroupIcon\nor\nFieldGroupIconButton..."
      }
    ],
    "AccountSettings": [
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/account-settings",
        "title": "Account Settings",
        "usage_context": "Copy\nStep 3. Add Account Settings Components\nGet started by using AccountSettings with either the\nChangePassword\nor..."
      }
    ],
    "Alert": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "Alert\nAlert displays a brief message in a way that attracts the user’s attention without interrupting their task.\nARIA pattern..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "Note\nIcons should be thought of as plain text; they inherit the size and color of their context or can be set directly. Icons themselves do not have any state or handlers, those should be at a higher ..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/responsive",
        "title": "Responsive Design",
        "usage_context": "hook.\nThe hook will accept the object or array syntax and return the value of the current breakpoint.\nResponsive Alert\nCopy\nimport..."
      }
    ],
    "Heading": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/alert",
        "title": "Alert",
        "usage_context": "warning\nsuccess\nHeading\nBody\nisDismissable..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "View\n,\nHeading\n,\nFlex..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "/>\n<\nHeading\npadding\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/heading",
        "title": "Heading",
        "usage_context": "Heading\nHeading renders semantic section heading text representing six levels.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/link",
        "title": "Link",
        "usage_context": "Flex\n,\nHeading\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/theme-provider",
        "title": "ThemeProvider",
        "usage_context": ".\nTheming overview\nHeading text\nSome sample text for this card.\nCopy..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "Flex\n,\nHeading\n,\nLoader..."
      }
    ],
    "Badge": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/badge",
        "title": "Badge",
        "usage_context": "Badge\nBadge is a color-coded element used to display a status or message about an item.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Flex\n,\nBadge\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "(\n<\nBadge\nkey\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/icon",
        "title": "Icon",
        "usage_context": "import\n{\nDiJsBadge\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/tabs",
        "title": "Tabs",
        "usage_context": "import\n{\nBadge\n,\nIcon..."
      }
    ],
    "Loader": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/button",
        "title": "Button",
        "usage_context": "amplify-button__loader-wrapper\nDescription\nClass applied to the Loader component within the Button Loading state\n--amplify-components-button-active-background-color\n--amplify-components-button-active-..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.3.0: June 21 2023\nThis update coincides with a major change to the Figma plugin which now allows for generating Amplify UI React code inside Figma!\nAdded a Theme page to display Amplify UI theme val..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Image\n,\nLoader\n,\nIcon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Image\n,\nLoader\n,\nIcon..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/loader",
        "title": "Loader",
        "usage_context": "Loader\nLoader provides a visual cue to the user that the system is processing, awaiting a result or working to fulfill a request.\nTheme source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "Heading\n,\nLoader\n,\nText..."
      }
    ],
    "Card": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/card",
        "title": "Card",
        "usage_context": "Card\nCard groups related pieces of content.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "(\n<\nCard\nkey\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "title": "Dark Mode",
        "usage_context": "ThemeProvider\n,\nCard\n,\nText..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "import\n{\nCard\n,\nButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "import\n{\nCard\n,\nButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/grid",
        "title": "Grid",
        "usage_context": ">\n<\nCard\ncolumnStart\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming",
        "title": "Overview",
        "usage_context": "Button\n,\nCard\n}\nfrom..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/scrollview",
        "title": "ScrollView",
        "usage_context": "Button\n,\nCard\n,\nFlex..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/theming/theme-provider",
        "title": "ThemeProvider",
        "usage_context": "import\n{\nCard\n,\nHeading..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/ai-conversation/",
        "title": "<AIConversation>",
        "usage_context": "{\n<\nCard\nvariation\n=..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/conversation/response-components/",
        "title": "Response components",
        "usage_context": "{\n{\nWeatherCard\n:\n{..."
      }
    ],
    "Divider": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": ">\n<\nDivider\npadding\n=..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/divider",
        "title": "Divider",
        "usage_context": "Divider\nDivider helps organize content, separate sections and establish visual rhythm.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "Text\n,\nDivider\n,\nImage..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "Text\n,\nDivider\n,\nImage..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": ">\n<\nDivider\n/>\n<..."
      }
    ],
    "Grid": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/collection",
        "title": "Collection",
        "usage_context": "}\n;\nGrid\nThe\ngrid..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/grid",
        "title": "Grid",
        "usage_context": "Grid\nGrid provides a layout container using CSS Grid.\nReact source..."
      }
    ],
    "TextField": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/special-inputs/",
        "title": "Configure special inputs",
        "usage_context": "/>\nIf you want your data model to have only one image instead of an array of images, look for the\n<TextField>\ncomponent with\nvalue={image}..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "Amplify UI library\n. The generated form provides a mechanism to override properties for each individual input component, like\nTextField\n,\nTextAreaField..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/override/",
        "title": "Extend with code",
        "usage_context": "onChange\nhandlers. For example\nTextFieldzoh\nis the name of the \"name input field\" component.\nCopy..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.2.0: July 25 2022\nUpdate supported Amplify UI React version to 3.1.0.\nAdd TextAreaField primitive component. You can change any existing TextField into a TextAreaField by selecting the desired TextF..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textfield",
        "title": "TextField",
        "usage_context": "TextField\nTextField allows users to input text content.\nTheme source..."
      }
    ],
    "Radio": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "Select Fields\n,\nRadio Group Fields\n, and\nAutocomplete Fields..."
      }
    ],
    "SelectField": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "TextAreaField\n,\nSelectField\n. You can override any props to those components with the\noverrides..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/selectfield",
        "title": "SelectField",
        "usage_context": "SelectField\nSelectField allows users to select from a menu of options.\nTheme source..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "5\nSubmit\nDisable SelectField\nCopy\nimport..."
      }
    ],
    "TextAreaField": [
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/formbuilder/customize/",
        "title": "Customize form inputs",
        "usage_context": "TextField\n,\nTextAreaField\n,\nSelectField..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/build-ui/uibuilder/",
        "title": "Figma-to-Code",
        "usage_context": "1.2.0: July 25 2022\nUpdate supported Amplify UI React version to 3.1.0.\nAdd TextAreaField primitive component. You can change any existing TextField into a TextAreaField by selecting the desired TextF..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/textareafield",
        "title": "TextAreaField",
        "usage_context": "TextAreaField\nTextAreaField allows users to input multiline text content.\nReact source..."
      },
      {
        "url": "https://docs.amplify.aws/nextjs/ai/set-up-ai/",
        "title": "Set up AI",
        "usage_context": "Text\n,\nTextAreaField\n,\nView..."
      }
    ],
    "ToggleButton": [
      {
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "title": "Dark Mode",
        "usage_context": "Text\n,\nToggleButton\n,\nToggleButtonGroup..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "import\n{\nToggleButtonGroup\n,\nToggleButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "import\n{\nToggleButtonGroup\n,\nToggleButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/togglebutton",
        "title": "ToggleButton",
        "usage_context": "ToggleButton\nToggleButton allows users to toggle the on/off state for some configuration.\nARIA pattern..."
      }
    ],
    "ToggleButtonGroup": [
      {
        "url": "https://ui.docs.amplify.aws/react/theming/dark-mode",
        "title": "Dark Mode",
        "usage_context": "ToggleButton\n,\nToggleButtonGroup\n,\n}..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "import\n{\nToggleButtonGroup\n,\nToggleButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "import\n{\nToggleButtonGroup\n,\nToggleButton..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/components/togglebutton",
        "title": "ToggleButton",
        "usage_context": "}\n;\nToggleButtonGroup\nYou can group related Toggle buttons easily with a\nToggleButtonGroup..."
      }
    ],
    "StorageManager": [
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager",
        "title": "FileUploader",
        "usage_context": "@aws-amplify/ui-react-storage\nversion 3.3.0, the\nStorageManager\ncomponent has been renamed to\nFileUploader..."
      },
      {
        "url": "https://ui.docs.amplify.aws/react/connected-components/storage/fileuploader",
        "title": "FileUploader",
        "usage_context": "@aws-amplify/ui-react-storage\nversion 3.3.0, the\nStorageManager\ncomponent has been renamed to\nFileUploader..."
      }
    ],
    "Menu": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/menu",
        "title": "Menu",
        "usage_context": "Menu\nMenu provides a way for users to navigate and select actions within an application.\nARIA pattern..."
      }
    ],
    "VisuallyHidden": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/pagination",
        "title": "Pagination",
        "usage_context": "aria-label\nattribute or by using the\nVisuallyHidden\nprimitive.\nUse the following props to customize these labels:..."
      }
    ],
    "SearchField": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/searchfield",
        "title": "SearchField",
        "usage_context": "SearchField\nSearchField accepts query text for search.\nReact source..."
      }
    ],
    "SliderField": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/sliderfield",
        "title": "SliderField",
        "usage_context": "SliderField\nSliderField allows users to select a value within a defined range.\nARIA pattern..."
      }
    ],
    "StepperField": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/stepperfield",
        "title": "StepperField",
        "usage_context": "StepperField\nStepperField allows users to increment or decrement a number input.\nARIA pattern..."
      }
    ],
    "SwitchField": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/switchfield",
        "title": "SwitchField",
        "usage_context": "SwitchField\nSwitchField allows users to toggle an input.\nARIA pattern..."
      }
    ],
    "Tabs": [
      {
        "url": "https://ui.docs.amplify.aws/react/components/tabs",
        "title": "Tabs",
        "usage_context": "Tabs\nTabs allow users to navigate between sections of related content.\nARIA pattern..."
      }
    ]
  },
  "common_tasks": {
    "setup_authentication": {
      "description": "Set up user authentication",
      "keywords": [
        "auth",
        "cognito",
        "signin",
        "signup"
      ],
      "categories": [
        "backend",
        "auth"
      ],
      "relevant_docs": [
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/reference/",
          "title": "API Reference",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/advanced-workflows/",
          "title": "Advanced workflows",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/concepts/multi-factor-authentication/",
          "title": "Multi-factor authentication",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/auth/connect-your-frontend/multi-step-sign-in/",
          "title": "Multi-step sign-in",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/",
          "title": "Server-Side Rendering",
          "relevance": 4
        }
      ]
    },
    "create_api": {
      "description": "Create GraphQL or REST API",
      "keywords": [
        "api",
        "graphql",
        "rest",
        "endpoint"
      ],
      "categories": [
        "backend",
        "api"
      ],
      "relevant_docs": [
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-API/",
          "title": "Connect your app code to API",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/data-modeling/",
          "title": "Customize your data model",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
          "title": "Working with files/attachments",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/",
          "title": "API (REST)",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/add-aws-services/rest-api/reference/",
          "title": "API Reference",
          "relevance": 3
        }
      ]
    },
    "upload_files": {
      "description": "Handle file uploads",
      "keywords": [
        "storage",
        "upload",
        "s3",
        "file"
      ],
      "categories": [
        "backend",
        "storage"
      ],
      "relevant_docs": [
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/working-with-files/",
          "title": "Working with files/attachments",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/reference/",
          "title": "API Reference",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
          "title": "Connect to Amazon OpenSearch for search and aggregate queries",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-amazon-rekognition/",
          "title": "Connect to Amazon Rekognition for Image Analysis APIs",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/storage/authorization/",
          "title": "Customize authorization rules",
          "relevance": 4
        }
      ]
    },
    "deploy_app": {
      "description": "Deploy application",
      "keywords": [
        "deploy",
        "hosting",
        "amplify console"
      ],
      "categories": [
        "deployment"
      ],
      "relevant_docs": [
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/server-side-rendering/nextjs-app-router-server-components/",
          "title": "Next.js App Router (Server Components)",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/how-amplify-works/concepts/",
          "title": "Concepts",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/cross-account-deployments/",
          "title": "Cross-account deployments",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/custom-pipelines/",
          "title": "Custom pipelines",
          "relevance": 3
        },
        {
          "url": "https://docs.amplify.aws/nextjs/deploy-and-host/fullstack-branching/pr-previews/",
          "title": "Fullstack previews",
          "relevance": 3
        }
      ]
    },
    "manage_data": {
      "description": "Work with databases",
      "keywords": [
        "data",
        "model",
        "schema",
        "dynamodb"
      ],
      "categories": [
        "backend",
        "data"
      ],
      "relevant_docs": [
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/",
          "title": "Add custom queries and mutations",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/batch-ddb-operations/",
          "title": "Batch DynamoDB Operations",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/search-and-aggregate-queries/",
          "title": "Connect to Amazon OpenSearch for search and aggregate queries",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/custom-business-logic/connect-http-datasource/",
          "title": "Connect to an external HTTP endpoint",
          "relevance": 4
        },
        {
          "url": "https://docs.amplify.aws/nextjs/build-a-backend/data/connect-to-existing-data-sources/connect-external-ddb-table/",
          "title": "Connect to external Amazon DynamoDB data sources",
          "relevance": 4
        }
      ]
    }
  }
}